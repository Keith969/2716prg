

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 12 17:06:29 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1789
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    70                           	dabs	1,0xCA0,32
    71                           	dabs	1,0xC20,80
    72                           	dabs	1,0xBA0,80
    73                           	dabs	1,0xB20,80
    74                           	dabs	1,0xAA0,80
    75                           	dabs	1,0xA20,80
    76                           	dabs	1,0x9A0,80
    77                           	dabs	1,0x920,80
    78                           	dabs	1,0x8A0,80
    79                           	dabs	1,0x820,80
    80                           	dabs	1,0x7A0,80
    81                           	dabs	1,0x720,80
    82                           	dabs	1,0x6A0,80
    83                           	dabs	1,0x650,32
    84                           	dabs	1,0x23F0,0,_queue
    85                           	dabs	1,0x7E,2
    86     0000                     
    87                           ; Generated 07/09/2023 GMT
    88                           ; 
    89                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC16F1789 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121     0000                     	;# 
   122     0001                     	;# 
   123     0002                     	;# 
   124     0003                     	;# 
   125     0004                     	;# 
   126     0005                     	;# 
   127     0006                     	;# 
   128     0007                     	;# 
   129     0008                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000F                     	;# 
   137     0010                     	;# 
   138     0011                     	;# 
   139     0012                     	;# 
   140     0013                     	;# 
   141     0014                     	;# 
   142     0015                     	;# 
   143     0016                     	;# 
   144     0016                     	;# 
   145     0017                     	;# 
   146     0018                     	;# 
   147     0019                     	;# 
   148     001A                     	;# 
   149     001B                     	;# 
   150     001C                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     008F                     	;# 
   155     0090                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0095                     	;# 
   161     0096                     	;# 
   162     0097                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009A                     	;# 
   166     009B                     	;# 
   167     009B                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     0110                     	;# 
   177     0111                     	;# 
   178     0112                     	;# 
   179     0113                     	;# 
   180     0114                     	;# 
   181     0115                     	;# 
   182     0116                     	;# 
   183     0117                     	;# 
   184     0118                     	;# 
   185     0119                     	;# 
   186     011A                     	;# 
   187     011B                     	;# 
   188     011C                     	;# 
   189     011D                     	;# 
   190     011D                     	;# 
   191     011D                     	;# 
   192     011E                     	;# 
   193     011F                     	;# 
   194     018C                     	;# 
   195     018D                     	;# 
   196     018E                     	;# 
   197     018F                     	;# 
   198     0190                     	;# 
   199     0191                     	;# 
   200     0191                     	;# 
   201     0192                     	;# 
   202     0193                     	;# 
   203     0193                     	;# 
   204     0193                     	;# 
   205     0194                     	;# 
   206     0195                     	;# 
   207     0196                     	;# 
   208     0197                     	;# 
   209     0199                     	;# 
   210     0199                     	;# 
   211     0199                     	;# 
   212     019A                     	;# 
   213     019A                     	;# 
   214     019A                     	;# 
   215     019B                     	;# 
   216     019B                     	;# 
   217     019B                     	;# 
   218     019B                     	;# 
   219     019B                     	;# 
   220     019C                     	;# 
   221     019C                     	;# 
   222     019C                     	;# 
   223     019D                     	;# 
   224     019D                     	;# 
   225     019D                     	;# 
   226     019E                     	;# 
   227     019E                     	;# 
   228     019E                     	;# 
   229     019F                     	;# 
   230     019F                     	;# 
   231     019F                     	;# 
   232     019F                     	;# 
   233     019F                     	;# 
   234     020C                     	;# 
   235     020D                     	;# 
   236     020E                     	;# 
   237     020F                     	;# 
   238     0210                     	;# 
   239     0211                     	;# 
   240     0211                     	;# 
   241     0212                     	;# 
   242     0212                     	;# 
   243     0213                     	;# 
   244     0213                     	;# 
   245     0214                     	;# 
   246     0214                     	;# 
   247     0215                     	;# 
   248     0215                     	;# 
   249     0215                     	;# 
   250     0215                     	;# 
   251     0216                     	;# 
   252     0216                     	;# 
   253     0217                     	;# 
   254     0217                     	;# 
   255     028C                     	;# 
   256     028D                     	;# 
   257     028E                     	;# 
   258     028F                     	;# 
   259     0290                     	;# 
   260     0291                     	;# 
   261     0291                     	;# 
   262     0292                     	;# 
   263     0293                     	;# 
   264     0298                     	;# 
   265     0298                     	;# 
   266     0299                     	;# 
   267     029A                     	;# 
   268     030C                     	;# 
   269     030D                     	;# 
   270     030E                     	;# 
   271     030F                     	;# 
   272     0310                     	;# 
   273     0311                     	;# 
   274     0311                     	;# 
   275     0312                     	;# 
   276     0313                     	;# 
   277     038C                     	;# 
   278     038D                     	;# 
   279     038E                     	;# 
   280     038F                     	;# 
   281     0390                     	;# 
   282     0391                     	;# 
   283     0392                     	;# 
   284     0393                     	;# 
   285     0394                     	;# 
   286     0395                     	;# 
   287     0396                     	;# 
   288     0397                     	;# 
   289     0398                     	;# 
   290     0399                     	;# 
   291     039D                     	;# 
   292     039E                     	;# 
   293     039F                     	;# 
   294     0511                     	;# 
   295     0513                     	;# 
   296     0515                     	;# 
   297     051A                     	;# 
   298     0591                     	;# 
   299     0592                     	;# 
   300     0592                     	;# 
   301     0593                     	;# 
   302     0594                     	;# 
   303     0594                     	;# 
   304     0595                     	;# 
   305     0596                     	;# 
   306     0596                     	;# 
   307     0E91                     	;# 
   308     0E92                     	;# 
   309     0E93                     	;# 
   310     0E94                     	;# 
   311     0E95                     	;# 
   312     0E96                     	;# 
   313     0E97                     	;# 
   314     0E98                     	;# 
   315     0E99                     	;# 
   316     0E9A                     	;# 
   317     0E9B                     	;# 
   318     0E9C                     	;# 
   319     0E9D                     	;# 
   320     0E9E                     	;# 
   321     0E9F                     	;# 
   322     0EA0                     	;# 
   323     0EA1                     	;# 
   324     0EA1                     	;# 
   325     0EA2                     	;# 
   326     0EA3                     	;# 
   327     0EA3                     	;# 
   328     0EA4                     	;# 
   329     0EA5                     	;# 
   330     0EA5                     	;# 
   331     0EA6                     	;# 
   332     0EA7                     	;# 
   333     0EA7                     	;# 
   334     0EA8                     	;# 
   335     0EA9                     	;# 
   336     0EAA                     	;# 
   337     0EAB                     	;# 
   338     0EAC                     	;# 
   339     0EAD                     	;# 
   340     0EAE                     	;# 
   341     0EAF                     	;# 
   342     0EB1                     	;# 
   343     0EB2                     	;# 
   344     0EB3                     	;# 
   345     0EB4                     	;# 
   346     0EB5                     	;# 
   347     0EB6                     	;# 
   348     0EB7                     	;# 
   349     0EB8                     	;# 
   350     0EB9                     	;# 
   351     0EBA                     	;# 
   352     0EBB                     	;# 
   353     0EBC                     	;# 
   354     0EBD                     	;# 
   355     0EBE                     	;# 
   356     0EBF                     	;# 
   357     0EC0                     	;# 
   358     0EC1                     	;# 
   359     0EC1                     	;# 
   360     0EC2                     	;# 
   361     0EC3                     	;# 
   362     0EC3                     	;# 
   363     0EC4                     	;# 
   364     0EC5                     	;# 
   365     0EC5                     	;# 
   366     0EC6                     	;# 
   367     0EC7                     	;# 
   368     0EC7                     	;# 
   369     0EC8                     	;# 
   370     0EC9                     	;# 
   371     0ECA                     	;# 
   372     0ECB                     	;# 
   373     0ECC                     	;# 
   374     0ECD                     	;# 
   375     0ECE                     	;# 
   376     0ECF                     	;# 
   377     0ED1                     	;# 
   378     0ED2                     	;# 
   379     0ED3                     	;# 
   380     0ED4                     	;# 
   381     0ED5                     	;# 
   382     0ED6                     	;# 
   383     0ED7                     	;# 
   384     0ED8                     	;# 
   385     0ED9                     	;# 
   386     0EDA                     	;# 
   387     0EDB                     	;# 
   388     0EDC                     	;# 
   389     0EDD                     	;# 
   390     0EDE                     	;# 
   391     0EDF                     	;# 
   392     0EE0                     	;# 
   393     0EE1                     	;# 
   394     0EE1                     	;# 
   395     0EE2                     	;# 
   396     0EE3                     	;# 
   397     0EE3                     	;# 
   398     0EE4                     	;# 
   399     0EE5                     	;# 
   400     0EE5                     	;# 
   401     0EE6                     	;# 
   402     0EE7                     	;# 
   403     0EE7                     	;# 
   404     0EE8                     	;# 
   405     0EE9                     	;# 
   406     0EEA                     	;# 
   407     0EEB                     	;# 
   408     0EEC                     	;# 
   409     0EED                     	;# 
   410     0EEE                     	;# 
   411     0EEF                     	;# 
   412     0F11                     	;# 
   413     0F12                     	;# 
   414     0F13                     	;# 
   415     0F14                     	;# 
   416     0F15                     	;# 
   417     0F16                     	;# 
   418     0F17                     	;# 
   419     0F18                     	;# 
   420     0F19                     	;# 
   421     0F1A                     	;# 
   422     0F1B                     	;# 
   423     0F1C                     	;# 
   424     0F1D                     	;# 
   425     0F1E                     	;# 
   426     0F1F                     	;# 
   427     0F20                     	;# 
   428     0F21                     	;# 
   429     0F21                     	;# 
   430     0F22                     	;# 
   431     0F23                     	;# 
   432     0F23                     	;# 
   433     0F24                     	;# 
   434     0F25                     	;# 
   435     0F25                     	;# 
   436     0F26                     	;# 
   437     0F27                     	;# 
   438     0F27                     	;# 
   439     0F28                     	;# 
   440     0F29                     	;# 
   441     0F2A                     	;# 
   442     0F2B                     	;# 
   443     0F2C                     	;# 
   444     0F2D                     	;# 
   445     0F2E                     	;# 
   446     0F2F                     	;# 
   447     0FE4                     	;# 
   448     0FE5                     	;# 
   449     0FE6                     	;# 
   450     0FE7                     	;# 
   451     0FE8                     	;# 
   452     0FE9                     	;# 
   453     0FEA                     	;# 
   454     0FEB                     	;# 
   455     0FED                     	;# 
   456     0FEE                     	;# 
   457     0FEF                     	;# 
   458     0000                     	;# 
   459     0001                     	;# 
   460     0002                     	;# 
   461     0003                     	;# 
   462     0004                     	;# 
   463     0005                     	;# 
   464     0006                     	;# 
   465     0007                     	;# 
   466     0008                     	;# 
   467     0009                     	;# 
   468     000A                     	;# 
   469     000B                     	;# 
   470     000C                     	;# 
   471     000D                     	;# 
   472     000E                     	;# 
   473     000F                     	;# 
   474     0010                     	;# 
   475     0011                     	;# 
   476     0012                     	;# 
   477     0013                     	;# 
   478     0014                     	;# 
   479     0015                     	;# 
   480     0016                     	;# 
   481     0016                     	;# 
   482     0017                     	;# 
   483     0018                     	;# 
   484     0019                     	;# 
   485     001A                     	;# 
   486     001B                     	;# 
   487     001C                     	;# 
   488     008C                     	;# 
   489     008D                     	;# 
   490     008E                     	;# 
   491     008F                     	;# 
   492     0090                     	;# 
   493     0091                     	;# 
   494     0092                     	;# 
   495     0093                     	;# 
   496     0094                     	;# 
   497     0095                     	;# 
   498     0096                     	;# 
   499     0097                     	;# 
   500     0098                     	;# 
   501     0099                     	;# 
   502     009A                     	;# 
   503     009B                     	;# 
   504     009B                     	;# 
   505     009C                     	;# 
   506     009D                     	;# 
   507     009E                     	;# 
   508     009F                     	;# 
   509     010C                     	;# 
   510     010D                     	;# 
   511     010E                     	;# 
   512     010F                     	;# 
   513     0110                     	;# 
   514     0111                     	;# 
   515     0112                     	;# 
   516     0113                     	;# 
   517     0114                     	;# 
   518     0115                     	;# 
   519     0116                     	;# 
   520     0117                     	;# 
   521     0118                     	;# 
   522     0119                     	;# 
   523     011A                     	;# 
   524     011B                     	;# 
   525     011C                     	;# 
   526     011D                     	;# 
   527     011D                     	;# 
   528     011D                     	;# 
   529     011E                     	;# 
   530     011F                     	;# 
   531     018C                     	;# 
   532     018D                     	;# 
   533     018E                     	;# 
   534     018F                     	;# 
   535     0190                     	;# 
   536     0191                     	;# 
   537     0191                     	;# 
   538     0192                     	;# 
   539     0193                     	;# 
   540     0193                     	;# 
   541     0193                     	;# 
   542     0194                     	;# 
   543     0195                     	;# 
   544     0196                     	;# 
   545     0197                     	;# 
   546     0199                     	;# 
   547     0199                     	;# 
   548     0199                     	;# 
   549     019A                     	;# 
   550     019A                     	;# 
   551     019A                     	;# 
   552     019B                     	;# 
   553     019B                     	;# 
   554     019B                     	;# 
   555     019B                     	;# 
   556     019B                     	;# 
   557     019C                     	;# 
   558     019C                     	;# 
   559     019C                     	;# 
   560     019D                     	;# 
   561     019D                     	;# 
   562     019D                     	;# 
   563     019E                     	;# 
   564     019E                     	;# 
   565     019E                     	;# 
   566     019F                     	;# 
   567     019F                     	;# 
   568     019F                     	;# 
   569     019F                     	;# 
   570     019F                     	;# 
   571     020C                     	;# 
   572     020D                     	;# 
   573     020E                     	;# 
   574     020F                     	;# 
   575     0210                     	;# 
   576     0211                     	;# 
   577     0211                     	;# 
   578     0212                     	;# 
   579     0212                     	;# 
   580     0213                     	;# 
   581     0213                     	;# 
   582     0214                     	;# 
   583     0214                     	;# 
   584     0215                     	;# 
   585     0215                     	;# 
   586     0215                     	;# 
   587     0215                     	;# 
   588     0216                     	;# 
   589     0216                     	;# 
   590     0217                     	;# 
   591     0217                     	;# 
   592     028C                     	;# 
   593     028D                     	;# 
   594     028E                     	;# 
   595     028F                     	;# 
   596     0290                     	;# 
   597     0291                     	;# 
   598     0291                     	;# 
   599     0292                     	;# 
   600     0293                     	;# 
   601     0298                     	;# 
   602     0298                     	;# 
   603     0299                     	;# 
   604     029A                     	;# 
   605     030C                     	;# 
   606     030D                     	;# 
   607     030E                     	;# 
   608     030F                     	;# 
   609     0310                     	;# 
   610     0311                     	;# 
   611     0311                     	;# 
   612     0312                     	;# 
   613     0313                     	;# 
   614     038C                     	;# 
   615     038D                     	;# 
   616     038E                     	;# 
   617     038F                     	;# 
   618     0390                     	;# 
   619     0391                     	;# 
   620     0392                     	;# 
   621     0393                     	;# 
   622     0394                     	;# 
   623     0395                     	;# 
   624     0396                     	;# 
   625     0397                     	;# 
   626     0398                     	;# 
   627     0399                     	;# 
   628     039D                     	;# 
   629     039E                     	;# 
   630     039F                     	;# 
   631     0511                     	;# 
   632     0513                     	;# 
   633     0515                     	;# 
   634     051A                     	;# 
   635     0591                     	;# 
   636     0592                     	;# 
   637     0592                     	;# 
   638     0593                     	;# 
   639     0594                     	;# 
   640     0594                     	;# 
   641     0595                     	;# 
   642     0596                     	;# 
   643     0596                     	;# 
   644     0E91                     	;# 
   645     0E92                     	;# 
   646     0E93                     	;# 
   647     0E94                     	;# 
   648     0E95                     	;# 
   649     0E96                     	;# 
   650     0E97                     	;# 
   651     0E98                     	;# 
   652     0E99                     	;# 
   653     0E9A                     	;# 
   654     0E9B                     	;# 
   655     0E9C                     	;# 
   656     0E9D                     	;# 
   657     0E9E                     	;# 
   658     0E9F                     	;# 
   659     0EA0                     	;# 
   660     0EA1                     	;# 
   661     0EA1                     	;# 
   662     0EA2                     	;# 
   663     0EA3                     	;# 
   664     0EA3                     	;# 
   665     0EA4                     	;# 
   666     0EA5                     	;# 
   667     0EA5                     	;# 
   668     0EA6                     	;# 
   669     0EA7                     	;# 
   670     0EA7                     	;# 
   671     0EA8                     	;# 
   672     0EA9                     	;# 
   673     0EAA                     	;# 
   674     0EAB                     	;# 
   675     0EAC                     	;# 
   676     0EAD                     	;# 
   677     0EAE                     	;# 
   678     0EAF                     	;# 
   679     0EB1                     	;# 
   680     0EB2                     	;# 
   681     0EB3                     	;# 
   682     0EB4                     	;# 
   683     0EB5                     	;# 
   684     0EB6                     	;# 
   685     0EB7                     	;# 
   686     0EB8                     	;# 
   687     0EB9                     	;# 
   688     0EBA                     	;# 
   689     0EBB                     	;# 
   690     0EBC                     	;# 
   691     0EBD                     	;# 
   692     0EBE                     	;# 
   693     0EBF                     	;# 
   694     0EC0                     	;# 
   695     0EC1                     	;# 
   696     0EC1                     	;# 
   697     0EC2                     	;# 
   698     0EC3                     	;# 
   699     0EC3                     	;# 
   700     0EC4                     	;# 
   701     0EC5                     	;# 
   702     0EC5                     	;# 
   703     0EC6                     	;# 
   704     0EC7                     	;# 
   705     0EC7                     	;# 
   706     0EC8                     	;# 
   707     0EC9                     	;# 
   708     0ECA                     	;# 
   709     0ECB                     	;# 
   710     0ECC                     	;# 
   711     0ECD                     	;# 
   712     0ECE                     	;# 
   713     0ECF                     	;# 
   714     0ED1                     	;# 
   715     0ED2                     	;# 
   716     0ED3                     	;# 
   717     0ED4                     	;# 
   718     0ED5                     	;# 
   719     0ED6                     	;# 
   720     0ED7                     	;# 
   721     0ED8                     	;# 
   722     0ED9                     	;# 
   723     0EDA                     	;# 
   724     0EDB                     	;# 
   725     0EDC                     	;# 
   726     0EDD                     	;# 
   727     0EDE                     	;# 
   728     0EDF                     	;# 
   729     0EE0                     	;# 
   730     0EE1                     	;# 
   731     0EE1                     	;# 
   732     0EE2                     	;# 
   733     0EE3                     	;# 
   734     0EE3                     	;# 
   735     0EE4                     	;# 
   736     0EE5                     	;# 
   737     0EE5                     	;# 
   738     0EE6                     	;# 
   739     0EE7                     	;# 
   740     0EE7                     	;# 
   741     0EE8                     	;# 
   742     0EE9                     	;# 
   743     0EEA                     	;# 
   744     0EEB                     	;# 
   745     0EEC                     	;# 
   746     0EED                     	;# 
   747     0EEE                     	;# 
   748     0EEF                     	;# 
   749     0F11                     	;# 
   750     0F12                     	;# 
   751     0F13                     	;# 
   752     0F14                     	;# 
   753     0F15                     	;# 
   754     0F16                     	;# 
   755     0F17                     	;# 
   756     0F18                     	;# 
   757     0F19                     	;# 
   758     0F1A                     	;# 
   759     0F1B                     	;# 
   760     0F1C                     	;# 
   761     0F1D                     	;# 
   762     0F1E                     	;# 
   763     0F1F                     	;# 
   764     0F20                     	;# 
   765     0F21                     	;# 
   766     0F21                     	;# 
   767     0F22                     	;# 
   768     0F23                     	;# 
   769     0F23                     	;# 
   770     0F24                     	;# 
   771     0F25                     	;# 
   772     0F25                     	;# 
   773     0F26                     	;# 
   774     0F27                     	;# 
   775     0F27                     	;# 
   776     0F28                     	;# 
   777     0F29                     	;# 
   778     0F2A                     	;# 
   779     0F2B                     	;# 
   780     0F2C                     	;# 
   781     0F2D                     	;# 
   782     0F2E                     	;# 
   783     0F2F                     	;# 
   784     0FE4                     	;# 
   785     0FE5                     	;# 
   786     0FE6                     	;# 
   787     0FE7                     	;# 
   788     0FE8                     	;# 
   789     0FE9                     	;# 
   790     0FEA                     	;# 
   791     0FEB                     	;# 
   792     0FED                     	;# 
   793     0FEE                     	;# 
   794     0FEF                     	;# 
   795     0000                     	;# 
   796     0001                     	;# 
   797     0002                     	;# 
   798     0003                     	;# 
   799     0004                     	;# 
   800     0005                     	;# 
   801     0006                     	;# 
   802     0007                     	;# 
   803     0008                     	;# 
   804     0009                     	;# 
   805     000A                     	;# 
   806     000B                     	;# 
   807     000C                     	;# 
   808     000D                     	;# 
   809     000E                     	;# 
   810     000F                     	;# 
   811     0010                     	;# 
   812     0011                     	;# 
   813     0012                     	;# 
   814     0013                     	;# 
   815     0014                     	;# 
   816     0015                     	;# 
   817     0016                     	;# 
   818     0016                     	;# 
   819     0017                     	;# 
   820     0018                     	;# 
   821     0019                     	;# 
   822     001A                     	;# 
   823     001B                     	;# 
   824     001C                     	;# 
   825     008C                     	;# 
   826     008D                     	;# 
   827     008E                     	;# 
   828     008F                     	;# 
   829     0090                     	;# 
   830     0091                     	;# 
   831     0092                     	;# 
   832     0093                     	;# 
   833     0094                     	;# 
   834     0095                     	;# 
   835     0096                     	;# 
   836     0097                     	;# 
   837     0098                     	;# 
   838     0099                     	;# 
   839     009A                     	;# 
   840     009B                     	;# 
   841     009B                     	;# 
   842     009C                     	;# 
   843     009D                     	;# 
   844     009E                     	;# 
   845     009F                     	;# 
   846     010C                     	;# 
   847     010D                     	;# 
   848     010E                     	;# 
   849     010F                     	;# 
   850     0110                     	;# 
   851     0111                     	;# 
   852     0112                     	;# 
   853     0113                     	;# 
   854     0114                     	;# 
   855     0115                     	;# 
   856     0116                     	;# 
   857     0117                     	;# 
   858     0118                     	;# 
   859     0119                     	;# 
   860     011A                     	;# 
   861     011B                     	;# 
   862     011C                     	;# 
   863     011D                     	;# 
   864     011D                     	;# 
   865     011D                     	;# 
   866     011E                     	;# 
   867     011F                     	;# 
   868     018C                     	;# 
   869     018D                     	;# 
   870     018E                     	;# 
   871     018F                     	;# 
   872     0190                     	;# 
   873     0191                     	;# 
   874     0191                     	;# 
   875     0192                     	;# 
   876     0193                     	;# 
   877     0193                     	;# 
   878     0193                     	;# 
   879     0194                     	;# 
   880     0195                     	;# 
   881     0196                     	;# 
   882     0197                     	;# 
   883     0199                     	;# 
   884     0199                     	;# 
   885     0199                     	;# 
   886     019A                     	;# 
   887     019A                     	;# 
   888     019A                     	;# 
   889     019B                     	;# 
   890     019B                     	;# 
   891     019B                     	;# 
   892     019B                     	;# 
   893     019B                     	;# 
   894     019C                     	;# 
   895     019C                     	;# 
   896     019C                     	;# 
   897     019D                     	;# 
   898     019D                     	;# 
   899     019D                     	;# 
   900     019E                     	;# 
   901     019E                     	;# 
   902     019E                     	;# 
   903     019F                     	;# 
   904     019F                     	;# 
   905     019F                     	;# 
   906     019F                     	;# 
   907     019F                     	;# 
   908     020C                     	;# 
   909     020D                     	;# 
   910     020E                     	;# 
   911     020F                     	;# 
   912     0210                     	;# 
   913     0211                     	;# 
   914     0211                     	;# 
   915     0212                     	;# 
   916     0212                     	;# 
   917     0213                     	;# 
   918     0213                     	;# 
   919     0214                     	;# 
   920     0214                     	;# 
   921     0215                     	;# 
   922     0215                     	;# 
   923     0215                     	;# 
   924     0215                     	;# 
   925     0216                     	;# 
   926     0216                     	;# 
   927     0217                     	;# 
   928     0217                     	;# 
   929     028C                     	;# 
   930     028D                     	;# 
   931     028E                     	;# 
   932     028F                     	;# 
   933     0290                     	;# 
   934     0291                     	;# 
   935     0291                     	;# 
   936     0292                     	;# 
   937     0293                     	;# 
   938     0298                     	;# 
   939     0298                     	;# 
   940     0299                     	;# 
   941     029A                     	;# 
   942     030C                     	;# 
   943     030D                     	;# 
   944     030E                     	;# 
   945     030F                     	;# 
   946     0310                     	;# 
   947     0311                     	;# 
   948     0311                     	;# 
   949     0312                     	;# 
   950     0313                     	;# 
   951     038C                     	;# 
   952     038D                     	;# 
   953     038E                     	;# 
   954     038F                     	;# 
   955     0390                     	;# 
   956     0391                     	;# 
   957     0392                     	;# 
   958     0393                     	;# 
   959     0394                     	;# 
   960     0395                     	;# 
   961     0396                     	;# 
   962     0397                     	;# 
   963     0398                     	;# 
   964     0399                     	;# 
   965     039D                     	;# 
   966     039E                     	;# 
   967     039F                     	;# 
   968     0511                     	;# 
   969     0513                     	;# 
   970     0515                     	;# 
   971     051A                     	;# 
   972     0591                     	;# 
   973     0592                     	;# 
   974     0592                     	;# 
   975     0593                     	;# 
   976     0594                     	;# 
   977     0594                     	;# 
   978     0595                     	;# 
   979     0596                     	;# 
   980     0596                     	;# 
   981     0E91                     	;# 
   982     0E92                     	;# 
   983     0E93                     	;# 
   984     0E94                     	;# 
   985     0E95                     	;# 
   986     0E96                     	;# 
   987     0E97                     	;# 
   988     0E98                     	;# 
   989     0E99                     	;# 
   990     0E9A                     	;# 
   991     0E9B                     	;# 
   992     0E9C                     	;# 
   993     0E9D                     	;# 
   994     0E9E                     	;# 
   995     0E9F                     	;# 
   996     0EA0                     	;# 
   997     0EA1                     	;# 
   998     0EA1                     	;# 
   999     0EA2                     	;# 
  1000     0EA3                     	;# 
  1001     0EA3                     	;# 
  1002     0EA4                     	;# 
  1003     0EA5                     	;# 
  1004     0EA5                     	;# 
  1005     0EA6                     	;# 
  1006     0EA7                     	;# 
  1007     0EA7                     	;# 
  1008     0EA8                     	;# 
  1009     0EA9                     	;# 
  1010     0EAA                     	;# 
  1011     0EAB                     	;# 
  1012     0EAC                     	;# 
  1013     0EAD                     	;# 
  1014     0EAE                     	;# 
  1015     0EAF                     	;# 
  1016     0EB1                     	;# 
  1017     0EB2                     	;# 
  1018     0EB3                     	;# 
  1019     0EB4                     	;# 
  1020     0EB5                     	;# 
  1021     0EB6                     	;# 
  1022     0EB7                     	;# 
  1023     0EB8                     	;# 
  1024     0EB9                     	;# 
  1025     0EBA                     	;# 
  1026     0EBB                     	;# 
  1027     0EBC                     	;# 
  1028     0EBD                     	;# 
  1029     0EBE                     	;# 
  1030     0EBF                     	;# 
  1031     0EC0                     	;# 
  1032     0EC1                     	;# 
  1033     0EC1                     	;# 
  1034     0EC2                     	;# 
  1035     0EC3                     	;# 
  1036     0EC3                     	;# 
  1037     0EC4                     	;# 
  1038     0EC5                     	;# 
  1039     0EC5                     	;# 
  1040     0EC6                     	;# 
  1041     0EC7                     	;# 
  1042     0EC7                     	;# 
  1043     0EC8                     	;# 
  1044     0EC9                     	;# 
  1045     0ECA                     	;# 
  1046     0ECB                     	;# 
  1047     0ECC                     	;# 
  1048     0ECD                     	;# 
  1049     0ECE                     	;# 
  1050     0ECF                     	;# 
  1051     0ED1                     	;# 
  1052     0ED2                     	;# 
  1053     0ED3                     	;# 
  1054     0ED4                     	;# 
  1055     0ED5                     	;# 
  1056     0ED6                     	;# 
  1057     0ED7                     	;# 
  1058     0ED8                     	;# 
  1059     0ED9                     	;# 
  1060     0EDA                     	;# 
  1061     0EDB                     	;# 
  1062     0EDC                     	;# 
  1063     0EDD                     	;# 
  1064     0EDE                     	;# 
  1065     0EDF                     	;# 
  1066     0EE0                     	;# 
  1067     0EE1                     	;# 
  1068     0EE1                     	;# 
  1069     0EE2                     	;# 
  1070     0EE3                     	;# 
  1071     0EE3                     	;# 
  1072     0EE4                     	;# 
  1073     0EE5                     	;# 
  1074     0EE5                     	;# 
  1075     0EE6                     	;# 
  1076     0EE7                     	;# 
  1077     0EE7                     	;# 
  1078     0EE8                     	;# 
  1079     0EE9                     	;# 
  1080     0EEA                     	;# 
  1081     0EEB                     	;# 
  1082     0EEC                     	;# 
  1083     0EED                     	;# 
  1084     0EEE                     	;# 
  1085     0EEF                     	;# 
  1086     0F11                     	;# 
  1087     0F12                     	;# 
  1088     0F13                     	;# 
  1089     0F14                     	;# 
  1090     0F15                     	;# 
  1091     0F16                     	;# 
  1092     0F17                     	;# 
  1093     0F18                     	;# 
  1094     0F19                     	;# 
  1095     0F1A                     	;# 
  1096     0F1B                     	;# 
  1097     0F1C                     	;# 
  1098     0F1D                     	;# 
  1099     0F1E                     	;# 
  1100     0F1F                     	;# 
  1101     0F20                     	;# 
  1102     0F21                     	;# 
  1103     0F21                     	;# 
  1104     0F22                     	;# 
  1105     0F23                     	;# 
  1106     0F23                     	;# 
  1107     0F24                     	;# 
  1108     0F25                     	;# 
  1109     0F25                     	;# 
  1110     0F26                     	;# 
  1111     0F27                     	;# 
  1112     0F27                     	;# 
  1113     0F28                     	;# 
  1114     0F29                     	;# 
  1115     0F2A                     	;# 
  1116     0F2B                     	;# 
  1117     0F2C                     	;# 
  1118     0F2D                     	;# 
  1119     0F2E                     	;# 
  1120     0F2F                     	;# 
  1121     0FE4                     	;# 
  1122     0FE5                     	;# 
  1123     0FE6                     	;# 
  1124     0FE7                     	;# 
  1125     0FE8                     	;# 
  1126     0FE9                     	;# 
  1127     0FEA                     	;# 
  1128     0FEB                     	;# 
  1129     0FED                     	;# 
  1130     0FEE                     	;# 
  1131     0FEF                     	;_queue
  1132                           
  1133                           	psect	idataBANK0
  1134     07FD                     __pidataBANK0:
  1135                           
  1136                           ;initializer for _tail
  1137     07FD  34FF               	retlw	255
  1138     07FE  3403               	retlw	3
  1139     0011                     _PIR1bits	set	17
  1140     000F                     _PORTD	set	15
  1141     000D                     _PORTBbits	set	13
  1142     000B                     _INTCONbits	set	11
  1143     0010                     _PORTEbits	set	16
  1144     000C                     _PORTAbits	set	12
  1145     008E                     _TRISCbits	set	142
  1146     008D                     _TRISB	set	141
  1147     008E                     _TRISC	set	142
  1148     008F                     _TRISD	set	143
  1149     008C                     _TRISAbits	set	140
  1150     0090                     _TRISEbits	set	144
  1151     009D                     _ADCON0bits	set	157
  1152     0091                     _PIE1bits	set	145
  1153     010E                     _LATC	set	270
  1154     010F                     _LATD	set	271
  1155     019B                     _SPBRG	set	411
  1156     019A                     _TXREG	set	410
  1157     0199                     _RCREG	set	409
  1158     019C                     _SPBRGH	set	412
  1159     019E                     _TXSTAbits	set	414
  1160     019D                     _RCSTAbits	set	413
  1161     019F                     _BAUDCONbits	set	415
  1162     018F                     _ANSELD	set	399
  1163     018D                     _ANSELB	set	397
  1164     018C                     _ANSELA	set	396
  1165                           
  1166                           	psect	stringtext1
  1167     1000                     __pstringtext1:
  1168     1000                     STR_3:
  1169     1000  3445               	retlw	69	;'E'
  1170     1001  3472               	retlw	114	;'r'
  1171     1002  3461               	retlw	97	;'a'
  1172     1003  3473               	retlw	115	;'s'
  1173     1004  3465               	retlw	101	;'e'
  1174     1005  3420               	retlw	32	;' '
  1175     1006  3463               	retlw	99	;'c'
  1176     1007  3468               	retlw	104	;'h'
  1177     1008  3465               	retlw	101	;'e'
  1178     1009  3463               	retlw	99	;'c'
  1179     100A  346B               	retlw	107	;'k'
  1180     100B  3420               	retlw	32	;' '
  1181     100C  3466               	retlw	102	;'f'
  1182     100D  3461               	retlw	97	;'a'
  1183     100E  3469               	retlw	105	;'i'
  1184     100F  346C               	retlw	108	;'l'
  1185     1010  3420               	retlw	32	;' '
  1186     1011  3461               	retlw	97	;'a'
  1187     1012  3474               	retlw	116	;'t'
  1188     1013  3420               	retlw	32	;' '
  1189     1014  3461               	retlw	97	;'a'
  1190     1015  3464               	retlw	100	;'d'
  1191     1016  3464               	retlw	100	;'d'
  1192     1017  3472               	retlw	114	;'r'
  1193     1018  3465               	retlw	101	;'e'
  1194     1019  3473               	retlw	115	;'s'
  1195     101A  3473               	retlw	115	;'s'
  1196     101B  3420               	retlw	32	;' '
  1197     101C  3400               	retlw	0
  1198                           
  1199                           	psect	stringtext2
  1200     101D                     __pstringtext2:
  1201     101D                     STR_6:
  1202     101D  3445               	retlw	69	;'E'
  1203     101E  3472               	retlw	114	;'r'
  1204     101F  3461               	retlw	97	;'a'
  1205     1020  3473               	retlw	115	;'s'
  1206     1021  3465               	retlw	101	;'e'
  1207     1022  3420               	retlw	32	;' '
  1208     1023  3463               	retlw	99	;'c'
  1209     1024  3468               	retlw	104	;'h'
  1210     1025  3465               	retlw	101	;'e'
  1211     1026  3463               	retlw	99	;'c'
  1212     1027  346B               	retlw	107	;'k'
  1213     1028  3420               	retlw	32	;' '
  1214     1029  3470               	retlw	112	;'p'
  1215     102A  3461               	retlw	97	;'a'
  1216     102B  3473               	retlw	115	;'s'
  1217     102C  3473               	retlw	115	;'s'
  1218     102D  3465               	retlw	101	;'e'
  1219     102E  3464               	retlw	100	;'d'
  1220     102F  342E               	retlw	46	;'.'
  1221     1030  340A               	retlw	10
  1222     1031  3400               	retlw	0
  1223                           
  1224                           	psect	stringtext3
  1225     1032                     __pstringtext3:
  1226     1032                     STR_11:
  1227     1032  3457               	retlw	87	;'W'
  1228     1033  3472               	retlw	114	;'r'
  1229     1034  3469               	retlw	105	;'i'
  1230     1035  3474               	retlw	116	;'t'
  1231     1036  3465               	retlw	101	;'e'
  1232     1037  3420               	retlw	32	;' '
  1233     1038  3463               	retlw	99	;'c'
  1234     1039  346F               	retlw	111	;'o'
  1235     103A  346D               	retlw	109	;'m'
  1236     103B  3470               	retlw	112	;'p'
  1237     103C  346C               	retlw	108	;'l'
  1238     103D  3465               	retlw	101	;'e'
  1239     103E  3474               	retlw	116	;'t'
  1240     103F  3465               	retlw	101	;'e'
  1241     1040  3464               	retlw	100	;'d'
  1242     1041  342E               	retlw	46	;'.'
  1243     1042  340A               	retlw	10
  1244     1043  3400               	retlw	0
  1245                           
  1246                           	psect	stringtext4
  1247     1044                     __pstringtext4:
  1248     1044                     STR_10:
  1249     1044  3457               	retlw	87	;'W'
  1250     1045  3472               	retlw	114	;'r'
  1251     1046  3469               	retlw	105	;'i'
  1252     1047  3474               	retlw	116	;'t'
  1253     1048  3465               	retlw	101	;'e'
  1254     1049  3420               	retlw	32	;' '
  1255     104A  3461               	retlw	97	;'a'
  1256     104B  3462               	retlw	98	;'b'
  1257     104C  346F               	retlw	111	;'o'
  1258     104D  3472               	retlw	114	;'r'
  1259     104E  3474               	retlw	116	;'t'
  1260     104F  3465               	retlw	101	;'e'
  1261     1050  3464               	retlw	100	;'d'
  1262     1051  340A               	retlw	10
  1263     1052  3400               	retlw	0
  1264                           
  1265                           	psect	stringtext5
  1266     1053                     __pstringtext5:
  1267     1053                     STR_2:
  1268     1053  3443               	retlw	67	;'C'
  1269     1054  3468               	retlw	104	;'h'
  1270     1055  3465               	retlw	101	;'e'
  1271     1056  3463               	retlw	99	;'c'
  1272     1057  346B               	retlw	107	;'k'
  1273     1058  3420               	retlw	32	;' '
  1274     1059  3461               	retlw	97	;'a'
  1275     105A  3462               	retlw	98	;'b'
  1276     105B  346F               	retlw	111	;'o'
  1277     105C  3472               	retlw	114	;'r'
  1278     105D  3474               	retlw	116	;'t'
  1279     105E  3465               	retlw	101	;'e'
  1280     105F  3464               	retlw	100	;'d'
  1281     1060  340A               	retlw	10
  1282     1061  3400               	retlw	0
  1283                           
  1284                           	psect	stringtext6
  1285     1062                     __pstringtext6:
  1286     1062                     STR_7:
  1287     1062  3452               	retlw	82	;'R'
  1288     1063  3465               	retlw	101	;'e'
  1289     1064  3461               	retlw	97	;'a'
  1290     1065  3464               	retlw	100	;'d'
  1291     1066  3420               	retlw	32	;' '
  1292     1067  3461               	retlw	97	;'a'
  1293     1068  3462               	retlw	98	;'b'
  1294     1069  346F               	retlw	111	;'o'
  1295     106A  3472               	retlw	114	;'r'
  1296     106B  3474               	retlw	116	;'t'
  1297     106C  3465               	retlw	101	;'e'
  1298     106D  3464               	retlw	100	;'d'
  1299     106E  340A               	retlw	10
  1300     106F  3400               	retlw	0
  1301                           
  1302                           	psect	stringtext7
  1303     1070                     __pstringtext7:
  1304     1070                     STR_4:
  1305     1070  3430               	retlw	48	;'0'
  1306     1071  3478               	retlw	120	;'x'
  1307     1072  3425               	retlw	37	;'%'
  1308     1073  3430               	retlw	48	;'0'
  1309     1074  3434               	retlw	52	;'4'
  1310     1075  3478               	retlw	120	;'x'
  1311     1076  3420               	retlw	32	;' '
  1312     1077  343D               	retlw	61	;'='
  1313     1078  3420               	retlw	32	;' '
  1314     1079  3400               	retlw	0
  1315                           
  1316                           	psect	stringtext8
  1317     107A                     __pstringtext8:
  1318     107A                     STR_5:
  1319     107A  3430               	retlw	48	;'0'
  1320     107B  3478               	retlw	120	;'x'
  1321     107C  3425               	retlw	37	;'%'
  1322     107D  3430               	retlw	48	;'0'
  1323     107E  3432               	retlw	50	;'2'
  1324     107F  3478               	retlw	120	;'x'
  1325     1080  340A               	retlw	10
  1326     1081  3400               	retlw	0
  1327                           
  1328                           	psect	stringtext9
  1329     1082                     __pstringtext9:
  1330     1082                     STR_8:
  1331     1082  3425               	retlw	37	;'%'
  1332     1083  3430               	retlw	48	;'0'
  1333     1084  3434               	retlw	52	;'4'
  1334     1085  3478               	retlw	120	;'x'
  1335     1086  343A               	retlw	58	;':'
  1336     1087  3420               	retlw	32	;' '
  1337     1088  3400               	retlw	0
  1338                           
  1339                           	psect	stringtext10
  1340     1089                     __pstringtext10:
  1341     1089                     STR_9:
  1342     1089  3425               	retlw	37	;'%'
  1343     108A  3430               	retlw	48	;'0'
  1344     108B  3432               	retlw	50	;'2'
  1345     108C  3478               	retlw	120	;'x'
  1346     108D  3400               	retlw	0
  1347                           
  1348                           	psect	stringtext11
  1349     108E                     __pstringtext11:
  1350     108E                     STR_1:
  1351     108E  3425               	retlw	37	;'%'
  1352     108F  3464               	retlw	100	;'d'
  1353     1090  340A               	retlw	10
  1354     1091  3400               	retlw	0
  1355                           
  1356                           	psect	stringtext12
  1357     0000                     __pstringtext12:
  1358                           
  1359                           	psect	cinit
  1360     0042                     start_initialization:	
  1361                           ; #config settings
  1362                           
  1363     0042                     __initialization:	;BIGRAM
  1364                           
  1365                           ; Initialize objects allocated to BANK0
  1366     0042  3187  27FD  3180   	fcall	__pidataBANK0	;fetch initializer
  1367     0045  00E7               	movwf	__pdataBANK0& (0+127)
  1368     0046  3187  27FE  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1369     0049  00E8               	movwf	(__pdataBANK0+1)& (0+127)
  1370                           
  1371                           ; Clear objects allocated to BIGRAM
  1372     004A  30F0               	movlw	low (0+9200)
  1373     004B  0084               	movwf	4
  1374     004C  3023               	movlw	high (0+9200)
  1375     004D  0085               	movwf	5
  1376     004E  3000               	movlw	0
  1377     004F  00FE               	movwf	btemp
  1378     0050  3004               	movlw	4
  1379     0051  00FF               	movwf	btemp+1
  1380     0052  318D  253A  3180   	fcall	clear_ram0
  1381                           
  1382                           ; Clear objects allocated to COMMON
  1383     0055  01FC               	clrf	__pbssCOMMON& (0+127)
  1384     0056  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1385                           
  1386                           ; Clear objects allocated to BANK0
  1387     0057  01E5               	clrf	__pbssBANK0& (0+127)
  1388     0058  01E6               	clrf	(__pbssBANK0+1)& (0+127)
  1389                           
  1390                           ; Clear objects allocated to BANK1
  1391     0059  0021               	movlb	1	; select bank1
  1392     005A  01E5               	clrf	__pbssBANK1& (0+127)
  1393     005B  01E6               	clrf	(__pbssBANK1+1)& (0+127)
  1394     005C  01E7               	clrf	(__pbssBANK1+2)& (0+127)
  1395     005D  01E8               	clrf	(__pbssBANK1+3)& (0+127)
  1396     005E  01E9               	clrf	(__pbssBANK1+4)& (0+127)
  1397     005F  01EA               	clrf	(__pbssBANK1+5)& (0+127)
  1398     0060  01EB               	clrf	(__pbssBANK1+6)& (0+127)
  1399     0061  01EC               	clrf	(__pbssBANK1+7)& (0+127)
  1400     0062  01ED               	clrf	(__pbssBANK1+8)& (0+127)
  1401                           
  1402                           ; Clear objects allocated to BANK2
  1403     0063  3020               	movlw	low __pbssBANK2
  1404     0064  0084               	movwf	4
  1405     0065  3001               	movlw	high __pbssBANK2
  1406     0066  0085               	movwf	5
  1407     0067  3020               	movlw	32
  1408     0068  00FE               	movwf	btemp
  1409     0069  3000               	movlw	0
  1410     006A  00FF               	movwf	btemp+1
  1411     006B  318D  253A  3180   	fcall	clear_ram0
  1412     006E                     end_of_initialization:	
  1413                           ;End of C runtime variable initialization code
  1414                           
  1415     006E                     __end_of__initialization:
  1416     006E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1417     006F  0020               	movlb	0
  1418     0070  3185  2D3F         	ljmp	_main	;jump to C main() function
  1419                           
  1420                           	psect	bssCOMMON
  1421     007C                     __pbssCOMMON:
  1422     007C                     _head:
  1423     007C                     	ds	2
  1424                           
  1425                           	psect	bssBANK0
  1426     0065                     __pbssBANK0:
  1427     0065                     _flags:
  1428     0065                     	ds	1
  1429     0066                     _uart_ready:
  1430     0066                     	ds	1
  1431                           
  1432                           	psect	dataBANK0
  1433     0067                     __pdataBANK0:
  1434     0067                     _tail:
  1435     0067                     	ds	2
  1436                           
  1437                           	psect	bssBANK1
  1438     00E5                     __pbssBANK1:
  1439     00E5                     _width:
  1440     00E5                     	ds	2
  1441     00E7                     _prec:
  1442     00E7                     	ds	2
  1443     00E9                     _bytes_popped:
  1444     00E9                     	ds	2
  1445     00EB                     _bytes_pushed:
  1446     00EB                     	ds	2
  1447     00ED                     _cmd_active:
  1448     00ED                     	ds	1
  1449                           
  1450                           	psect	bssBANK2
  1451     0120                     __pbssBANK2:
  1452     0120                     _dbuf:
  1453     0120                     	ds	32
  1454                           
  1455                           	psect	clrtext
  1456     0D3A                     clear_ram0:	
  1457                           ;	Called with FSR0 containing the base address, and
  1458                           ;	btemp/btemp+1 has the size to clear
  1459                           
  1460     0D3A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1461     0D3B                     clrloop0:
  1462     0D3B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1463     0D3C  3101               	addfsr 0,1
  1464     0D3D  3001               	movlw	1
  1465     0D3E  02FE               	subwf	btemp,f
  1466     0D3F  3000               	movlw	0
  1467     0D40  3BFF               	subwfb	btemp+1,f
  1468     0D41  087F               	movf	btemp+1,w
  1469     0D42  047E               	iorwf	btemp,w
  1470     0D43  1D03               	skipz
  1471     0D44  2D3B               	goto	clrloop0	;have we reached the end yet?
  1472     0D45  3400               	retlw	0	;all done for this memory range, return
  1473                           
  1474                           	psect	cstackBANK1
  1475     00A0                     __pcstackBANK1:
  1476     00A0                     sprintf@ap:
  1477                           
  1478                           ; 1 bytes @ 0x0
  1479     00A0                     	ds	1
  1480     00A1                     sprintf@s:
  1481                           
  1482                           ; 1 bytes @ 0x1
  1483     00A1                     	ds	1
  1484     00A2                     sprintf@f:
  1485                           
  1486                           ; 11 bytes @ 0x2
  1487     00A2                     	ds	11
  1488     00AD                     do_init@s:
  1489     00AD                     do_read@ads:	
  1490                           ; 8 bytes @ 0xD
  1491                           
  1492     00AD                     do_blank@ads:	
  1493                           ; 16 bytes @ 0xD
  1494                           
  1495     00AD                     do_write@ads:	
  1496                           ; 32 bytes @ 0xD
  1497                           
  1498                           
  1499                           ; 48 bytes @ 0xD
  1500     00AD                     	ds	8
  1501     00B5                     do_init@rate:
  1502                           
  1503                           ; 2 bytes @ 0x15
  1504     00B5                     	ds	8
  1505     00BD                     do_read@s:
  1506                           
  1507                           ; 2 bytes @ 0x1D
  1508     00BD                     	ds	2
  1509     00BF                     do_read@data:
  1510                           
  1511                           ; 1 bytes @ 0x1F
  1512     00BF                     	ds	1
  1513     00C0                     do_read@col:
  1514                           
  1515                           ; 1 bytes @ 0x20
  1516     00C0                     	ds	1
  1517     00C1                     do_read@addr:
  1518                           
  1519                           ; 2 bytes @ 0x21
  1520     00C1                     	ds	12
  1521     00CD                     do_blank@ok:
  1522                           
  1523                           ; 1 bytes @ 0x2D
  1524     00CD                     	ds	1
  1525     00CE                     do_blank@data:
  1526                           
  1527                           ; 1 bytes @ 0x2E
  1528     00CE                     	ds	1
  1529     00CF                     do_blank@s:
  1530                           
  1531                           ; 2 bytes @ 0x2F
  1532     00CF                     	ds	2
  1533     00D1                     do_blank@addr:
  1534                           
  1535                           ; 2 bytes @ 0x31
  1536     00D1                     	ds	12
  1537     00DD                     do_write@s:
  1538                           
  1539                           ; 2 bytes @ 0x3D
  1540     00DD                     	ds	2
  1541     00DF                     do_write@hi:
  1542                           
  1543                           ; 1 bytes @ 0x3F
  1544     00DF                     	ds	1
  1545     00E0                     do_write@lo:
  1546                           
  1547                           ; 1 bytes @ 0x40
  1548     00E0                     	ds	1
  1549     00E1                     do_write@data:
  1550                           
  1551                           ; 1 bytes @ 0x41
  1552     00E1                     	ds	1
  1553     00E2                     do_write@c:
  1554                           
  1555                           ; 1 bytes @ 0x42
  1556     00E2                     	ds	1
  1557     00E3                     do_write@addr:
  1558                           
  1559                           ; 2 bytes @ 0x43
  1560     00E3                     	ds	2
  1561                           
  1562                           	psect	cstackCOMMON
  1563     0070                     __pcstackCOMMON:
  1564     0070                     ?_uart_getc:
  1565     0070                     ??_uart_getc:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568     0070                     ?_uart_putc:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571     0070                     ?_putch:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574     0070                     ?_setCTS:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577     0070                     ??_setCTS:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580     0070                     ?_clear:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583     0070                     ?_empty:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586     0070                     ?_push:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589     0070                     ?_pop:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592     0070                     ?_first:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595     0070                     ??_first:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598     0070                     ?_charToHexDigit:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601     0070                     ?_ports_init:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604     0070                     ?_isr:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607     0070                     ?_read_port:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610     0070                     ?_do_init:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613     0070                     ?_do_blank:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616     0070                     ?_do_read:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619     0070                     ?_write_port:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622     0070                     ?_do_write:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625     0070                     ?_main:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628     0070                     ?i1_addone:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631     0070                     setCTS@b:	
  1632                           ; 2 bytes @ 0x0
  1633                           
  1634     0070                     uart_getc@c:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637     0070                     putch@c:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640     0070                     i1addone@i:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643                           
  1644                           ; 2 bytes @ 0x0
  1645     0070                     	ds	1
  1646     0071                     uart_getc@ok:
  1647                           
  1648                           ; 1 bytes @ 0x1
  1649     0071                     	ds	1
  1650     0072                     ??_push:
  1651     0072                     ??i1_addone:	
  1652                           ; 1 bytes @ 0x2
  1653                           
  1654     0072                     ?_size:	
  1655                           ; 1 bytes @ 0x2
  1656                           
  1657                           
  1658                           ; 2 bytes @ 0x2
  1659     0072                     	ds	2
  1660     0074                     ??_size:
  1661                           
  1662                           ; 1 bytes @ 0x4
  1663     0074                     	ds	1
  1664     0075                     size@s:
  1665                           
  1666                           ; 2 bytes @ 0x5
  1667     0075                     	ds	1
  1668     0076                     push@s:
  1669                           
  1670                           ; 2 bytes @ 0x6
  1671     0076                     	ds	2
  1672     0078                     _push$1474:
  1673                           
  1674                           ; 2 bytes @ 0x8
  1675     0078                     	ds	2
  1676     007A                     push@c:
  1677                           
  1678                           ; 1 bytes @ 0xA
  1679     007A                     	ds	1
  1680     007B                     ??_isr:
  1681                           
  1682                           ; 1 bytes @ 0xB
  1683     007B                     	ds	1
  1684                           
  1685                           	psect	cstackBANK0
  1686     0020                     __pcstackBANK0:
  1687     0020                     isr@n:
  1688                           
  1689                           ; 2 bytes @ 0x0
  1690     0020                     	ds	2
  1691     0022                     isr@ok:
  1692                           
  1693                           ; 1 bytes @ 0x2
  1694     0022                     	ds	1
  1695     0023                     isr@c:
  1696                           
  1697                           ; 1 bytes @ 0x3
  1698     0023                     	ds	1
  1699     0024                     ?_uart_puts:
  1700     0024                     ??_uart_putc:	
  1701                           ; 1 bytes @ 0x4
  1702                           
  1703     0024                     ??_putch:	
  1704                           ; 1 bytes @ 0x4
  1705                           
  1706     0024                     ??_charToHexDigit:	
  1707                           ; 1 bytes @ 0x4
  1708                           
  1709     0024                     ??_ports_init:	
  1710                           ; 1 bytes @ 0x4
  1711                           
  1712     0024                     ?_setup_address:	
  1713                           ; 1 bytes @ 0x4
  1714                           
  1715     0024                     ??_read_port:	
  1716                           ; 1 bytes @ 0x4
  1717                           
  1718     0024                     ??_write_port:	
  1719                           ; 1 bytes @ 0x4
  1720                           
  1721     0024                     ?_memset:	
  1722                           ; 1 bytes @ 0x4
  1723                           
  1724     0024                     ?_uart_init_brg:	
  1725                           ; 2 bytes @ 0x4
  1726                           
  1727     0024                     ?_fputc:	
  1728                           ; 2 bytes @ 0x4
  1729                           
  1730     0024                     ?_addone:	
  1731                           ; 2 bytes @ 0x4
  1732                           
  1733     0024                     ?___wmul:	
  1734                           ; 2 bytes @ 0x4
  1735                           
  1736     0024                     ?___awdiv:	
  1737                           ; 2 bytes @ 0x4
  1738                           
  1739     0024                     ?___awmod:	
  1740                           ; 2 bytes @ 0x4
  1741                           
  1742     0024                     ?___lmul:	
  1743                           ; 2 bytes @ 0x4
  1744                           
  1745     0024                     charToHexDigit@c:	
  1746                           ; 4 bytes @ 0x4
  1747                           
  1748     0024                     read_port@data:	
  1749                           ; 1 bytes @ 0x4
  1750                           
  1751     0024                     uart_putc@c:	
  1752                           ; 1 bytes @ 0x4
  1753                           
  1754     0024                     addone@i:	
  1755                           ; 1 bytes @ 0x4
  1756                           
  1757     0024                     setup_address@addr:	
  1758                           ; 2 bytes @ 0x4
  1759                           
  1760     0024                     uart_puts@s:	
  1761                           ; 2 bytes @ 0x4
  1762                           
  1763     0024                     ___wmul@multiplier:	
  1764                           ; 2 bytes @ 0x4
  1765                           
  1766     0024                     ___awdiv@divisor:	
  1767                           ; 2 bytes @ 0x4
  1768                           
  1769     0024                     ___awmod@divisor:	
  1770                           ; 2 bytes @ 0x4
  1771                           
  1772     0024                     memset@dest:	
  1773                           ; 2 bytes @ 0x4
  1774                           
  1775     0024                     fputc@c:	
  1776                           ; 2 bytes @ 0x4
  1777                           
  1778     0024                     ___lmul@multiplier:	
  1779                           ; 2 bytes @ 0x4
  1780                           
  1781                           
  1782                           ; 4 bytes @ 0x4
  1783     0024                     	ds	2
  1784     0026                     ??_uart_init_brg:
  1785     0026                     ??_uart_puts:	
  1786                           ; 1 bytes @ 0x6
  1787                           
  1788     0026                     ??_addone:	
  1789                           ; 1 bytes @ 0x6
  1790                           
  1791     0026                     ??_empty:	
  1792                           ; 1 bytes @ 0x6
  1793                           
  1794     0026                     ??_pop:	
  1795                           ; 1 bytes @ 0x6
  1796                           
  1797     0026                     ??_setup_address:	
  1798                           ; 1 bytes @ 0x6
  1799                           
  1800     0026                     setup_address@hi:	
  1801                           ; 1 bytes @ 0x6
  1802                           
  1803     0026                     write_port@data:	
  1804                           ; 1 bytes @ 0x6
  1805                           
  1806     0026                     fputc@fp:	
  1807                           ; 1 bytes @ 0x6
  1808                           
  1809     0026                     ___wmul@multiplicand:	
  1810                           ; 1 bytes @ 0x6
  1811                           
  1812     0026                     ___awdiv@dividend:	
  1813                           ; 2 bytes @ 0x6
  1814                           
  1815     0026                     ___awmod@dividend:	
  1816                           ; 2 bytes @ 0x6
  1817                           
  1818     0026                     memset@c:	
  1819                           ; 2 bytes @ 0x6
  1820                           
  1821                           
  1822                           ; 2 bytes @ 0x6
  1823     0026                     	ds	1
  1824     0027                     ??_fputc:
  1825     0027                     uart_puts@p:	
  1826                           ; 1 bytes @ 0x7
  1827                           
  1828                           
  1829                           ; 2 bytes @ 0x7
  1830     0027                     	ds	1
  1831     0028                     ??___wmul:
  1832     0028                     ??___awdiv:	
  1833                           ; 1 bytes @ 0x8
  1834                           
  1835     0028                     ??___awmod:	
  1836                           ; 1 bytes @ 0x8
  1837                           
  1838     0028                     pop@c:	
  1839                           ; 1 bytes @ 0x8
  1840                           
  1841     0028                     ___wmul@product:	
  1842                           ; 1 bytes @ 0x8
  1843                           
  1844     0028                     memset@n:	
  1845                           ; 2 bytes @ 0x8
  1846                           
  1847     0028                     ___lmul@multiplicand:	
  1848                           ; 2 bytes @ 0x8
  1849                           
  1850                           
  1851                           ; 4 bytes @ 0x8
  1852     0028                     	ds	1
  1853     0029                     ___awdiv@counter:
  1854     0029                     ___awmod@counter:	
  1855                           ; 1 bytes @ 0x9
  1856                           
  1857                           
  1858                           ; 1 bytes @ 0x9
  1859     0029                     	ds	1
  1860     002A                     ??_memset:
  1861     002A                     ?_read_prec_or_width:	
  1862                           ; 1 bytes @ 0xA
  1863                           
  1864     002A                     ___awdiv@sign:	
  1865                           ; 2 bytes @ 0xA
  1866                           
  1867     002A                     ___awmod@sign:	
  1868                           ; 1 bytes @ 0xA
  1869                           
  1870     002A                     read_prec_or_width@ap:	
  1871                           ; 1 bytes @ 0xA
  1872                           
  1873     002A                     memset@p:	
  1874                           ; 1 bytes @ 0xA
  1875                           
  1876                           
  1877                           ; 2 bytes @ 0xA
  1878     002A                     	ds	1
  1879     002B                     ?_abs:
  1880     002B                     uart_init_brg@rate:	
  1881                           ; 2 bytes @ 0xB
  1882                           
  1883     002B                     ___awdiv@quotient:	
  1884                           ; 2 bytes @ 0xB
  1885                           
  1886     002B                     abs@a:	
  1887                           ; 2 bytes @ 0xB
  1888                           
  1889                           
  1890                           ; 2 bytes @ 0xB
  1891     002B                     	ds	1
  1892     002C                     ??_clear:
  1893     002C                     ??___lmul:	
  1894                           ; 1 bytes @ 0xC
  1895                           
  1896     002C                     ??_read_prec_or_width:	
  1897                           ; 1 bytes @ 0xC
  1898                           
  1899     002C                     ?_fputs:	
  1900                           ; 1 bytes @ 0xC
  1901                           
  1902     002C                     fputs@fp:	
  1903                           ; 2 bytes @ 0xC
  1904                           
  1905     002C                     ___lmul@product:	
  1906                           ; 1 bytes @ 0xC
  1907                           
  1908                           
  1909                           ; 4 bytes @ 0xC
  1910     002C                     	ds	1
  1911     002D                     ??_fputs:
  1912     002D                     ??_abs:	
  1913                           ; 1 bytes @ 0xD
  1914                           
  1915                           
  1916                           ; 1 bytes @ 0xD
  1917     002D                     	ds	2
  1918     002F                     read_prec_or_width@c:
  1919     002F                     fputs@c:	
  1920                           ; 1 bytes @ 0xF
  1921                           
  1922                           
  1923                           ; 1 bytes @ 0xF
  1924     002F                     	ds	1
  1925     0030                     ?___lldiv:
  1926     0030                     read_prec_or_width@n:	
  1927                           ; 4 bytes @ 0x10
  1928                           
  1929     0030                     fputs@i:	
  1930                           ; 2 bytes @ 0x10
  1931                           
  1932     0030                     ___lldiv@divisor:	
  1933                           ; 2 bytes @ 0x10
  1934                           
  1935                           
  1936                           ; 4 bytes @ 0x10
  1937     0030                     	ds	2
  1938     0032                     read_prec_or_width@fmt:
  1939     0032                     fputs@s:	
  1940                           ; 1 bytes @ 0x12
  1941                           
  1942                           
  1943                           ; 1 bytes @ 0x12
  1944     0032                     	ds	1
  1945     0033                     ?_pad:
  1946     0033                     pad@buf:	
  1947                           ; 1 bytes @ 0x13
  1948                           
  1949                           
  1950                           ; 1 bytes @ 0x13
  1951     0033                     	ds	1
  1952     0034                     pad@p:
  1953     0034                     ___lldiv@dividend:	
  1954                           ; 2 bytes @ 0x14
  1955                           
  1956                           
  1957                           ; 4 bytes @ 0x14
  1958     0034                     	ds	2
  1959     0036                     ??_pad:
  1960                           
  1961                           ; 1 bytes @ 0x16
  1962     0036                     	ds	1
  1963     0037                     pad@i:
  1964                           
  1965                           ; 2 bytes @ 0x17
  1966     0037                     	ds	1
  1967     0038                     ??___lldiv:
  1968                           
  1969                           ; 1 bytes @ 0x18
  1970     0038                     	ds	1
  1971     0039                     pad@fp:
  1972     0039                     ___lldiv@quotient:	
  1973                           ; 1 bytes @ 0x19
  1974                           
  1975                           
  1976                           ; 4 bytes @ 0x19
  1977     0039                     	ds	1
  1978     003A                     ?_dtoa:
  1979     003A                     ?_xtoa:	
  1980                           ; 1 bytes @ 0x1A
  1981                           
  1982     003A                     dtoa@d:	
  1983                           ; 1 bytes @ 0x1A
  1984                           
  1985     003A                     xtoa@d:	
  1986                           ; 2 bytes @ 0x1A
  1987                           
  1988                           
  1989                           ; 2 bytes @ 0x1A
  1990     003A                     	ds	2
  1991     003C                     ??_dtoa:
  1992     003C                     ??_xtoa:	
  1993                           ; 1 bytes @ 0x1C
  1994                           
  1995                           
  1996                           ; 1 bytes @ 0x1C
  1997     003C                     	ds	1
  1998     003D                     ___lldiv@counter:
  1999     003D                     dtoa@fp:	
  2000                           ; 1 bytes @ 0x1D
  2001                           
  2002     003D                     xtoa@fp:	
  2003                           ; 1 bytes @ 0x1D
  2004                           
  2005                           
  2006                           ; 1 bytes @ 0x1D
  2007     003D                     	ds	1
  2008     003E                     ?_uart_init:
  2009     003E                     xtoa@p:	
  2010                           ; 1 bytes @ 0x1E
  2011                           
  2012     003E                     _dtoa$1182:	
  2013                           ; 1 bytes @ 0x1E
  2014                           
  2015     003E                     uart_init@baud_rate:	
  2016                           ; 2 bytes @ 0x1E
  2017                           
  2018                           
  2019                           ; 4 bytes @ 0x1E
  2020     003E                     	ds	1
  2021     003F                     xtoa@w:
  2022                           
  2023                           ; 2 bytes @ 0x1F
  2024     003F                     	ds	1
  2025     0040                     dtoa@p:
  2026                           
  2027                           ; 1 bytes @ 0x20
  2028     0040                     	ds	1
  2029     0041                     xtoa@c:
  2030     0041                     dtoa@w:	
  2031                           ; 1 bytes @ 0x21
  2032                           
  2033                           
  2034                           ; 2 bytes @ 0x21
  2035     0041                     	ds	1
  2036     0042                     ??_uart_init:
  2037     0042                     xtoa@i:	
  2038                           ; 1 bytes @ 0x22
  2039                           
  2040                           
  2041                           ; 2 bytes @ 0x22
  2042     0042                     	ds	1
  2043     0043                     dtoa@s:
  2044                           
  2045                           ; 1 bytes @ 0x23
  2046     0043                     	ds	1
  2047     0044                     dtoa@i:
  2048                           
  2049                           ; 2 bytes @ 0x24
  2050     0044                     	ds	2
  2051     0046                     ?_vfpfcnvrt:
  2052     0046                     vfpfcnvrt@fmt:	
  2053                           ; 1 bytes @ 0x26
  2054                           
  2055     0046                     uart_init@n:	
  2056                           ; 1 bytes @ 0x26
  2057                           
  2058                           
  2059                           ; 4 bytes @ 0x26
  2060     0046                     	ds	1
  2061     0047                     vfpfcnvrt@ap:
  2062                           
  2063                           ; 1 bytes @ 0x27
  2064     0047                     	ds	1
  2065     0048                     ??_vfpfcnvrt:
  2066                           
  2067                           ; 1 bytes @ 0x28
  2068     0048                     	ds	2
  2069     004A                     uart_init@factor:
  2070                           
  2071                           ; 1 bytes @ 0x2A
  2072     004A                     	ds	2
  2073     004C                     vfpfcnvrt@done:
  2074                           
  2075                           ; 1 bytes @ 0x2C
  2076     004C                     	ds	1
  2077     004D                     vfpfcnvrt@convarg:
  2078                           
  2079                           ; 4 bytes @ 0x2D
  2080     004D                     	ds	4
  2081     0051                     vfpfcnvrt@fp:
  2082                           
  2083                           ; 1 bytes @ 0x31
  2084     0051                     	ds	1
  2085     0052                     vfpfcnvrt@cp:
  2086                           
  2087                           ; 2 bytes @ 0x32
  2088     0052                     	ds	2
  2089     0054                     ?_vfprintf:
  2090     0054                     vfprintf@fmt:	
  2091                           ; 2 bytes @ 0x34
  2092                           
  2093                           
  2094                           ; 2 bytes @ 0x34
  2095     0054                     	ds	2
  2096     0056                     vfprintf@ap:
  2097                           
  2098                           ; 1 bytes @ 0x36
  2099     0056                     	ds	1
  2100     0057                     ??_vfprintf:
  2101                           
  2102                           ; 1 bytes @ 0x37
  2103     0057                     	ds	1
  2104     0058                     vfprintf@fp:
  2105                           
  2106                           ; 1 bytes @ 0x38
  2107     0058                     	ds	1
  2108     0059                     vfprintf@cfmt:
  2109                           
  2110                           ; 2 bytes @ 0x39
  2111     0059                     	ds	2
  2112     005B                     ?_sprintf:
  2113     005B                     sprintf@fmt:	
  2114                           ; 2 bytes @ 0x3B
  2115                           
  2116                           
  2117                           ; 2 bytes @ 0x3B
  2118     005B                     	ds	4
  2119     005F                     ??_sprintf:
  2120                           
  2121                           ; 1 bytes @ 0x3F
  2122     005F                     	ds	1
  2123     0060                     ??_do_init:
  2124     0060                     ??_do_blank:	
  2125                           ; 1 bytes @ 0x40
  2126                           
  2127     0060                     ??_do_read:	
  2128                           ; 1 bytes @ 0x40
  2129                           
  2130     0060                     ??_do_write:	
  2131                           ; 1 bytes @ 0x40
  2132                           
  2133                           
  2134                           ; 1 bytes @ 0x40
  2135     0060                     	ds	2
  2136     0062                     ??_main:
  2137                           
  2138                           ; 1 bytes @ 0x42
  2139     0062                     	ds	2
  2140     0064                     main@cmd:
  2141                           
  2142                           ; 1 bytes @ 0x44
  2143     0064                     	ds	1
  2144                           
  2145                           	psect	maintext
  2146     053F                     __pmaintext:	
  2147 ;;
  2148 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2149 ;;
  2150 ;; *************** function _main *****************
  2151 ;; Defined at:
  2152 ;;		line 510 in file "main.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  cmd             1   68[BANK0 ] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : B1F/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2169 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2170 ;;Total ram usage:        3 bytes
  2171 ;; Hardware stack levels required when called: 12
  2172 ;; This function calls:
  2173 ;;		_clear
  2174 ;;		_do_blank
  2175 ;;		_do_init
  2176 ;;		_do_read
  2177 ;;		_do_write
  2178 ;;		_pop
  2179 ;;		_ports_init
  2180 ;;		_uart_init
  2181 ;; This function is called by:
  2182 ;;		Startup code after reset
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186     053F                     _main:	
  2187                           ;psect for function _main
  2188                           
  2189     053F                     l3482:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2192                           
  2193                           
  2194                           ;main.c: 513:     uart_init(0);
  2195     053F  3000               	movlw	0
  2196     0540  0020               	movlb	0	; select bank0
  2197     0541  00C1               	movwf	uart_init@baud_rate+3
  2198     0542  3000               	movlw	0
  2199     0543  00C0               	movwf	uart_init@baud_rate+2
  2200     0544  3000               	movlw	0
  2201     0545  00BF               	movwf	uart_init@baud_rate+1
  2202     0546  3000               	movlw	0
  2203     0547  00BE               	movwf	uart_init@baud_rate
  2204     0548  3182  2222  3185   	fcall	_uart_init
  2205                           
  2206                           ;main.c: 516:     ports_init();
  2207     054B  318E  2664  3185   	fcall	_ports_init
  2208     054E                     l3484:
  2209                           
  2210                           ;main.c: 519:     do_init();
  2211     054E  318E  26E8  3185   	fcall	_do_init
  2212     0551                     l3486:
  2213                           
  2214                           ;main.c: 522:     PIE1bits.RCIE=1;
  2215     0551  0021               	movlb	1	; select bank1
  2216     0552  1691               	bsf	17,5	;volatile
  2217     0553                     l3488:
  2218                           
  2219                           ;main.c: 523:     INTCONbits.GIE = 1;
  2220     0553  178B               	bsf	11,7	;volatile
  2221     0554                     l3490:
  2222                           
  2223                           ;main.c: 528:         if (cmd_active) {
  2224     0554  0021               	movlb	1	; select bank1
  2225     0555  086D               	movf	_cmd_active^(0+128),w
  2226     0556  1903               	btfsc	3,2
  2227     0557  2D59               	goto	u3411
  2228     0558  2D5A               	goto	u3410
  2229     0559                     u3411:
  2230     0559  2D84               	goto	l3510
  2231     055A                     u3410:
  2232     055A                     l3492:
  2233                           
  2234                           ;main.c: 530:             PORTEbits.RE1 = 1;
  2235     055A  0020               	movlb	0	; select bank0
  2236     055B  1490               	bsf	16,1	;volatile
  2237     055C                     l3494:
  2238                           
  2239                           ;main.c: 533:             pop();
  2240     055C  3187  27B6  3185   	fcall	_pop
  2241                           
  2242                           ;main.c: 535:             char cmd = pop();
  2243     055F  3187  27B6  3185   	fcall	_pop
  2244     0562  0020               	movlb	0	; select bank0
  2245     0563  00E4               	movwf	main@cmd
  2246     0564                     l3496:
  2247                           
  2248                           ;main.c: 538:             if (cmd == '1') {
  2249     0564  3031               	movlw	49
  2250     0565  0664               	xorwf	main@cmd,w
  2251     0566  1D03               	btfss	3,2
  2252     0567  2D69               	goto	u3421
  2253     0568  2D6A               	goto	u3420
  2254     0569                     u3421:
  2255     0569  2D6E               	goto	l3500
  2256     056A                     u3420:
  2257     056A                     l3498:
  2258                           
  2259                           ;main.c: 539:                 do_read();
  2260     056A  3182  22CF  3185   	fcall	_do_read
  2261                           
  2262                           ;main.c: 540:             }
  2263     056D  2D81               	goto	l3508
  2264     056E                     l3500:
  2265     056E  3032               	movlw	50
  2266     056F  0664               	xorwf	main@cmd,w
  2267     0570  1D03               	btfss	3,2
  2268     0571  2D73               	goto	u3431
  2269     0572  2D74               	goto	u3430
  2270     0573                     u3431:
  2271     0573  2D78               	goto	l3504
  2272     0574                     u3430:
  2273     0574                     l3502:
  2274                           
  2275                           ;main.c: 542:                 do_write();
  2276     0574  3184  24D0  3185   	fcall	_do_write
  2277                           
  2278                           ;main.c: 543:             }
  2279     0577  2D81               	goto	l3508
  2280     0578                     l3504:
  2281     0578  3033               	movlw	51
  2282     0579  0664               	xorwf	main@cmd,w
  2283     057A  1D03               	btfss	3,2
  2284     057B  2D7D               	goto	u3441
  2285     057C  2D7E               	goto	u3440
  2286     057D                     u3441:
  2287     057D  2D81               	goto	l3508
  2288     057E                     u3440:
  2289     057E                     l3506:
  2290                           
  2291                           ;main.c: 545:                 do_blank();
  2292     057E  3183  235B  3185   	fcall	_do_blank
  2293     0581                     l3508:
  2294                           
  2295                           ;main.c: 549:             clear();
  2296     0581  318D  25D7  3185   	fcall	_clear
  2297     0584                     l3510:
  2298                           
  2299                           ;main.c: 553:         PORTEbits.RE0 = 1;
  2300     0584  0020               	movlb	0	; select bank0
  2301     0585  1410               	bsf	16,0	;volatile
  2302     0586                     l3512:
  2303                           
  2304                           ;main.c: 554:         _delay((unsigned long)((250)*(20000000/4000.0)));
  2305     0586  3007               	movlw	7
  2306     0587  0020               	movlb	0	; select bank0
  2307     0588  00E3               	movwf	??_main+1
  2308     0589  3058               	movlw	88
  2309     058A  00E2               	movwf	??_main
  2310     058B  3059               	movlw	89
  2311     058C                     u3457:
  2312     058C  0B89               	decfsz	9,f
  2313     058D  2D8C               	goto	u3457
  2314     058E  0BE2               	decfsz	??_main,f
  2315     058F  2D8C               	goto	u3457
  2316     0590  0BE3               	decfsz	??_main+1,f
  2317     0591  2D8C               	goto	u3457
  2318     0592  3200               	nop2
  2319     0593                     l3514:
  2320                           
  2321                           ;main.c: 555:         PORTEbits.RE0 = 0;
  2322     0593  0020               	movlb	0	; select bank0
  2323     0594  1010               	bcf	16,0	;volatile
  2324     0595                     l3516:
  2325                           
  2326                           ;main.c: 556:         PORTEbits.RE1 = 0;
  2327     0595  1090               	bcf	16,1	;volatile
  2328     0596                     l3518:
  2329                           
  2330                           ;main.c: 557:         PORTEbits.RE2 = 0;
  2331     0596  1110               	bcf	16,2	;volatile
  2332     0597                     l3520:
  2333                           
  2334                           ;main.c: 558:         _delay((unsigned long)((250)*(20000000/4000.0)));
  2335     0597  3007               	movlw	7
  2336     0598  0020               	movlb	0	; select bank0
  2337     0599  00E3               	movwf	??_main+1
  2338     059A  3058               	movlw	88
  2339     059B  00E2               	movwf	??_main
  2340     059C  3059               	movlw	89
  2341     059D                     u3467:
  2342     059D  0B89               	decfsz	9,f
  2343     059E  2D9D               	goto	u3467
  2344     059F  0BE2               	decfsz	??_main,f
  2345     05A0  2D9D               	goto	u3467
  2346     05A1  0BE3               	decfsz	??_main+1,f
  2347     05A2  2D9D               	goto	u3467
  2348     05A3  3200               	nop2
  2349     05A4  2D54               	goto	l3490
  2350     05A5  3180  2840         	ljmp	start
  2351     05A7                     __end_of_main:
  2352                           
  2353                           	psect	text1
  2354     0222                     __ptext1:	
  2355 ;; *************** function _uart_init *****************
  2356 ;; Defined at:
  2357 ;;		line 28 in file "uart.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  baud_rate       4   30[BANK0 ] const unsigned long 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  n               4   38[BANK0 ] unsigned long 
  2362 ;;  factor          1   42[BANK0 ] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0, pclath, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2372 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2373 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2374 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2375 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2376 ;;Total ram usage:       13 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 4
  2379 ;; This function calls:
  2380 ;;		___lldiv
  2381 ;;		___lmul
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387     0222                     _uart_init:	
  2388                           ;psect for function _uart_init
  2389                           
  2390     0222                     l3442:	
  2391                           ;incstack = 0
  2392                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
  2393                           
  2394                           
  2395                           ;uart.c: 28: void uart_init(const uint32_t baud_rate);uart.c: 29: {;uart.c: 31:     INTC
      +                          ONbits.GIE = 0;
  2396     0222  138B               	bcf	11,7	;volatile
  2397                           
  2398                           ;uart.c: 33:     PIE1bits.TXIE = 1;
  2399     0223  0021               	movlb	1	; select bank1
  2400     0224  1611               	bsf	17,4	;volatile
  2401                           
  2402                           ;uart.c: 34:     PIE1bits.RCIE = 1;
  2403     0225  1691               	bsf	17,5	;volatile
  2404                           
  2405                           ;uart.c: 37:     TRISCbits.TRISC6=1;
  2406     0226  170E               	bsf	14,6	;volatile
  2407                           
  2408                           ;uart.c: 38:     TRISCbits.TRISC7=1;
  2409     0227  178E               	bsf	14,7	;volatile
  2410                           
  2411                           ;uart.c: 40:     BAUDCONbits.BRG16 = 1;
  2412     0228  0023               	movlb	3	; select bank3
  2413     0229  159F               	bsf	31,3	;volatile
  2414                           
  2415                           ;uart.c: 41:     BAUDCONbits.WUE = 0;
  2416     022A  109F               	bcf	31,1	;volatile
  2417                           
  2418                           ;uart.c: 43:     RCSTAbits.CREN = 1;
  2419     022B  161D               	bsf	29,4	;volatile
  2420                           
  2421                           ;uart.c: 44:     RCSTAbits.SPEN = 1;
  2422     022C  179D               	bsf	29,7	;volatile
  2423                           
  2424                           ;uart.c: 46:     TXSTAbits.SYNC = 0;
  2425     022D  121E               	bcf	30,4	;volatile
  2426                           
  2427                           ;uart.c: 47:     TXSTAbits.BRGH = 1;
  2428     022E  151E               	bsf	30,2	;volatile
  2429                           
  2430                           ;uart.c: 48:     TXSTAbits.TXEN = 1;
  2431     022F  169E               	bsf	30,5	;volatile
  2432     0230                     l3444:
  2433                           
  2434                           ;uart.c: 51:     if (baud_rate != 0) {
  2435     0230  0020               	movlb	0	; select bank0
  2436     0231  0841               	movf	uart_init@baud_rate+3,w
  2437     0232  0440               	iorwf	uart_init@baud_rate+2,w
  2438     0233  043F               	iorwf	uart_init@baud_rate+1,w
  2439     0234  043E               	iorwf	uart_init@baud_rate,w
  2440     0235  1903               	skipnz
  2441     0236  2A38               	goto	u3301
  2442     0237  2A39               	goto	u3300
  2443     0238                     u3301:
  2444     0238  2AC9               	goto	l3474
  2445     0239                     u3300:
  2446     0239                     l3446:
  2447                           
  2448                           ;uart.c: 53:         uint8_t factor;;uart.c: 54:         if (BAUDCONbits.BRG16 && TXSTAb
      +                          its.BRGH)
  2449     0239  0023               	movlb	3	; select bank3
  2450     023A  1D9F               	btfss	31,3	;volatile
  2451     023B  2A3D               	goto	u3311
  2452     023C  2A3E               	goto	u3310
  2453     023D                     u3311:
  2454     023D  2A46               	goto	l196
  2455     023E                     u3310:
  2456     023E                     l3448:
  2457     023E  1D1E               	btfss	30,2	;volatile
  2458     023F  2A41               	goto	u3321
  2459     0240  2A42               	goto	u3320
  2460     0241                     u3321:
  2461     0241  2A46               	goto	l196
  2462     0242                     u3320:
  2463     0242                     l3450:
  2464                           
  2465                           ;uart.c: 55:             factor = 4;
  2466     0242  3004               	movlw	4
  2467     0243  0020               	movlb	0	; select bank0
  2468     0244  00CA               	movwf	uart_init@factor
  2469     0245  2A67               	goto	l3464
  2470     0246                     l196:	
  2471                           ;uart.c: 56:         else if (BAUDCONbits.BRG16 && !TXSTAbits.BRGH)
  2472                           
  2473     0246  1D9F               	btfss	31,3	;volatile
  2474     0247  2A49               	goto	u3331
  2475     0248  2A4A               	goto	u3330
  2476     0249                     u3331:
  2477     0249  2A52               	goto	l198
  2478     024A                     u3330:
  2479     024A                     l3452:
  2480     024A  191E               	btfsc	30,2	;volatile
  2481     024B  2A4D               	goto	u3341
  2482     024C  2A4E               	goto	u3340
  2483     024D                     u3341:
  2484     024D  2A52               	goto	l198
  2485     024E                     u3340:
  2486     024E                     l3454:
  2487                           
  2488                           ;uart.c: 57:             factor = 16;
  2489     024E  3010               	movlw	16
  2490     024F  0020               	movlb	0	; select bank0
  2491     0250  00CA               	movwf	uart_init@factor
  2492     0251  2A67               	goto	l3464
  2493     0252                     l198:	
  2494                           ;uart.c: 58:         else if (!BAUDCONbits.BRG16 && TXSTAbits.BRGH)
  2495                           
  2496     0252  199F               	btfsc	31,3	;volatile
  2497     0253  2A55               	goto	u3351
  2498     0254  2A56               	goto	u3350
  2499     0255                     u3351:
  2500     0255  2A5B               	goto	l200
  2501     0256                     u3350:
  2502     0256                     l3456:
  2503     0256  1D1E               	btfss	30,2	;volatile
  2504     0257  2A59               	goto	u3361
  2505     0258  2A5A               	goto	u3360
  2506     0259                     u3361:
  2507     0259  2A5B               	goto	l200
  2508     025A                     u3360:
  2509     025A  2A4E               	goto	l3454
  2510     025B                     l200:	
  2511                           ;uart.c: 60:         else if (!BAUDCONbits.BRG16 && !TXSTAbits.BRGH)
  2512                           
  2513     025B  199F               	btfsc	31,3	;volatile
  2514     025C  2A5E               	goto	u3371
  2515     025D  2A5F               	goto	u3370
  2516     025E                     u3371:
  2517     025E  2A67               	goto	l199
  2518     025F                     u3370:
  2519     025F                     l3460:
  2520     025F  191E               	btfsc	30,2	;volatile
  2521     0260  2A62               	goto	u3381
  2522     0261  2A63               	goto	u3380
  2523     0262                     u3381:
  2524     0262  2A67               	goto	l199
  2525     0263                     u3380:
  2526     0263                     l3462:
  2527                           
  2528                           ;uart.c: 61:             factor = 64;
  2529     0263  3040               	movlw	64
  2530     0264  0020               	movlb	0	; select bank0
  2531     0265  00CA               	movwf	uart_init@factor
  2532     0266  2A67               	goto	l3464
  2533     0267                     l199:
  2534     0267                     l3464:
  2535                           
  2536                           ;uart.c: 62:         if (TXSTAbits.SYNC)
  2537     0267  0023               	movlb	3	; select bank3
  2538     0268  1E1E               	btfss	30,4	;volatile
  2539     0269  2A6B               	goto	u3391
  2540     026A  2A6C               	goto	u3390
  2541     026B                     u3391:
  2542     026B  2A6F               	goto	l3468
  2543     026C                     u3390:
  2544     026C                     l3466:
  2545                           
  2546                           ;uart.c: 63:             factor = 64;
  2547     026C  3040               	movlw	64
  2548     026D  0020               	movlb	0	; select bank0
  2549     026E  00CA               	movwf	uart_init@factor
  2550     026F                     l3468:
  2551                           
  2552                           ;uart.c: 66:         uint32_t n = (int32_t) 20000000 / (factor * baud_rate) - 1u ;
  2553     026F  0020               	movlb	0	; select bank0
  2554     0270  084A               	movf	uart_init@factor,w
  2555     0271  00C2               	movwf	??_uart_init
  2556     0272  01C3               	clrf	??_uart_init+1
  2557     0273  01C4               	clrf	??_uart_init+2
  2558     0274  01C5               	clrf	??_uart_init+3
  2559     0275  0845               	movf	??_uart_init+3,w
  2560     0276  00A7               	movwf	___lmul@multiplier+3
  2561     0277  0844               	movf	??_uart_init+2,w
  2562     0278  00A6               	movwf	___lmul@multiplier+2
  2563     0279  0843               	movf	??_uart_init+1,w
  2564     027A  00A5               	movwf	___lmul@multiplier+1
  2565     027B  0842               	movf	??_uart_init,w
  2566     027C  00A4               	movwf	___lmul@multiplier
  2567     027D  0841               	movf	uart_init@baud_rate+3,w
  2568     027E  00AB               	movwf	___lmul@multiplicand+3
  2569     027F  0840               	movf	uart_init@baud_rate+2,w
  2570     0280  00AA               	movwf	___lmul@multiplicand+2
  2571     0281  083F               	movf	uart_init@baud_rate+1,w
  2572     0282  00A9               	movwf	___lmul@multiplicand+1
  2573     0283  083E               	movf	uart_init@baud_rate,w
  2574     0284  00A8               	movwf	___lmul@multiplicand
  2575     0285  318F  278D  3182   	fcall	___lmul
  2576     0288  0020               	movlb	0	; select bank0
  2577     0289  0827               	movf	?___lmul+3,w
  2578     028A  00B3               	movwf	___lldiv@divisor+3
  2579     028B  0826               	movf	?___lmul+2,w
  2580     028C  00B2               	movwf	___lldiv@divisor+2
  2581     028D  0825               	movf	?___lmul+1,w
  2582     028E  00B1               	movwf	___lldiv@divisor+1
  2583     028F  0824               	movf	?___lmul,w
  2584     0290  00B0               	movwf	___lldiv@divisor
  2585     0291  3001               	movlw	1
  2586     0292  00B7               	movwf	___lldiv@dividend+3
  2587     0293  3031               	movlw	49
  2588     0294  00B6               	movwf	___lldiv@dividend+2
  2589     0295  302D               	movlw	45
  2590     0296  00B5               	movwf	___lldiv@dividend+1
  2591     0297  3000               	movlw	0
  2592     0298  00B4               	movwf	___lldiv@dividend
  2593     0299  3186  2667  3182   	fcall	___lldiv
  2594     029C  30FF               	movlw	255
  2595     029D  0020               	movlb	0	; select bank0
  2596     029E  0730               	addwf	?___lldiv,w
  2597     029F  00C6               	movwf	uart_init@n
  2598     02A0  30FF               	movlw	255
  2599     02A1  3D31               	addwfc	?___lldiv+1,w
  2600     02A2  00C7               	movwf	uart_init@n+1
  2601     02A3  30FF               	movlw	255
  2602     02A4  3D32               	addwfc	?___lldiv+2,w
  2603     02A5  00C8               	movwf	uart_init@n+2
  2604     02A6  30FF               	movlw	255
  2605     02A7  3D33               	addwfc	?___lldiv+3,w
  2606     02A8  00C9               	movwf	uart_init@n+3
  2607     02A9                     l3470:
  2608                           
  2609                           ;uart.c: 67:         SPBRGH = (n & 0xFF00) >> 8;
  2610     02A9  0846               	movf	uart_init@n,w
  2611     02AA  00C2               	movwf	??_uart_init
  2612     02AB  0847               	movf	uart_init@n+1,w
  2613     02AC  00C3               	movwf	??_uart_init+1
  2614     02AD  0848               	movf	uart_init@n+2,w
  2615     02AE  00C4               	movwf	??_uart_init+2
  2616     02AF  0849               	movf	uart_init@n+3,w
  2617     02B0  00C5               	movwf	??_uart_init+3
  2618     02B1  3008               	movlw	8
  2619     02B2                     u3405:
  2620     02B2  36C5               	lsrf	??_uart_init+3,f
  2621     02B3  0CC4               	rrf	??_uart_init+2,f
  2622     02B4  0CC3               	rrf	??_uart_init+1,f
  2623     02B5  0CC2               	rrf	??_uart_init,f
  2624     02B6                     u3400:
  2625     02B6  0B89               	decfsz	9,f
  2626     02B7  2AB2               	goto	u3405
  2627     02B8  0842               	movf	??_uart_init,w
  2628     02B9  0023               	movlb	3	; select bank3
  2629     02BA  009C               	movwf	28	;volatile
  2630     02BB                     l3472:
  2631                           
  2632                           ;uart.c: 68:         SPBRG = n & 0x00FF;
  2633     02BB  30FF               	movlw	255
  2634     02BC  0020               	movlb	0	; select bank0
  2635     02BD  0546               	andwf	uart_init@n,w
  2636     02BE  00C2               	movwf	??_uart_init
  2637     02BF  3000               	movlw	0
  2638     02C0  0547               	andwf	uart_init@n+1,w
  2639     02C1  00C3               	movwf	??_uart_init+1
  2640     02C2  0842               	movf	??_uart_init,w
  2641     02C3  0023               	movlb	3	; select bank3
  2642     02C4  009B               	movwf	27	;volatile
  2643     02C5  0020               	movlb	0	; select bank0
  2644     02C6  0843               	movf	??_uart_init+1,w
  2645     02C7  0023               	movlb	3	; select bank3
  2646     02C8  009C               	movwf	28	;volatile
  2647     02C9                     l3474:
  2648                           
  2649                           ;uart.c: 72:     INTCONbits.PEIE = 1;
  2650     02C9  170B               	bsf	11,6	;volatile
  2651     02CA                     l3476:
  2652                           
  2653                           ;uart.c: 76:     PIE1bits.RCIE=1;
  2654     02CA  0021               	movlb	1	; select bank1
  2655     02CB  1691               	bsf	17,5	;volatile
  2656     02CC                     l3478:
  2657                           
  2658                           ;uart.c: 79:     PIE1bits.TXIE=0;
  2659     02CC  1211               	bcf	17,4	;volatile
  2660     02CD                     l3480:
  2661                           
  2662                           ;uart.c: 82:     INTCONbits.GIE = 1;
  2663     02CD  178B               	bsf	11,7	;volatile
  2664     02CE                     l204:
  2665     02CE  0008               	return
  2666     02CF                     __end_of_uart_init:
  2667                           
  2668                           	psect	text2
  2669     0F8D                     __ptext2:	
  2670 ;; *************** function ___lmul *****************
  2671 ;; Defined at:
  2672 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul32.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  multiplier      4    4[BANK0 ] unsigned long 
  2675 ;;  multiplicand    4    8[BANK0 ] unsigned long 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  product         4   12[BANK0 ] unsigned long 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  4    4[BANK0 ] unsigned long 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2687 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2688 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2690 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2691 ;;Total ram usage:       12 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 3
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_uart_init
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701     0F8D                     ___lmul:	
  2702                           ;psect for function ___lmul
  2703                           
  2704     0F8D                     l3228:	
  2705                           ;incstack = 0
  2706                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2707                           
  2708     0F8D  3000               	movlw	0
  2709     0F8E  0020               	movlb	0	; select bank0
  2710     0F8F  00AF               	movwf	___lmul@product+3
  2711     0F90  3000               	movlw	0
  2712     0F91  00AE               	movwf	___lmul@product+2
  2713     0F92  3000               	movlw	0
  2714     0F93  00AD               	movwf	___lmul@product+1
  2715     0F94  3000               	movlw	0
  2716     0F95  00AC               	movwf	___lmul@product
  2717     0F96                     l3230:
  2718     0F96  1C24               	btfss	___lmul@multiplier,0
  2719     0F97  2F99               	goto	u3081
  2720     0F98  2F9A               	goto	u3080
  2721     0F99                     u3081:
  2722     0F99  2FA2               	goto	l3234
  2723     0F9A                     u3080:
  2724     0F9A                     l3232:
  2725     0F9A  0828               	movf	___lmul@multiplicand,w
  2726     0F9B  07AC               	addwf	___lmul@product,f
  2727     0F9C  0829               	movf	___lmul@multiplicand+1,w
  2728     0F9D  3DAD               	addwfc	___lmul@product+1,f
  2729     0F9E  082A               	movf	___lmul@multiplicand+2,w
  2730     0F9F  3DAE               	addwfc	___lmul@product+2,f
  2731     0FA0  082B               	movf	___lmul@multiplicand+3,w
  2732     0FA1  3DAF               	addwfc	___lmul@product+3,f
  2733     0FA2                     l3234:
  2734     0FA2  3001               	movlw	1
  2735     0FA3                     u3095:
  2736     0FA3  35A8               	lslf	___lmul@multiplicand,f
  2737     0FA4  0DA9               	rlf	___lmul@multiplicand+1,f
  2738     0FA5  0DAA               	rlf	___lmul@multiplicand+2,f
  2739     0FA6  0DAB               	rlf	___lmul@multiplicand+3,f
  2740     0FA7  0B89               	decfsz	9,f
  2741     0FA8  2FA3               	goto	u3095
  2742     0FA9                     l3236:
  2743     0FA9  3001               	movlw	1
  2744     0FAA                     u3105:
  2745     0FAA  36A7               	lsrf	___lmul@multiplier+3,f
  2746     0FAB  0CA6               	rrf	___lmul@multiplier+2,f
  2747     0FAC  0CA5               	rrf	___lmul@multiplier+1,f
  2748     0FAD  0CA4               	rrf	___lmul@multiplier,f
  2749     0FAE  0B89               	decfsz	9,f
  2750     0FAF  2FAA               	goto	u3105
  2751     0FB0  0827               	movf	___lmul@multiplier+3,w
  2752     0FB1  0426               	iorwf	___lmul@multiplier+2,w
  2753     0FB2  0425               	iorwf	___lmul@multiplier+1,w
  2754     0FB3  0424               	iorwf	___lmul@multiplier,w
  2755     0FB4  1D03               	skipz
  2756     0FB5  2FB7               	goto	u3111
  2757     0FB6  2FB8               	goto	u3110
  2758     0FB7                     u3111:
  2759     0FB7  2F96               	goto	l3230
  2760     0FB8                     u3110:
  2761     0FB8                     l3238:
  2762     0FB8  082F               	movf	___lmul@product+3,w
  2763     0FB9  00A7               	movwf	?___lmul+3
  2764     0FBA  082E               	movf	___lmul@product+2,w
  2765     0FBB  00A6               	movwf	?___lmul+2
  2766     0FBC  082D               	movf	___lmul@product+1,w
  2767     0FBD  00A5               	movwf	?___lmul+1
  2768     0FBE  082C               	movf	___lmul@product,w
  2769     0FBF  00A4               	movwf	?___lmul
  2770     0FC0                     l405:
  2771     0FC0  0008               	return
  2772     0FC1                     __end_of___lmul:
  2773                           
  2774                           	psect	text3
  2775     0667                     __ptext3:	
  2776 ;; *************** function ___lldiv *****************
  2777 ;; Defined at:
  2778 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/__lldiv.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  divisor         4   16[BANK0 ] unsigned long 
  2781 ;;  dividend        4   20[BANK0 ] unsigned long 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  quotient        4   25[BANK0 ] unsigned long 
  2784 ;;  counter         1   29[BANK0 ] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  4   16[BANK0 ] unsigned long 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2794 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2795 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2796 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2797 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2798 ;;Total ram usage:       14 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 3
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_uart_init
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808     0667                     ___lldiv:	
  2809                           ;psect for function ___lldiv
  2810                           
  2811     0667                     l3242:	
  2812                           ;incstack = 0
  2813                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2814                           
  2815     0667  3000               	movlw	0
  2816     0668  0020               	movlb	0	; select bank0
  2817     0669  00BC               	movwf	___lldiv@quotient+3
  2818     066A  3000               	movlw	0
  2819     066B  00BB               	movwf	___lldiv@quotient+2
  2820     066C  3000               	movlw	0
  2821     066D  00BA               	movwf	___lldiv@quotient+1
  2822     066E  3000               	movlw	0
  2823     066F  00B9               	movwf	___lldiv@quotient
  2824     0670  0833               	movf	___lldiv@divisor+3,w
  2825     0671  0432               	iorwf	___lldiv@divisor+2,w
  2826     0672  0431               	iorwf	___lldiv@divisor+1,w
  2827     0673  0430               	iorwf	___lldiv@divisor,w
  2828     0674  1903               	skipnz
  2829     0675  2E77               	goto	u3121
  2830     0676  2E78               	goto	u3120
  2831     0677                     u3121:
  2832     0677  2EB9               	goto	l3262
  2833     0678                     u3120:
  2834     0678                     l3244:
  2835     0678  01BD               	clrf	___lldiv@counter
  2836     0679  0ABD               	incf	___lldiv@counter,f
  2837     067A  2E86               	goto	l3248
  2838     067B                     l3246:
  2839     067B  3001               	movlw	1
  2840     067C                     u3135:
  2841     067C  35B0               	lslf	___lldiv@divisor,f
  2842     067D  0DB1               	rlf	___lldiv@divisor+1,f
  2843     067E  0DB2               	rlf	___lldiv@divisor+2,f
  2844     067F  0DB3               	rlf	___lldiv@divisor+3,f
  2845     0680  0B89               	decfsz	9,f
  2846     0681  2E7C               	goto	u3135
  2847     0682  3001               	movlw	1
  2848     0683  00B8               	movwf	??___lldiv
  2849     0684  0838               	movf	??___lldiv,w
  2850     0685  07BD               	addwf	___lldiv@counter,f
  2851     0686                     l3248:
  2852     0686  1FB3               	btfss	___lldiv@divisor+3,7
  2853     0687  2E89               	goto	u3141
  2854     0688  2E8A               	goto	u3140
  2855     0689                     u3141:
  2856     0689  2E7B               	goto	l3246
  2857     068A                     u3140:
  2858     068A                     l3250:
  2859     068A  3001               	movlw	1
  2860     068B                     u3155:
  2861     068B  35B9               	lslf	___lldiv@quotient,f
  2862     068C  0DBA               	rlf	___lldiv@quotient+1,f
  2863     068D  0DBB               	rlf	___lldiv@quotient+2,f
  2864     068E  0DBC               	rlf	___lldiv@quotient+3,f
  2865     068F  0B89               	decfsz	9,f
  2866     0690  2E8B               	goto	u3155
  2867     0691                     l3252:
  2868     0691  0833               	movf	___lldiv@divisor+3,w
  2869     0692  0237               	subwf	___lldiv@dividend+3,w
  2870     0693  1D03               	skipz
  2871     0694  2E9F               	goto	u3165
  2872     0695  0832               	movf	___lldiv@divisor+2,w
  2873     0696  0236               	subwf	___lldiv@dividend+2,w
  2874     0697  1D03               	skipz
  2875     0698  2E9F               	goto	u3165
  2876     0699  0831               	movf	___lldiv@divisor+1,w
  2877     069A  0235               	subwf	___lldiv@dividend+1,w
  2878     069B  1D03               	skipz
  2879     069C  2E9F               	goto	u3165
  2880     069D  0830               	movf	___lldiv@divisor,w
  2881     069E  0234               	subwf	___lldiv@dividend,w
  2882     069F                     u3165:
  2883     069F  1C03               	skipc
  2884     06A0  2EA2               	goto	u3161
  2885     06A1  2EA3               	goto	u3160
  2886     06A2                     u3161:
  2887     06A2  2EAC               	goto	l3258
  2888     06A3                     u3160:
  2889     06A3                     l3254:
  2890     06A3  0830               	movf	___lldiv@divisor,w
  2891     06A4  02B4               	subwf	___lldiv@dividend,f
  2892     06A5  0831               	movf	___lldiv@divisor+1,w
  2893     06A6  3BB5               	subwfb	___lldiv@dividend+1,f
  2894     06A7  0832               	movf	___lldiv@divisor+2,w
  2895     06A8  3BB6               	subwfb	___lldiv@dividend+2,f
  2896     06A9  0833               	movf	___lldiv@divisor+3,w
  2897     06AA  3BB7               	subwfb	___lldiv@dividend+3,f
  2898     06AB                     l3256:
  2899     06AB  1439               	bsf	___lldiv@quotient,0
  2900     06AC                     l3258:
  2901     06AC  3001               	movlw	1
  2902     06AD                     u3175:
  2903     06AD  36B3               	lsrf	___lldiv@divisor+3,f
  2904     06AE  0CB2               	rrf	___lldiv@divisor+2,f
  2905     06AF  0CB1               	rrf	___lldiv@divisor+1,f
  2906     06B0  0CB0               	rrf	___lldiv@divisor,f
  2907     06B1  0B89               	decfsz	9,f
  2908     06B2  2EAD               	goto	u3175
  2909     06B3                     l3260:
  2910     06B3  3001               	movlw	1
  2911     06B4  02BD               	subwf	___lldiv@counter,f
  2912     06B5  1D03               	btfss	3,2
  2913     06B6  2EB8               	goto	u3181
  2914     06B7  2EB9               	goto	u3180
  2915     06B8                     u3181:
  2916     06B8  2E8A               	goto	l3250
  2917     06B9                     u3180:
  2918     06B9                     l3262:
  2919     06B9  083C               	movf	___lldiv@quotient+3,w
  2920     06BA  00B3               	movwf	?___lldiv+3
  2921     06BB  083B               	movf	___lldiv@quotient+2,w
  2922     06BC  00B2               	movwf	?___lldiv+2
  2923     06BD  083A               	movf	___lldiv@quotient+1,w
  2924     06BE  00B1               	movwf	?___lldiv+1
  2925     06BF  0839               	movf	___lldiv@quotient,w
  2926     06C0  00B0               	movwf	?___lldiv
  2927     06C1                     l427:
  2928     06C1  0008               	return
  2929     06C2                     __end_of___lldiv:
  2930                           
  2931                           	psect	text4
  2932     0E64                     __ptext4:	
  2933 ;; *************** function _ports_init *****************
  2934 ;; Defined at:
  2935 ;;		line 192 in file "main.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2953 ;;Total ram usage:        0 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 3
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963     0E64                     _ports_init:	
  2964                           ;psect for function _ports_init
  2965                           
  2966     0E64                     l3274:	
  2967                           ;incstack = 0
  2968                           ; Regs used in _ports_init: [wreg+status,2]
  2969                           
  2970                           
  2971                           ;main.c: 195:     ADCON0bits.ADON = 0;
  2972     0E64  0021               	movlb	1	; select bank1
  2973     0E65  101D               	bcf	29,0	;volatile
  2974     0E66                     l3276:
  2975                           
  2976                           ;main.c: 196:     ANSELA = 0;
  2977     0E66  0023               	movlb	3	; select bank3
  2978     0E67  018C               	clrf	12	;volatile
  2979                           
  2980                           ;main.c: 197:     ANSELB = 0;
  2981     0E68  018D               	clrf	13	;volatile
  2982                           
  2983                           ;main.c: 198:     ANSELD = 0;
  2984     0E69  018F               	clrf	15	;volatile
  2985     0E6A                     l3278:
  2986                           
  2987                           ;main.c: 201:     TRISEbits.TRISE0 = 0;
  2988     0E6A  0021               	movlb	1	; select bank1
  2989     0E6B  1010               	bcf	16,0	;volatile
  2990     0E6C                     l3280:
  2991                           
  2992                           ;main.c: 202:     TRISEbits.TRISE1 = 0;
  2993     0E6C  1090               	bcf	16,1	;volatile
  2994     0E6D                     l3282:
  2995                           
  2996                           ;main.c: 203:     TRISEbits.TRISE2 = 0;
  2997     0E6D  1110               	bcf	16,2	;volatile
  2998     0E6E                     l3284:
  2999                           
  3000                           ;main.c: 204:     PORTEbits.RE0 = 0;
  3001     0E6E  0020               	movlb	0	; select bank0
  3002     0E6F  1010               	bcf	16,0	;volatile
  3003     0E70                     l3286:
  3004                           
  3005                           ;main.c: 205:     PORTEbits.RE1 = 0;
  3006     0E70  1090               	bcf	16,1	;volatile
  3007     0E71                     l3288:
  3008                           
  3009                           ;main.c: 206:     PORTEbits.RE2 = 0;
  3010     0E71  1110               	bcf	16,2	;volatile
  3011     0E72                     l3290:
  3012                           
  3013                           ;main.c: 209:     TRISAbits.TRISA2 = 0;
  3014     0E72  0021               	movlb	1	; select bank1
  3015     0E73  110C               	bcf	12,2	;volatile
  3016     0E74                     l3292:
  3017                           
  3018                           ;main.c: 210:     TRISAbits.TRISA3 = 1;
  3019     0E74  158C               	bsf	12,3	;volatile
  3020     0E75                     l3294:
  3021                           
  3022                           ;main.c: 211:     PORTAbits.RA2 = 0;
  3023     0E75  0020               	movlb	0	; select bank0
  3024     0E76  110C               	bcf	12,2	;volatile
  3025                           
  3026                           ;main.c: 214:     TRISD = 0x00;
  3027     0E77  0021               	movlb	1	; select bank1
  3028     0E78  018F               	clrf	15	;volatile
  3029     0E79                     l3296:
  3030                           
  3031                           ;main.c: 218:     TRISC = 0b11000000;
  3032     0E79  30C0               	movlw	192
  3033     0E7A  008E               	movwf	14	;volatile
  3034     0E7B                     l3298:
  3035                           
  3036                           ;main.c: 221:     TRISB = 0x00;
  3037     0E7B  018D               	clrf	13	;volatile
  3038     0E7C                     l3300:
  3039                           
  3040                           ;main.c: 227:     PORTBbits.RB0 = 0;
  3041     0E7C  0020               	movlb	0	; select bank0
  3042     0E7D  100D               	bcf	13,0	;volatile
  3043     0E7E                     l3302:
  3044                           
  3045                           ;main.c: 228:     PORTBbits.RB1 = 0;
  3046     0E7E  108D               	bcf	13,1	;volatile
  3047     0E7F                     l3304:
  3048                           
  3049                           ;main.c: 229:     PORTBbits.RB2 = 1;
  3050     0E7F  150D               	bsf	13,2	;volatile
  3051     0E80                     l3306:
  3052                           
  3053                           ;main.c: 230:     PORTBbits.RB3 = 0;
  3054     0E80  118D               	bcf	13,3	;volatile
  3055     0E81                     l3308:
  3056                           
  3057                           ;main.c: 231:     PORTBbits.RB4 = 0;
  3058     0E81  120D               	bcf	13,4	;volatile
  3059     0E82                     l106:
  3060     0E82  0008               	return
  3061     0E83                     __end_of_ports_init:
  3062                           
  3063                           	psect	text5
  3064     04D0                     __ptext5:	
  3065 ;; *************** function _do_write *****************
  3066 ;; Defined at:
  3067 ;;		line 464 in file "main.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  s               2   61[BANK1 ] PTR unsigned char 
  3072 ;;		 -> STR_10(15), 
  3073 ;;  data            1   65[BANK1 ] unsigned char 
  3074 ;;  lo              1   64[BANK1 ] unsigned char 
  3075 ;;  hi              1   63[BANK1 ] unsigned char 
  3076 ;;  ads            48   13[BANK1 ] unsigned char [48]
  3077 ;;  addr            2   67[BANK1 ] unsigned short 
  3078 ;;  c               1   66[BANK1 ] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3089 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3090 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3091 ;;      Totals:         0       1      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3092 ;;Total ram usage:       57 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 11
  3095 ;; This function calls:
  3096 ;;		_charToHexDigit
  3097 ;;		_pop
  3098 ;;		_setup_address
  3099 ;;		_sprintf
  3100 ;;		_uart_puts
  3101 ;;		_write_port
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107     04D0                     _do_write:	
  3108                           ;psect for function _do_write
  3109                           
  3110     04D0                     l3402:	
  3111                           ;incstack = 0
  3112                           ; Regs used in _do_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3113                           
  3114                           
  3115                           ;main.c: 466:     uint16_t addr;;main.c: 467:     char ads[48];;main.c: 468:     char c;
      +                          ;main.c: 471:     TRISD = 0x00;
  3116     04D0  0021               	movlb	1	; select bank1
  3117     04D1  018F               	clrf	15	;volatile
  3118     04D2                     l3404:
  3119                           
  3120                           ;main.c: 474:     PORTBbits.RB1 = 1;
  3121     04D2  0020               	movlb	0	; select bank0
  3122     04D3  148D               	bsf	13,1	;volatile
  3123     04D4                     l3406:
  3124                           
  3125                           ;main.c: 476:     PORTBbits.RB2 = 1;
  3126     04D4  150D               	bsf	13,2	;volatile
  3127     04D5                     l3408:
  3128                           
  3129                           ;main.c: 478:     PORTBbits.RB3 = 0;
  3130     04D5  118D               	bcf	13,3	;volatile
  3131                           
  3132                           ;main.c: 480:     for (addr = 0; addr < 2048; addr++) {
  3133     04D6  0021               	movlb	1	; select bank1
  3134     04D7  01E3               	clrf	do_write@addr^(0+128)
  3135     04D8  01E4               	clrf	(do_write@addr+1)^(0+128)
  3136     04D9                     l3414:
  3137                           
  3138                           ;main.c: 481:         if (cmd_active == 0) {
  3139     04D9  086D               	movf	_cmd_active^(0+128),w
  3140     04DA  1D03               	btfss	3,2
  3141     04DB  2CDD               	goto	u3271
  3142     04DC  2CDE               	goto	u3270
  3143     04DD                     u3271:
  3144     04DD  2CED               	goto	l3422
  3145     04DE                     u3270:
  3146     04DE                     l3416:
  3147                           
  3148                           ;main.c: 482:             char *s = "Write aborted\n";
  3149     04DE  3044               	movlw	low (STR_10| (0+32768))
  3150     04DF  00DD               	movwf	do_write@s^(0+128)
  3151     04E0  3090               	movlw	high (STR_10| (0+32768))
  3152     04E1  00DE               	movwf	(do_write@s^(0+128)+1)
  3153     04E2                     l3418:
  3154                           
  3155                           ;main.c: 483:             uart_puts(s);
  3156     04E2  085E               	movf	(do_write@s+1)^(0+128),w
  3157     04E3  0020               	movlb	0	; select bank0
  3158     04E4  00A5               	movwf	uart_puts@s+1
  3159     04E5  0021               	movlb	1	; select bank1
  3160     04E6  085D               	movf	do_write@s^(0+128),w
  3161     04E7  0020               	movlb	0	; select bank0
  3162     04E8  00A4               	movwf	uart_puts@s
  3163     04E9  318F  2736  3184   	fcall	_uart_puts
  3164     04EC  2D3E               	goto	l148
  3165     04ED                     l3422:
  3166                           
  3167                           ;main.c: 488:         c = pop();
  3168     04ED  3187  27B6  3184   	fcall	_pop
  3169     04F0  0021               	movlb	1	; select bank1
  3170     04F1  00E2               	movwf	do_write@c^(0+128)
  3171     04F2                     l3424:
  3172                           
  3173                           ;main.c: 489:         uint8_t hi = charToHexDigit(c);
  3174     04F2  0862               	movf	do_write@c^(0+128),w
  3175     04F3  318D  2591  3184   	fcall	_charToHexDigit
  3176     04F6  0021               	movlb	1	; select bank1
  3177     04F7  00DF               	movwf	do_write@hi^(0+128)
  3178     04F8                     l3426:
  3179                           
  3180                           ;main.c: 490:         c = pop();
  3181     04F8  3187  27B6  3184   	fcall	_pop
  3182     04FB  0021               	movlb	1	; select bank1
  3183     04FC  00E2               	movwf	do_write@c^(0+128)
  3184                           
  3185                           ;main.c: 491:         uint8_t lo = charToHexDigit(c);
  3186     04FD  0862               	movf	do_write@c^(0+128),w
  3187     04FE  318D  2591  3184   	fcall	_charToHexDigit
  3188     0501  0021               	movlb	1	; select bank1
  3189     0502  00E0               	movwf	do_write@lo^(0+128)
  3190     0503                     l3428:
  3191                           
  3192                           ;main.c: 492:         uint8_t data = hi*16+lo;
  3193     0503  085F               	movf	do_write@hi^(0+128),w
  3194     0504  0020               	movlb	0	; select bank0
  3195     0505  00E0               	movwf	??_do_write
  3196     0506  3003               	movlw	3
  3197     0507                     u3285:
  3198     0507  35E0               	lslf	??_do_write,f
  3199     0508  3EFF               	addlw	-1
  3200     0509  1D03               	skipz
  3201     050A  2D07               	goto	u3285
  3202     050B  3560               	lslf	??_do_write,w
  3203     050C  0021               	movlb	1	; select bank1
  3204     050D  0760               	addwf	do_write@lo^(0+128),w
  3205     050E  00E1               	movwf	do_write@data^(0+128)
  3206     050F                     l3430:
  3207                           
  3208                           ;main.c: 495:         setup_address(addr);
  3209     050F  0864               	movf	(do_write@addr+1)^(0+128),w
  3210     0510  0020               	movlb	0	; select bank0
  3211     0511  00A5               	movwf	setup_address@addr+1
  3212     0512  0021               	movlb	1	; select bank1
  3213     0513  0863               	movf	do_write@addr^(0+128),w
  3214     0514  0020               	movlb	0	; select bank0
  3215     0515  00A4               	movwf	setup_address@addr
  3216     0516  318D  25F0  3184   	fcall	_setup_address
  3217     0519                     l3432:
  3218                           
  3219                           ;main.c: 498:         write_port(data);
  3220     0519  0021               	movlb	1	; select bank1
  3221     051A  0861               	movf	do_write@data^(0+128),w
  3222     051B  318F  2760  3184   	fcall	_write_port
  3223     051E                     l3434:
  3224                           
  3225                           ;main.c: 499:     }
  3226     051E  3001               	movlw	1
  3227     051F  0021               	movlb	1	; select bank1
  3228     0520  07E3               	addwf	do_write@addr^(0+128),f
  3229     0521  3000               	movlw	0
  3230     0522  3DE4               	addwfc	(do_write@addr+1)^(0+128),f
  3231     0523                     l3436:
  3232     0523  3008               	movlw	8
  3233     0524  0264               	subwf	(do_write@addr+1)^(0+128),w
  3234     0525  3000               	movlw	0
  3235     0526  1903               	skipnz
  3236     0527  0263               	subwf	do_write@addr^(0+128),w
  3237     0528  1C03               	skipc
  3238     0529  2D2B               	goto	u3291
  3239     052A  2D2C               	goto	u3290
  3240     052B                     u3291:
  3241     052B  2CD9               	goto	l3414
  3242     052C                     u3290:
  3243     052C                     l146:
  3244                           
  3245                           ;main.c: 502:     PORTBbits.RB1 = 0;
  3246     052C  0020               	movlb	0	; select bank0
  3247     052D  108D               	bcf	13,1	;volatile
  3248     052E                     l3438:
  3249                           
  3250                           ;main.c: 504:     sprintf(ads, "Write completed.\n");
  3251     052E  3032               	movlw	low (STR_11| (0+32768))
  3252     052F  00DB               	movwf	sprintf@fmt
  3253     0530  3090               	movlw	high (STR_11| (0+32768))
  3254     0531  00DC               	movwf	sprintf@fmt+1
  3255     0532  30AD               	movlw	(low (do_write@ads| 0))& (0+255)
  3256     0533  318E  2645  3184   	fcall	_sprintf
  3257     0536                     l3440:
  3258                           
  3259                           ;main.c: 505:     uart_puts(ads);
  3260     0536  30AD               	movlw	low do_write@ads
  3261     0537  0020               	movlb	0	; select bank0
  3262     0538  00A4               	movwf	uart_puts@s
  3263     0539  3000               	movlw	high do_write@ads
  3264     053A  00A5               	movwf	uart_puts@s+1
  3265     053B  318F  2736  3184   	fcall	_uart_puts
  3266     053E                     l148:
  3267     053E  0008               	return
  3268     053F                     __end_of_do_write:
  3269                           
  3270                           	psect	text6
  3271     0F60                     __ptext6:	
  3272 ;; *************** function _write_port *****************
  3273 ;; Defined at:
  3274 ;;		line 435 in file "main.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  data            1    wreg     unsigned char 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  data            1    6[BANK0 ] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3290 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3291 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3292 ;;Total ram usage:        3 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 3
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_do_write
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302     0F60                     _write_port:	
  3303                           ;psect for function _write_port
  3304                           
  3305                           
  3306                           ;incstack = 0
  3307                           ; Regs used in _write_port: [wreg]
  3308                           ;write_port@data stored from wreg
  3309     0F60  0020               	movlb	0	; select bank0
  3310     0F61  00A6               	movwf	write_port@data
  3311     0F62                     l3212:
  3312                           
  3313                           ;main.c: 435: void write_port(uint8_t data);main.c: 436: {;main.c: 438:      _delay((uns
      +                          igned long)((10)*(20000000/4000000.0)));
  3314     0F62  3010               	movlw	16
  3315     0F63                     u3477:
  3316     0F63  0B89               	decfsz	9,f
  3317     0F64  2F63               	goto	u3477
  3318     0F65  3200               	nop2
  3319                           
  3320                           ;main.c: 439:     LATD = data;
  3321     0F66  0020               	movlb	0	; select bank0
  3322     0F67  0826               	movf	write_port@data,w
  3323     0F68  0022               	movlb	2	; select bank2
  3324     0F69  008F               	movwf	15	;volatile
  3325                           
  3326                           ;main.c: 442:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  3327     0F6A  3010               	movlw	16
  3328     0F6B                     u3487:
  3329     0F6B  0B89               	decfsz	9,f
  3330     0F6C  2F6B               	goto	u3487
  3331     0F6D  3200               	nop2
  3332     0F6E                     l3214:
  3333                           
  3334                           ;main.c: 443:     PORTBbits.RB4 = 1;
  3335     0F6E  0020               	movlb	0	; select bank0
  3336     0F6F  160D               	bsf	13,4	;volatile
  3337     0F70                     l3216:
  3338                           
  3339                           ;main.c: 446:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3340     0F70  3200               	nop2	;2 cycle nop
  3341     0F71  3200               	nop2	;2 cycle nop
  3342     0F72  0000               	nop
  3343     0F73                     l3218:
  3344                           
  3345                           ;main.c: 447:     PORTBbits.RB3 = 1;
  3346     0F73  0020               	movlb	0	; select bank0
  3347     0F74  158D               	bsf	13,3	;volatile
  3348                           
  3349                           ;main.c: 449:     _delay((unsigned long)((50)*(20000000/4000.0)));
  3350     0F75  3002               	movlw	2
  3351     0F76  0020               	movlb	0	; select bank0
  3352     0F77  00A5               	movwf	??_write_port+1
  3353     0F78  3045               	movlw	69
  3354     0F79  00A4               	movwf	??_write_port
  3355     0F7A  30A9               	movlw	169
  3356     0F7B                     u3497:
  3357     0F7B  0B89               	decfsz	9,f
  3358     0F7C  2F7B               	goto	u3497
  3359     0F7D  0BA4               	decfsz	??_write_port,f
  3360     0F7E  2F7B               	goto	u3497
  3361     0F7F  0BA5               	decfsz	??_write_port+1,f
  3362     0F80  2F7B               	goto	u3497
  3363     0F81  3200               	nop2
  3364     0F82                     l3220:
  3365                           
  3366                           ;main.c: 452:     PORTBbits.RB3 = 0;
  3367     0F82  0020               	movlb	0	; select bank0
  3368     0F83  118D               	bcf	13,3	;volatile
  3369     0F84                     l3222:
  3370                           
  3371                           ;main.c: 453:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3372     0F84  3200               	nop2	;2 cycle nop
  3373     0F85  3200               	nop2	;2 cycle nop
  3374     0F86  0000               	nop
  3375     0F87                     l3224:
  3376                           
  3377                           ;main.c: 456:     PORTBbits.RB4 = 0;
  3378     0F87  0020               	movlb	0	; select bank0
  3379     0F88  120D               	bcf	13,4	;volatile
  3380     0F89                     l3226:
  3381                           
  3382                           ;main.c: 457:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3383     0F89  3200               	nop2	;2 cycle nop
  3384     0F8A  3200               	nop2	;2 cycle nop
  3385     0F8B  0000               	nop
  3386     0F8C                     l142:
  3387     0F8C  0008               	return
  3388     0F8D                     __end_of_write_port:
  3389                           
  3390                           	psect	text7
  3391     07B6                     __ptext7:	
  3392 ;; *************** function _pop *****************
  3393 ;; Defined at:
  3394 ;;		line 142 in file "main.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  c               1    8[BANK0 ] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      unsigned char 
  3401 ;; Registers used:
  3402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3409 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3410 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3411 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3412 ;;Total ram usage:        3 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 5
  3415 ;; This function calls:
  3416 ;;		_addone
  3417 ;;		_empty
  3418 ;; This function is called by:
  3419 ;;		_do_write
  3420 ;;		_main
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424     07B6                     _pop:	
  3425                           ;psect for function _pop
  3426                           
  3427     07B6                     l3080:	
  3428                           ;incstack = 0
  3429                           ; Regs used in _pop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3430                           
  3431                           
  3432                           ;main.c: 146:     INTCONbits.GIE = 0;
  3433     07B6  138B               	bcf	11,7	;volatile
  3434                           
  3435                           ;main.c: 147:     PIE1bits.RCIE=0;
  3436     07B7  0021               	movlb	1	; select bank1
  3437     07B8  1291               	bcf	17,5	;volatile
  3438     07B9                     l3082:
  3439     07B9                     l3084:
  3440                           
  3441                           ;main.c: 151:     if (empty()) {
  3442     07B9  318D  25A8  3187   	fcall	_empty
  3443     07BC  3A00               	xorlw	0
  3444     07BD  1903               	skipnz
  3445     07BE  2FC0               	goto	u2981
  3446     07BF  2FC1               	goto	u2980
  3447     07C0                     u2981:
  3448     07C0  2FD2               	goto	l3094
  3449     07C1                     u2980:
  3450     07C1                     l3086:
  3451                           
  3452                           ;main.c: 153:         PORTEbits.RE2 = 1;
  3453     07C1  0020               	movlb	0	; select bank0
  3454     07C2  1510               	bsf	16,2	;volatile
  3455     07C3                     l3088:
  3456                           
  3457                           ;main.c: 154:         _delay((unsigned long)((2000)*(20000000/4000.0)));
  3458     07C3  3033               	movlw	51
  3459     07C4  0020               	movlb	0	; select bank0
  3460     07C5  00A7               	movwf	??_pop+1
  3461     07C6  30BB               	movlw	187
  3462     07C7  00A6               	movwf	??_pop
  3463     07C8  30DF               	movlw	223
  3464     07C9                     u3507:
  3465     07C9  0B89               	decfsz	9,f
  3466     07CA  2FC9               	goto	u3507
  3467     07CB  0BA6               	decfsz	??_pop,f
  3468     07CC  2FC9               	goto	u3507
  3469     07CD  0BA7               	decfsz	??_pop+1,f
  3470     07CE  2FC9               	goto	u3507
  3471     07CF  3200               	nop2
  3472                           
  3473                           ;main.c: 155:         return c;
  3474     07D0  3000               	movlw	0
  3475     07D1  2FF4               	goto	l92
  3476     07D2                     l3094:
  3477                           
  3478                           ;main.c: 158:         c = queue[head];
  3479     07D2  30F0               	movlw	240
  3480     07D3  0020               	movlb	0	; select bank0
  3481     07D4  00A6               	movwf	??_pop
  3482     07D5  3023               	movlw	35
  3483     07D6  00A7               	movwf	??_pop+1
  3484     07D7  087C               	movf	_head,w
  3485     07D8  0726               	addwf	??_pop,w
  3486     07D9  0086               	movwf	6
  3487     07DA  087D               	movf	_head+1,w
  3488     07DB  3D27               	addwfc	??_pop+1,w
  3489     07DC  0087               	movwf	7
  3490     07DD  0801               	movf	1,w
  3491     07DE  00A8               	movwf	pop@c
  3492     07DF                     l3096:
  3493                           
  3494                           ;main.c: 159:         head = addone(head);
  3495     07DF  087D               	movf	_head+1,w
  3496     07E0  00A5               	movwf	addone@i+1
  3497     07E1  087C               	movf	_head,w
  3498     07E2  00A4               	movwf	addone@i
  3499     07E3  318D  256A  3187   	fcall	_addone
  3500     07E6  0020               	movlb	0	; select bank0
  3501     07E7  0825               	movf	?_addone+1,w
  3502     07E8  00FD               	movwf	_head+1
  3503     07E9  0824               	movf	?_addone,w
  3504     07EA  00FC               	movwf	_head
  3505     07EB                     l3098:
  3506                           
  3507                           ;main.c: 160:         bytes_popped++;
  3508     07EB  3001               	movlw	1
  3509     07EC  0021               	movlb	1	; select bank1
  3510     07ED  07E9               	addwf	_bytes_popped^(0+128),f
  3511     07EE  3000               	movlw	0
  3512     07EF  3DEA               	addwfc	(_bytes_popped+1)^(0+128),f
  3513     07F0                     l3100:
  3514                           
  3515                           ;main.c: 164:     INTCONbits.GIE = 1;
  3516     07F0  178B               	bsf	11,7	;volatile
  3517     07F1                     l3102:
  3518                           
  3519                           ;main.c: 165:     PIE1bits.RCIE = 1;
  3520     07F1  1691               	bsf	17,5	;volatile
  3521     07F2                     l3104:
  3522                           
  3523                           ;main.c: 166:     return c;
  3524     07F2  0020               	movlb	0	; select bank0
  3525     07F3  0828               	movf	pop@c,w
  3526     07F4                     l92:
  3527     07F4  0008               	return
  3528     07F5                     __end_of_pop:
  3529                           
  3530                           	psect	text8
  3531     0DA8                     __ptext8:	
  3532 ;; *************** function _empty *****************
  3533 ;; Defined at:
  3534 ;;		line 96 in file "main.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      _Bool 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0, pclath, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; Hardware stack levels required when called: 4
  3555 ;; This function calls:
  3556 ;;		_addone
  3557 ;; This function is called by:
  3558 ;;		_pop
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562     0DA8                     _empty:	
  3563                           ;psect for function _empty
  3564                           
  3565     0DA8                     l3052:	
  3566                           ;incstack = 0
  3567                           ; Regs used in _empty: [wreg+status,2+status,0+pclath+cstack]
  3568                           
  3569                           
  3570                           ;main.c: 98:     if (addone(tail) == head)
  3571     0DA8  0020               	movlb	0	; select bank0
  3572     0DA9  0868               	movf	_tail+1,w
  3573     0DAA  00A5               	movwf	addone@i+1
  3574     0DAB  0867               	movf	_tail,w
  3575     0DAC  00A4               	movwf	addone@i
  3576     0DAD  318D  256A  318D   	fcall	_addone
  3577     0DB0  087D               	movf	_head+1,w
  3578     0DB1  0020               	movlb	0	; select bank0
  3579     0DB2  0625               	xorwf	?_addone+1,w
  3580     0DB3  1D03               	skipz
  3581     0DB4  2DB7               	goto	u2955
  3582     0DB5  087C               	movf	_head,w
  3583     0DB6  0624               	xorwf	?_addone,w
  3584     0DB7                     u2955:
  3585     0DB7  1D03               	skipz
  3586     0DB8  2DBA               	goto	u2951
  3587     0DB9  2DBB               	goto	u2950
  3588     0DBA                     u2951:
  3589     0DBA  2DBD               	goto	l3058
  3590     0DBB                     u2950:
  3591     0DBB                     l3054:
  3592                           
  3593                           ;main.c: 99:         return 1;
  3594     0DBB  3001               	movlw	1
  3595     0DBC  2DBE               	goto	l81
  3596     0DBD                     l3058:
  3597                           
  3598                           ;main.c: 100:     return 0;
  3599     0DBD  3000               	movlw	0
  3600     0DBE                     l81:
  3601     0DBE  0008               	return
  3602     0DBF                     __end_of_empty:
  3603                           
  3604                           	psect	text9
  3605     0D6A                     __ptext9:	
  3606 ;; *************** function _addone *****************
  3607 ;; Defined at:
  3608 ;;		line 70 in file "main.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  i               2    4[BANK0 ] short 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  2    4[BANK0 ] short 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3625 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3626 ;;Total ram usage:        2 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 3
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_empty
  3633 ;;		_pop
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637     0D6A                     _addone:	
  3638                           ;psect for function _addone
  3639                           
  3640     0D6A                     l2978:	
  3641                           ;incstack = 0
  3642                           ; Regs used in _addone: [wreg+status,2+status,0]
  3643                           
  3644                           
  3645                           ;main.c: 70: int16_t addone(int16_t i);main.c: 71: {;main.c: 72:     if (i == 1024 -1)
  3646     0D6A  0020               	movlb	0	; select bank0
  3647     0D6B  0A24               	incf	addone@i,w
  3648     0D6C  3003               	movlw	3
  3649     0D6D  1903               	skipnz
  3650     0D6E  0625               	xorwf	addone@i+1,w
  3651     0D6F  1D03               	btfss	3,2
  3652     0D70  2D72               	goto	u2881
  3653     0D71  2D73               	goto	u2880
  3654     0D72                     u2881:
  3655     0D72  2D76               	goto	l2984
  3656     0D73                     u2880:
  3657     0D73                     l2980:
  3658                           
  3659                           ;main.c: 73:         return 0;
  3660     0D73  01A4               	clrf	?_addone
  3661     0D74  01A5               	clrf	?_addone+1
  3662     0D75  2D7C               	goto	l72
  3663     0D76                     l2984:
  3664                           
  3665                           ;main.c: 74:     return i+1;
  3666     0D76  0824               	movf	addone@i,w
  3667     0D77  3E01               	addlw	1
  3668     0D78  00A4               	movwf	?_addone
  3669     0D79  3000               	movlw	0
  3670     0D7A  3D25               	addwfc	addone@i+1,w
  3671     0D7B  00A5               	movwf	?_addone+1
  3672     0D7C                     l72:
  3673     0D7C  0008               	return
  3674     0D7D                     __end_of_addone:
  3675                           
  3676                           	psect	text10
  3677     0D91                     __ptext10:	
  3678 ;; *************** function _charToHexDigit *****************
  3679 ;; Defined at:
  3680 ;;		line 179 in file "main.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  c               1    wreg     unsigned char 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  c               1    4[BANK0 ] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      unsigned char 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3697 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3698 ;;Total ram usage:        1 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; Hardware stack levels required when called: 3
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_do_write
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708     0D91                     _charToHexDigit:	
  3709                           ;psect for function _charToHexDigit
  3710                           
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _charToHexDigit: [wreg+status,2+status,0]
  3714                           ;charToHexDigit@c stored from wreg
  3715     0D91  0020               	movlb	0	; select bank0
  3716     0D92  00A4               	movwf	charToHexDigit@c
  3717     0D93                     l3108:
  3718                           
  3719                           ;main.c: 179: uint8_t charToHexDigit(char c);main.c: 180: {;main.c: 181:   if (c >= 'a')
  3720     0D93  3061               	movlw	97
  3721     0D94  0224               	subwf	charToHexDigit@c,w
  3722     0D95  1C03               	skipc
  3723     0D96  2D98               	goto	u2991
  3724     0D97  2D99               	goto	u2990
  3725     0D98                     u2991:
  3726     0D98  2D9C               	goto	l3116
  3727     0D99                     u2990:
  3728     0D99                     l3110:
  3729                           
  3730                           ;main.c: 182:     return c - 'a' + 10;
  3731     0D99  0824               	movf	charToHexDigit@c,w
  3732     0D9A  3EA9               	addlw	169
  3733     0D9B  2DA7               	goto	l100
  3734     0D9C                     l3116:
  3735     0D9C  3041               	movlw	65
  3736     0D9D  0224               	subwf	charToHexDigit@c,w
  3737     0D9E  1C03               	skipc
  3738     0D9F  2DA1               	goto	u3001
  3739     0DA0  2DA2               	goto	u3000
  3740     0DA1                     u3001:
  3741     0DA1  2DA5               	goto	l3124
  3742     0DA2                     u3000:
  3743     0DA2                     l3118:
  3744                           
  3745                           ;main.c: 184:     return c - 'A' + 10;
  3746     0DA2  0824               	movf	charToHexDigit@c,w
  3747     0DA3  3EC9               	addlw	201
  3748     0DA4  2DA7               	goto	l100
  3749     0DA5                     l3124:
  3750                           
  3751                           ;main.c: 186:     return c - '0';
  3752     0DA5  0824               	movf	charToHexDigit@c,w
  3753     0DA6  3ED0               	addlw	208
  3754     0DA7                     l100:
  3755     0DA7  0008               	return
  3756     0DA8                     __end_of_charToHexDigit:
  3757                           
  3758                           	psect	text11
  3759     02CF                     __ptext11:	
  3760 ;; *************** function _do_read *****************
  3761 ;; Defined at:
  3762 ;;		line 385 in file "main.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  s               2   29[BANK1 ] PTR unsigned char 
  3767 ;;		 -> STR_7(14), 
  3768 ;;  data            1   31[BANK1 ] unsigned char 
  3769 ;;  ads            16   13[BANK1 ] unsigned char [16]
  3770 ;;  addr            2   33[BANK1 ] unsigned short 
  3771 ;;  col             1   32[BANK1 ] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3782 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3783 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3784 ;;      Totals:         0       2      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3785 ;;Total ram usage:       24 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 11
  3788 ;; This function calls:
  3789 ;;		_read_port
  3790 ;;		_setup_address
  3791 ;;		_sprintf
  3792 ;;		_uart_putc
  3793 ;;		_uart_puts
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799     02CF                     _do_read:	
  3800                           ;psect for function _do_read
  3801                           
  3802     02CF                     l3356:	
  3803                           ;incstack = 0
  3804                           ; Regs used in _do_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3805                           
  3806                           
  3807                           ;main.c: 387:     uint16_t addr;;main.c: 388:     char ads[16];;main.c: 389:     uint8_t
      +                           col=0;
  3808     02CF  0021               	movlb	1	; select bank1
  3809     02D0  01C0               	clrf	do_read@col^(0+128)
  3810     02D1                     l3358:
  3811                           
  3812                           ;main.c: 392:     PORTBbits.RB4 = 0;
  3813     02D1  0020               	movlb	0	; select bank0
  3814     02D2  120D               	bcf	13,4	;volatile
  3815     02D3                     l3360:
  3816                           
  3817                           ;main.c: 394:     PORTBbits.RB1 = 1;
  3818     02D3  148D               	bsf	13,1	;volatile
  3819     02D4                     l3362:
  3820                           
  3821                           ;main.c: 396:     PORTBbits.RB3 = 0;
  3822     02D4  118D               	bcf	13,3	;volatile
  3823                           
  3824                           ;main.c: 398:     for (addr = 0; addr < 2048; ++addr) {
  3825     02D5  0021               	movlb	1	; select bank1
  3826     02D6  01C1               	clrf	do_read@addr^(0+128)
  3827     02D7  01C2               	clrf	(do_read@addr+1)^(0+128)
  3828     02D8                     l3368:
  3829                           
  3830                           ;main.c: 399:         if (cmd_active == 0) {
  3831     02D8  086D               	movf	_cmd_active^(0+128),w
  3832     02D9  1D03               	btfss	3,2
  3833     02DA  2ADC               	goto	u3231
  3834     02DB  2ADD               	goto	u3230
  3835     02DC                     u3231:
  3836     02DC  2AEC               	goto	l3376
  3837     02DD                     u3230:
  3838     02DD                     l3370:
  3839                           
  3840                           ;main.c: 400:             char *s = "Read aborted\n";
  3841     02DD  3062               	movlw	low (STR_7| (0+32768))
  3842     02DE  00BD               	movwf	do_read@s^(0+128)
  3843     02DF  3090               	movlw	high (STR_7| (0+32768))
  3844     02E0  00BE               	movwf	(do_read@s^(0+128)+1)
  3845     02E1                     l3372:
  3846                           
  3847                           ;main.c: 401:             uart_puts(s);
  3848     02E1  083E               	movf	(do_read@s+1)^(0+128),w
  3849     02E2  0020               	movlb	0	; select bank0
  3850     02E3  00A5               	movwf	uart_puts@s+1
  3851     02E4  0021               	movlb	1	; select bank1
  3852     02E5  083D               	movf	do_read@s^(0+128),w
  3853     02E6  0020               	movlb	0	; select bank0
  3854     02E7  00A4               	movwf	uart_puts@s
  3855     02E8  318F  2736  3182   	fcall	_uart_puts
  3856     02EB  2B5A               	goto	l136
  3857     02EC                     l3376:
  3858                           
  3859                           ;main.c: 406:         setup_address(addr);
  3860     02EC  0842               	movf	(do_read@addr+1)^(0+128),w
  3861     02ED  0020               	movlb	0	; select bank0
  3862     02EE  00A5               	movwf	setup_address@addr+1
  3863     02EF  0021               	movlb	1	; select bank1
  3864     02F0  0841               	movf	do_read@addr^(0+128),w
  3865     02F1  0020               	movlb	0	; select bank0
  3866     02F2  00A4               	movwf	setup_address@addr
  3867     02F3  318D  25F0  3182   	fcall	_setup_address
  3868     02F6                     l3378:
  3869                           
  3870                           ;main.c: 409:         uint8_t data = read_port();
  3871     02F6  318D  25BF  3182   	fcall	_read_port
  3872     02F9  0021               	movlb	1	; select bank1
  3873     02FA  00BF               	movwf	do_read@data^(0+128)
  3874     02FB                     l3380:
  3875                           
  3876                           ;main.c: 412:         if (col == 0) {
  3877     02FB  0840               	movf	do_read@col^(0+128),w
  3878     02FC  1D03               	btfss	3,2
  3879     02FD  2AFF               	goto	u3241
  3880     02FE  2B00               	goto	u3240
  3881     02FF                     u3241:
  3882     02FF  2B19               	goto	l3386
  3883     0300                     u3240:
  3884     0300                     l3382:
  3885                           
  3886                           ;main.c: 413:             sprintf(ads, "%04x: ", addr);
  3887     0300  3082               	movlw	low (STR_8| (0+32768))
  3888     0301  0020               	movlb	0	; select bank0
  3889     0302  00DB               	movwf	sprintf@fmt
  3890     0303  3090               	movlw	high (STR_8| (0+32768))
  3891     0304  00DC               	movwf	sprintf@fmt+1
  3892     0305  0021               	movlb	1	; select bank1
  3893     0306  0842               	movf	(do_read@addr+1)^(0+128),w
  3894     0307  0020               	movlb	0	; select bank0
  3895     0308  00DE               	movwf	?_sprintf+3
  3896     0309  0021               	movlb	1	; select bank1
  3897     030A  0841               	movf	do_read@addr^(0+128),w
  3898     030B  0020               	movlb	0	; select bank0
  3899     030C  00DD               	movwf	?_sprintf+2
  3900     030D  30AD               	movlw	(low (do_read@ads| 0))& (0+255)
  3901     030E  318E  2645  3182   	fcall	_sprintf
  3902     0311                     l3384:
  3903                           
  3904                           ;main.c: 414:             uart_puts(ads);
  3905     0311  30AD               	movlw	low do_read@ads
  3906     0312  0020               	movlb	0	; select bank0
  3907     0313  00A4               	movwf	uart_puts@s
  3908     0314  3000               	movlw	high do_read@ads
  3909     0315  00A5               	movwf	uart_puts@s+1
  3910     0316  318F  2736  3182   	fcall	_uart_puts
  3911     0319                     l3386:
  3912                           
  3913                           ;main.c: 417:         sprintf(ads, "%02x", data);
  3914     0319  3089               	movlw	low (STR_9| (0+32768))
  3915     031A  0020               	movlb	0	; select bank0
  3916     031B  00DB               	movwf	sprintf@fmt
  3917     031C  3090               	movlw	high (STR_9| (0+32768))
  3918     031D  00DC               	movwf	sprintf@fmt+1
  3919     031E  0021               	movlb	1	; select bank1
  3920     031F  083F               	movf	do_read@data^(0+128),w
  3921     0320  0020               	movlb	0	; select bank0
  3922     0321  00E0               	movwf	??_do_read
  3923     0322  01E1               	clrf	??_do_read+1
  3924     0323  0860               	movf	??_do_read,w
  3925     0324  00DD               	movwf	?_sprintf+2
  3926     0325  0861               	movf	??_do_read+1,w
  3927     0326  00DE               	movwf	?_sprintf+3
  3928     0327  30AD               	movlw	(low (do_read@ads| 0))& (0+255)
  3929     0328  318E  2645  3182   	fcall	_sprintf
  3930                           
  3931                           ;main.c: 418:         uart_puts(ads);
  3932     032B  30AD               	movlw	low do_read@ads
  3933     032C  0020               	movlb	0	; select bank0
  3934     032D  00A4               	movwf	uart_puts@s
  3935     032E  3000               	movlw	high do_read@ads
  3936     032F  00A5               	movwf	uart_puts@s+1
  3937     0330  318F  2736  3182   	fcall	_uart_puts
  3938     0333                     l3388:
  3939                           
  3940                           ;main.c: 419:         if (col == 15) {
  3941     0333  300F               	movlw	15
  3942     0334  0021               	movlb	1	; select bank1
  3943     0335  0640               	xorwf	do_read@col^(0+128),w
  3944     0336  1D03               	btfss	3,2
  3945     0337  2B39               	goto	u3251
  3946     0338  2B3A               	goto	u3250
  3947     0339                     u3251:
  3948     0339  2B40               	goto	l3394
  3949     033A                     u3250:
  3950     033A                     l3390:
  3951                           
  3952                           ;main.c: 420:             col = 0;
  3953     033A  01C0               	clrf	do_read@col^(0+128)
  3954     033B                     l3392:
  3955                           
  3956                           ;main.c: 421:             uart_putc('\n');
  3957     033B  300A               	movlw	10
  3958     033C  318D  257D  3182   	fcall	_uart_putc
  3959                           
  3960                           ;main.c: 422:         } else {
  3961     033F  2B4A               	goto	l3398
  3962     0340                     l3394:
  3963                           
  3964                           ;main.c: 423:             uart_putc(' ');
  3965     0340  3020               	movlw	32
  3966     0341  318D  257D  3182   	fcall	_uart_putc
  3967     0344                     l3396:
  3968                           
  3969                           ;main.c: 424:             col++;
  3970     0344  3001               	movlw	1
  3971     0345  0020               	movlb	0	; select bank0
  3972     0346  00E0               	movwf	??_do_read
  3973     0347  0860               	movf	??_do_read,w
  3974     0348  0021               	movlb	1	; select bank1
  3975     0349  07C0               	addwf	do_read@col^(0+128),f
  3976     034A                     l3398:
  3977                           
  3978                           ;main.c: 426:     }
  3979     034A  3001               	movlw	1
  3980     034B  0021               	movlb	1	; select bank1
  3981     034C  07C1               	addwf	do_read@addr^(0+128),f
  3982     034D  3000               	movlw	0
  3983     034E  3DC2               	addwfc	(do_read@addr+1)^(0+128),f
  3984     034F                     l3400:
  3985     034F  3008               	movlw	8
  3986     0350  0242               	subwf	(do_read@addr+1)^(0+128),w
  3987     0351  3000               	movlw	0
  3988     0352  1903               	skipnz
  3989     0353  0241               	subwf	do_read@addr^(0+128),w
  3990     0354  1C03               	skipc
  3991     0355  2B57               	goto	u3261
  3992     0356  2B58               	goto	u3260
  3993     0357                     u3261:
  3994     0357  2AD8               	goto	l3368
  3995     0358                     u3260:
  3996     0358                     l134:
  3997                           
  3998                           ;main.c: 429:     PORTBbits.RB1 = 0;
  3999     0358  0020               	movlb	0	; select bank0
  4000     0359  108D               	bcf	13,1	;volatile
  4001     035A                     l136:
  4002     035A  0008               	return
  4003     035B                     __end_of_do_read:
  4004                           
  4005                           	psect	text12
  4006     0D7D                     __ptext12:	
  4007 ;; *************** function _uart_putc *****************
  4008 ;; Defined at:
  4009 ;;		line 160 in file "uart.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  c               1    wreg     unsigned char 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  c               1    4[BANK0 ] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4026 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4027 ;;Total ram usage:        1 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; Hardware stack levels required when called: 3
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_do_read
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037     0D7D                     _uart_putc:	
  4038                           ;psect for function _uart_putc
  4039                           
  4040                           
  4041                           ;incstack = 0
  4042                           ; Regs used in _uart_putc: [wreg]
  4043                           ;uart_putc@c stored from wreg
  4044     0D7D  0020               	movlb	0	; select bank0
  4045     0D7E  00A4               	movwf	uart_putc@c
  4046     0D7F                     l3208:
  4047                           
  4048                           ;uart.c: 160: void uart_putc(char c);uart.c: 161: {;uart.c: 163:     while (PIR1bits.TXI
      +                          F == 0) {
  4049     0D7F  2D81               	goto	l223
  4050     0D80                     l224:
  4051                           
  4052                           ;uart.c: 164:         __nop();
  4053     0D80  0000               	nop
  4054     0D81                     l223:	
  4055                           ;uart.c: 165:     }
  4056                           
  4057                           
  4058                           ;uart.c: 163:     while (PIR1bits.TXIF == 0) {
  4059     0D81  0020               	movlb	0	; select bank0
  4060     0D82  1E11               	btfss	17,4	;volatile
  4061     0D83  2D85               	goto	u3061
  4062     0D84  2D86               	goto	u3060
  4063     0D85                     u3061:
  4064     0D85  2D80               	goto	l224
  4065     0D86                     u3060:
  4066     0D86                     l3210:
  4067                           
  4068                           ;uart.c: 168:     TXREG = c;
  4069     0D86  0824               	movf	uart_putc@c,w
  4070     0D87  0023               	movlb	3	; select bank3
  4071     0D88  009A               	movwf	26	;volatile
  4072                           
  4073                           ;uart.c: 171:     while(TXSTAbits.TRMT == 0) {
  4074     0D89  2D8B               	goto	l226
  4075     0D8A                     l227:
  4076                           
  4077                           ;uart.c: 172:         __nop();
  4078     0D8A  0000               	nop
  4079     0D8B                     l226:	
  4080                           ;uart.c: 173:     }
  4081                           
  4082                           
  4083                           ;uart.c: 171:     while(TXSTAbits.TRMT == 0) {
  4084     0D8B  0023               	movlb	3	; select bank3
  4085     0D8C  1C9E               	btfss	30,1	;volatile
  4086     0D8D  2D8F               	goto	u3071
  4087     0D8E  2D90               	goto	u3070
  4088     0D8F                     u3071:
  4089     0D8F  2D8A               	goto	l227
  4090     0D90                     u3070:
  4091     0D90                     l229:
  4092     0D90  0008               	return
  4093     0D91                     __end_of_uart_putc:
  4094                           
  4095                           	psect	text13
  4096     0EE8                     __ptext13:	
  4097 ;; *************** function _do_init *****************
  4098 ;; Defined at:
  4099 ;;		line 319 in file "main.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  s               8   13[BANK1 ] unsigned char [8]
  4104 ;;  rate            2   21[BANK1 ] unsigned short 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4115 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4117 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4118 ;;Total ram usage:       10 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 11
  4121 ;; This function calls:
  4122 ;;		_sprintf
  4123 ;;		_uart_init_brg
  4124 ;;		_uart_puts
  4125 ;; This function is called by:
  4126 ;;		_main
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130     0EE8                     _do_init:	
  4131                           ;psect for function _do_init
  4132                           
  4133     0EE8                     l3310:	
  4134                           ;incstack = 0
  4135                           ; Regs used in _do_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4136                           
  4137                           
  4138                           ;main.c: 321:     uint16_t rate;;main.c: 322:     char s[8];;main.c: 324:     rate = uar
      +                          t_init_brg();
  4139     0EE8  3187  2768  318E   	fcall	_uart_init_brg
  4140     0EEB  0020               	movlb	0	; select bank0
  4141     0EEC  0825               	movf	?_uart_init_brg+1,w
  4142     0EED  0021               	movlb	1	; select bank1
  4143     0EEE  00B6               	movwf	(do_init@rate+1)^(0+128)
  4144     0EEF  0020               	movlb	0	; select bank0
  4145     0EF0  0824               	movf	?_uart_init_brg,w
  4146     0EF1  0021               	movlb	1	; select bank1
  4147     0EF2  00B5               	movwf	do_init@rate^(0+128)
  4148     0EF3                     l3312:
  4149                           
  4150                           ;main.c: 326:     sprintf(s, "%d\n", rate);
  4151     0EF3  308E               	movlw	low (STR_1| (0+32768))
  4152     0EF4  0020               	movlb	0	; select bank0
  4153     0EF5  00DB               	movwf	sprintf@fmt
  4154     0EF6  3090               	movlw	high (STR_1| (0+32768))
  4155     0EF7  00DC               	movwf	sprintf@fmt+1
  4156     0EF8  0021               	movlb	1	; select bank1
  4157     0EF9  0836               	movf	(do_init@rate+1)^(0+128),w
  4158     0EFA  0020               	movlb	0	; select bank0
  4159     0EFB  00DE               	movwf	?_sprintf+3
  4160     0EFC  0021               	movlb	1	; select bank1
  4161     0EFD  0835               	movf	do_init@rate^(0+128),w
  4162     0EFE  0020               	movlb	0	; select bank0
  4163     0EFF  00DD               	movwf	?_sprintf+2
  4164     0F00  30AD               	movlw	(low (do_init@s| 0))& (0+255)
  4165     0F01  318E  2645  318E   	fcall	_sprintf
  4166     0F04                     l3314:
  4167                           
  4168                           ;main.c: 327:     uart_puts(s);
  4169     0F04  30AD               	movlw	low do_init@s
  4170     0F05  0020               	movlb	0	; select bank0
  4171     0F06  00A4               	movwf	uart_puts@s
  4172     0F07  3000               	movlw	high do_init@s
  4173     0F08  00A5               	movwf	uart_puts@s+1
  4174     0F09  318F  2736  318E   	fcall	_uart_puts
  4175     0F0C                     l122:
  4176     0F0C  0008               	return
  4177     0F0D                     __end_of_do_init:
  4178                           
  4179                           	psect	text14
  4180     0768                     __ptext14:	
  4181 ;; *************** function _uart_init_brg *****************
  4182 ;; Defined at:
  4183 ;;		line 89 in file "uart.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;		None
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  c               1    0        unsigned char 
  4188 ;;  rate            2   11[BANK0 ] unsigned short 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  2    4[BANK0 ] unsigned short 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4198 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4200 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4201 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4202 ;;Total ram usage:        9 bytes
  4203 ;; Hardware stack levels used: 1
  4204 ;; Hardware stack levels required when called: 3
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_do_init
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212     0768                     _uart_init_brg:	
  4213                           ;psect for function _uart_init_brg
  4214                           
  4215     0768                     l3160:	
  4216                           ;incstack = 0
  4217                           ; Regs used in _uart_init_brg: [wreg+status,2]
  4218                           
  4219     0768                     l3162:
  4220                           
  4221                           ;uart.c: 93:     PIE1bits.RCIE=0;
  4222     0768  0021               	movlb	1	; select bank1
  4223     0769  1291               	bcf	17,5	;volatile
  4224     076A                     l3164:
  4225                           
  4226                           ;uart.c: 96:     BAUDCONbits.ABDEN = 1;
  4227     076A  0023               	movlb	3	; select bank3
  4228     076B  141F               	bsf	31,0	;volatile
  4229     076C                     l3166:
  4230                           
  4231                           ;uart.c: 102:         if (PIR1bits.RCIF) {
  4232     076C  0020               	movlb	0	; select bank0
  4233     076D  1E91               	btfss	17,5	;volatile
  4234     076E  2F70               	goto	u3011
  4235     076F  2F71               	goto	u3010
  4236     0770                     u3011:
  4237     0770  2F74               	goto	l208
  4238     0771                     u3010:
  4239     0771                     l3168:
  4240     0771  0023               	movlb	3	; select bank3
  4241     0772  0819               	movf	25,w	;volatile
  4242                           
  4243                           ;uart.c: 104:             break;
  4244     0773  2F98               	goto	l3178
  4245     0774                     l208:	
  4246                           ;uart.c: 105:         }
  4247                           
  4248                           
  4249                           ;uart.c: 108:         PORTEbits.RE1 = 1;
  4250     0774  1490               	bsf	16,1	;volatile
  4251     0775                     l3170:
  4252                           
  4253                           ;uart.c: 109:         _delay((unsigned long)((250)*(20000000/4000.0)));
  4254     0775  3007               	movlw	7
  4255     0776  0020               	movlb	0	; select bank0
  4256     0777  00A7               	movwf	??_uart_init_brg+1
  4257     0778  3058               	movlw	88
  4258     0779  00A6               	movwf	??_uart_init_brg
  4259     077A  3059               	movlw	89
  4260     077B                     u3517:
  4261     077B  0B89               	decfsz	9,f
  4262     077C  2F7B               	goto	u3517
  4263     077D  0BA6               	decfsz	??_uart_init_brg,f
  4264     077E  2F7B               	goto	u3517
  4265     077F  0BA7               	decfsz	??_uart_init_brg+1,f
  4266     0780  2F7B               	goto	u3517
  4267     0781  3200               	nop2
  4268     0782                     l3172:
  4269                           
  4270                           ;uart.c: 110:         PORTEbits.RE1 = 0;
  4271     0782  0020               	movlb	0	; select bank0
  4272     0783  1090               	bcf	16,1	;volatile
  4273                           
  4274                           ;uart.c: 111:         _delay((unsigned long)((250)*(20000000/4000.0)));
  4275     0784  3007               	movlw	7
  4276     0785  0020               	movlb	0	; select bank0
  4277     0786  00A7               	movwf	??_uart_init_brg+1
  4278     0787  3058               	movlw	88
  4279     0788  00A6               	movwf	??_uart_init_brg
  4280     0789  3059               	movlw	89
  4281     078A                     u3527:
  4282     078A  0B89               	decfsz	9,f
  4283     078B  2F8A               	goto	u3527
  4284     078C  0BA6               	decfsz	??_uart_init_brg,f
  4285     078D  2F8A               	goto	u3527
  4286     078E  0BA7               	decfsz	??_uart_init_brg+1,f
  4287     078F  2F8A               	goto	u3527
  4288     0790  3200               	nop2
  4289     0791                     l3174:
  4290                           
  4291                           ;uart.c: 113:         if ( BAUDCONbits.ABDOVF ) {
  4292     0791  0023               	movlb	3	; select bank3
  4293     0792  1F9F               	btfss	31,7	;volatile
  4294     0793  2F95               	goto	u3021
  4295     0794  2F96               	goto	u3020
  4296     0795                     u3021:
  4297     0795  2F6C               	goto	l3166
  4298     0796                     u3020:
  4299     0796                     l3176:
  4300                           
  4301                           ;uart.c: 114:             BAUDCONbits.ABDOVF = 0;
  4302     0796  139F               	bcf	31,7	;volatile
  4303     0797  2F6C               	goto	l3166
  4304     0798                     l3178:
  4305                           
  4306                           ;uart.c: 119:     rate = (SPBRGH << 8) | SPBRG;
  4307     0798  081C               	movf	28,w	;volatile
  4308     0799  0020               	movlb	0	; select bank0
  4309     079A  00A6               	movwf	??_uart_init_brg
  4310     079B  01A7               	clrf	??_uart_init_brg+1
  4311     079C  0826               	movf	??_uart_init_brg,w
  4312     079D  00A7               	movwf	??_uart_init_brg+1
  4313     079E  01A6               	clrf	??_uart_init_brg
  4314     079F  0023               	movlb	3	; select bank3
  4315     07A0  081B               	movf	27,w	;volatile
  4316     07A1  0020               	movlb	0	; select bank0
  4317     07A2  0426               	iorwf	??_uart_init_brg,w
  4318     07A3  00A9               	movwf	??_uart_init_brg+3
  4319     07A4  0023               	movlb	3	; select bank3
  4320     07A5  081C               	movf	28,w	;volatile
  4321     07A6  0020               	movlb	0	; select bank0
  4322     07A7  0427               	iorwf	??_uart_init_brg+1,w
  4323     07A8  00AA               	movwf	??_uart_init_brg+4
  4324     07A9  0829               	movf	??_uart_init_brg+3,w
  4325     07AA  00AB               	movwf	uart_init_brg@rate
  4326     07AB  082A               	movf	??_uart_init_brg+4,w
  4327     07AC  00AC               	movwf	uart_init_brg@rate+1
  4328     07AD                     l3180:
  4329                           
  4330                           ;uart.c: 122:     PORTEbits.RE1 = 0;
  4331     07AD  1090               	bcf	16,1	;volatile
  4332     07AE                     l3182:
  4333                           
  4334                           ;uart.c: 125:     PIE1bits.RCIE=1;
  4335     07AE  0021               	movlb	1	; select bank1
  4336     07AF  1691               	bsf	17,5	;volatile
  4337                           
  4338                           ;uart.c: 127:     return rate;
  4339     07B0  0020               	movlb	0	; select bank0
  4340     07B1  082C               	movf	uart_init_brg@rate+1,w
  4341     07B2  00A5               	movwf	?_uart_init_brg+1
  4342     07B3  082B               	movf	uart_init_brg@rate,w
  4343     07B4  00A4               	movwf	?_uart_init_brg
  4344     07B5                     l212:
  4345     07B5  0008               	return
  4346     07B6                     __end_of_uart_init_brg:
  4347                           
  4348                           	psect	text15
  4349     035B                     __ptext15:	
  4350 ;; *************** function _do_blank *****************
  4351 ;; Defined at:
  4352 ;;		line 334 in file "main.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  data            1   46[BANK1 ] unsigned char 
  4357 ;;  ads            32   13[BANK1 ] unsigned char [32]
  4358 ;;  addr            2   49[BANK1 ] unsigned short 
  4359 ;;  s               2   47[BANK1 ] PTR unsigned char 
  4360 ;;		 -> STR_6(21), STR_2(15), 
  4361 ;;  ok              1   45[BANK1 ] _Bool 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4372 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4373 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4374 ;;      Totals:         0       2      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4375 ;;Total ram usage:       40 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; Hardware stack levels required when called: 11
  4378 ;; This function calls:
  4379 ;;		_read_port
  4380 ;;		_setup_address
  4381 ;;		_sprintf
  4382 ;;		_uart_puts
  4383 ;; This function is called by:
  4384 ;;		_main
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388     035B                     _do_blank:	
  4389                           ;psect for function _do_blank
  4390                           
  4391     035B                     l3316:	
  4392                           ;incstack = 0
  4393                           ; Regs used in _do_blank: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4394                           
  4395                           
  4396                           ;main.c: 336:     uint16_t addr;;main.c: 337:     char ads[32];;main.c: 338:     _Bool o
      +                          k = 1;
  4397     035B  0021               	movlb	1	; select bank1
  4398     035C  01CD               	clrf	do_blank@ok^(0+128)
  4399     035D  0ACD               	incf	do_blank@ok^(0+128),f
  4400                           
  4401                           ;main.c: 339:     char *s;;main.c: 342:     PORTBbits.RB1 = 1;
  4402     035E  0020               	movlb	0	; select bank0
  4403     035F  148D               	bsf	13,1	;volatile
  4404                           
  4405                           ;main.c: 344:     PORTBbits.RB3 = 0;
  4406     0360  118D               	bcf	13,3	;volatile
  4407                           
  4408                           ;main.c: 346:     PORTBbits.RB4 = 0;
  4409     0361  120D               	bcf	13,4	;volatile
  4410     0362                     l3318:
  4411                           
  4412                           ;main.c: 348:     for (addr = 0; addr < 2048; ++addr) {
  4413     0362  0021               	movlb	1	; select bank1
  4414     0363  01D1               	clrf	do_blank@addr^(0+128)
  4415     0364  01D2               	clrf	(do_blank@addr+1)^(0+128)
  4416     0365                     l3324:
  4417                           
  4418                           ;main.c: 349:         if (cmd_active == 0) {
  4419     0365  086D               	movf	_cmd_active^(0+128),w
  4420     0366  1D03               	btfss	3,2
  4421     0367  2B69               	goto	u3191
  4422     0368  2B6A               	goto	u3190
  4423     0369                     u3191:
  4424     0369  2B79               	goto	l3332
  4425     036A                     u3190:
  4426     036A                     l3326:
  4427                           
  4428                           ;main.c: 350:             s = "Check aborted\n";
  4429     036A  3053               	movlw	low (STR_2| (0+32768))
  4430     036B  00CF               	movwf	do_blank@s^(0+128)
  4431     036C  3090               	movlw	high (STR_2| (0+32768))
  4432     036D  00D0               	movwf	(do_blank@s^(0+128)+1)
  4433     036E                     l3328:
  4434                           
  4435                           ;main.c: 351:             uart_puts(s);
  4436     036E  0850               	movf	(do_blank@s+1)^(0+128),w
  4437     036F  0020               	movlb	0	; select bank0
  4438     0370  00A5               	movwf	uart_puts@s+1
  4439     0371  0021               	movlb	1	; select bank1
  4440     0372  084F               	movf	do_blank@s^(0+128),w
  4441     0373  0020               	movlb	0	; select bank0
  4442     0374  00A4               	movwf	uart_puts@s
  4443     0375  318F  2736  3183   	fcall	_uart_puts
  4444     0378  2BE5               	goto	l128
  4445     0379                     l3332:
  4446                           
  4447                           ;main.c: 356:         setup_address(addr);
  4448     0379  0852               	movf	(do_blank@addr+1)^(0+128),w
  4449     037A  0020               	movlb	0	; select bank0
  4450     037B  00A5               	movwf	setup_address@addr+1
  4451     037C  0021               	movlb	1	; select bank1
  4452     037D  0851               	movf	do_blank@addr^(0+128),w
  4453     037E  0020               	movlb	0	; select bank0
  4454     037F  00A4               	movwf	setup_address@addr
  4455     0380  318D  25F0  3183   	fcall	_setup_address
  4456     0383                     l3334:
  4457                           
  4458                           ;main.c: 359:         uint8_t data = read_port();
  4459     0383  318D  25BF  3183   	fcall	_read_port
  4460     0386  0021               	movlb	1	; select bank1
  4461     0387  00CE               	movwf	do_blank@data^(0+128)
  4462     0388                     l3336:
  4463                           
  4464                           ;main.c: 361:         if (data != 0xff) {
  4465     0388  0A4E               	incf	do_blank@data^(0+128),w
  4466     0389  1903               	btfsc	3,2
  4467     038A  2B8C               	goto	u3201
  4468     038B  2B8D               	goto	u3200
  4469     038C                     u3201:
  4470     038C  2BCB               	goto	l3348
  4471     038D                     u3200:
  4472     038D                     l3338:
  4473                           
  4474                           ;main.c: 362:             uart_puts("Erase check fail at address ");
  4475     038D  3000               	movlw	low (STR_3| (0+32768))
  4476     038E  0020               	movlb	0	; select bank0
  4477     038F  00A4               	movwf	uart_puts@s
  4478     0390  3090               	movlw	high (STR_3| (0+32768))
  4479     0391  00A5               	movwf	uart_puts@s+1
  4480     0392  318F  2736  3183   	fcall	_uart_puts
  4481     0395                     l3340:
  4482                           
  4483                           ;main.c: 363:             sprintf(ads, "0x%04x = ", addr);
  4484     0395  3070               	movlw	low (STR_4| (0+32768))
  4485     0396  0020               	movlb	0	; select bank0
  4486     0397  00DB               	movwf	sprintf@fmt
  4487     0398  3090               	movlw	high (STR_4| (0+32768))
  4488     0399  00DC               	movwf	sprintf@fmt+1
  4489     039A  0021               	movlb	1	; select bank1
  4490     039B  0852               	movf	(do_blank@addr+1)^(0+128),w
  4491     039C  0020               	movlb	0	; select bank0
  4492     039D  00DE               	movwf	?_sprintf+3
  4493     039E  0021               	movlb	1	; select bank1
  4494     039F  0851               	movf	do_blank@addr^(0+128),w
  4495     03A0  0020               	movlb	0	; select bank0
  4496     03A1  00DD               	movwf	?_sprintf+2
  4497     03A2  30AD               	movlw	(low (do_blank@ads| 0))& (0+255)
  4498     03A3  318E  2645  3183   	fcall	_sprintf
  4499     03A6                     l3342:
  4500                           
  4501                           ;main.c: 364:             uart_puts(ads);
  4502     03A6  30AD               	movlw	low do_blank@ads
  4503     03A7  0020               	movlb	0	; select bank0
  4504     03A8  00A4               	movwf	uart_puts@s
  4505     03A9  3000               	movlw	high do_blank@ads
  4506     03AA  00A5               	movwf	uart_puts@s+1
  4507     03AB  318F  2736  3183   	fcall	_uart_puts
  4508                           
  4509                           ;main.c: 365:             sprintf(ads, "0x%02x\n", data);
  4510     03AE  307A               	movlw	low (STR_5| (0+32768))
  4511     03AF  0020               	movlb	0	; select bank0
  4512     03B0  00DB               	movwf	sprintf@fmt
  4513     03B1  3090               	movlw	high (STR_5| (0+32768))
  4514     03B2  00DC               	movwf	sprintf@fmt+1
  4515     03B3  0021               	movlb	1	; select bank1
  4516     03B4  084E               	movf	do_blank@data^(0+128),w
  4517     03B5  0020               	movlb	0	; select bank0
  4518     03B6  00E0               	movwf	??_do_blank
  4519     03B7  01E1               	clrf	??_do_blank+1
  4520     03B8  0860               	movf	??_do_blank,w
  4521     03B9  00DD               	movwf	?_sprintf+2
  4522     03BA  0861               	movf	??_do_blank+1,w
  4523     03BB  00DE               	movwf	?_sprintf+3
  4524     03BC  30AD               	movlw	(low (do_blank@ads| 0))& (0+255)
  4525     03BD  318E  2645  3183   	fcall	_sprintf
  4526     03C0                     l3344:
  4527                           
  4528                           ;main.c: 366:             uart_puts(ads);
  4529     03C0  30AD               	movlw	low do_blank@ads
  4530     03C1  0020               	movlb	0	; select bank0
  4531     03C2  00A4               	movwf	uart_puts@s
  4532     03C3  3000               	movlw	high do_blank@ads
  4533     03C4  00A5               	movwf	uart_puts@s+1
  4534     03C5  318F  2736  3183   	fcall	_uart_puts
  4535     03C8                     l3346:
  4536                           
  4537                           ;main.c: 367:             ok = 0;
  4538     03C8  0021               	movlb	1	; select bank1
  4539     03C9  01CD               	clrf	do_blank@ok^(0+128)
  4540                           
  4541                           ;main.c: 368:             break;
  4542     03CA  2BD8               	goto	l126
  4543     03CB                     l3348:
  4544                           
  4545                           ;main.c: 370:     }
  4546     03CB  3001               	movlw	1
  4547     03CC  07D1               	addwf	do_blank@addr^(0+128),f
  4548     03CD  3000               	movlw	0
  4549     03CE  3DD2               	addwfc	(do_blank@addr+1)^(0+128),f
  4550     03CF  3008               	movlw	8
  4551     03D0  0252               	subwf	(do_blank@addr+1)^(0+128),w
  4552     03D1  3000               	movlw	0
  4553     03D2  1903               	skipnz
  4554     03D3  0251               	subwf	do_blank@addr^(0+128),w
  4555     03D4  1C03               	skipc
  4556     03D5  2BD7               	goto	u3211
  4557     03D6  2BD8               	goto	u3210
  4558     03D7                     u3211:
  4559     03D7  2B65               	goto	l3324
  4560     03D8                     u3210:
  4561     03D8                     l126:
  4562                           
  4563                           ;main.c: 373:     PORTBbits.RB1 = 0;
  4564     03D8  0020               	movlb	0	; select bank0
  4565     03D9  108D               	bcf	13,1	;volatile
  4566     03DA                     l3350:
  4567                           
  4568                           ;main.c: 375:     if (ok) {
  4569     03DA  0021               	movlb	1	; select bank1
  4570     03DB  084D               	movf	do_blank@ok^(0+128),w
  4571     03DC  1903               	btfsc	3,2
  4572     03DD  2BDF               	goto	u3221
  4573     03DE  2BE0               	goto	u3220
  4574     03DF                     u3221:
  4575     03DF  2BE5               	goto	l128
  4576     03E0                     u3220:
  4577     03E0                     l3352:
  4578                           
  4579                           ;main.c: 376:         s = "Erase check passed.\n";
  4580     03E0  301D               	movlw	low (STR_6| (0+32768))
  4581     03E1  00CF               	movwf	do_blank@s^(0+128)
  4582     03E2  3090               	movlw	high (STR_6| (0+32768))
  4583     03E3  00D0               	movwf	(do_blank@s^(0+128)+1)
  4584     03E4  2B6E               	goto	l3328
  4585     03E5                     l128:
  4586     03E5  0008               	return
  4587     03E6                     __end_of_do_blank:
  4588                           
  4589                           	psect	text16
  4590     0F36                     __ptext16:	
  4591 ;; *************** function _uart_puts *****************
  4592 ;; Defined at:
  4593 ;;		line 180 in file "uart.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  s               2    4[BANK0 ] PTR unsigned char 
  4596 ;;		 -> do_write@ads(48), STR_10(15), do_read@ads(16), STR_7(14), 
  4597 ;;		 -> STR_6(21), do_blank@ads(32), STR_3(29), STR_2(15), 
  4598 ;;		 -> do_init@s(8), 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  p               2    7[BANK0 ] PTR unsigned char 
  4601 ;;		 -> do_write@ads(48), STR_10(15), do_read@ads(16), STR_7(14), 
  4602 ;;		 -> STR_6(21), do_blank@ads(32), STR_3(29), STR_2(15), 
  4603 ;;		 -> do_init@s(8), 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4616 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4617 ;;Total ram usage:        5 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; Hardware stack levels required when called: 3
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_do_init
  4624 ;;		_do_blank
  4625 ;;		_do_read
  4626 ;;		_do_write
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630     0F36                     _uart_puts:	
  4631                           ;psect for function _uart_puts
  4632                           
  4633     0F36                     l3198:	
  4634                           ;incstack = 0
  4635                           ; Regs used in _uart_puts: [wreg-fsr0h+status,2+status,0+pclath]
  4636                           
  4637                           
  4638                           ;uart.c: 180: void uart_puts(char *s);uart.c: 181: {;uart.c: 183:     while (PIR1bits.TX
      +                          IF == 0) {
  4639     0F36  2F38               	goto	l232
  4640     0F37                     l233:
  4641                           
  4642                           ;uart.c: 184:         __nop();
  4643     0F37  0000               	nop
  4644     0F38                     l232:	
  4645                           ;uart.c: 185:     }
  4646                           
  4647                           
  4648                           ;uart.c: 183:     while (PIR1bits.TXIF == 0) {
  4649     0F38  0020               	movlb	0	; select bank0
  4650     0F39  1E11               	btfss	17,4	;volatile
  4651     0F3A  2F3C               	goto	u3031
  4652     0F3B  2F3D               	goto	u3030
  4653     0F3C                     u3031:
  4654     0F3C  2F37               	goto	l233
  4655     0F3D                     u3030:
  4656     0F3D                     l3200:
  4657                           
  4658                           ;uart.c: 188:     char *p = s;
  4659     0F3D  0825               	movf	uart_puts@s+1,w
  4660     0F3E  00A8               	movwf	uart_puts@p+1
  4661     0F3F  0824               	movf	uart_puts@s,w
  4662     0F40  00A7               	movwf	uart_puts@p
  4663                           
  4664                           ;uart.c: 189:     while (*p) {
  4665     0F41  2F55               	goto	l3206
  4666     0F42                     l3202:
  4667                           
  4668                           ;uart.c: 190:         TXREG = *p++;
  4669     0F42  0827               	movf	uart_puts@p,w
  4670     0F43  0084               	movwf	4
  4671     0F44  0828               	movf	uart_puts@p+1,w
  4672     0F45  0085               	movwf	5
  4673     0F46  0800               	movf	0,w	;code access
  4674     0F47  0023               	movlb	3	; select bank3
  4675     0F48  009A               	movwf	26	;volatile
  4676     0F49                     l3204:
  4677     0F49  3001               	movlw	1
  4678     0F4A  0020               	movlb	0	; select bank0
  4679     0F4B  07A7               	addwf	uart_puts@p,f
  4680     0F4C  3000               	movlw	0
  4681     0F4D  3DA8               	addwfc	uart_puts@p+1,f
  4682                           
  4683                           ;uart.c: 191:         while(TXSTAbits.TRMT == 0) {
  4684     0F4E  2F50               	goto	l237
  4685     0F4F                     l238:
  4686                           
  4687                           ;uart.c: 192:             __nop();
  4688     0F4F  0000               	nop
  4689     0F50                     l237:	
  4690                           ;uart.c: 193:         }
  4691                           
  4692                           
  4693                           ;uart.c: 191:         while(TXSTAbits.TRMT == 0) {
  4694     0F50  0023               	movlb	3	; select bank3
  4695     0F51  1C9E               	btfss	30,1	;volatile
  4696     0F52  2F54               	goto	u3041
  4697     0F53  2F55               	goto	u3040
  4698     0F54                     u3041:
  4699     0F54  2F4F               	goto	l238
  4700     0F55                     u3040:
  4701     0F55                     l3206:
  4702                           
  4703                           ;uart.c: 189:     while (*p) {
  4704     0F55  0020               	movlb	0	; select bank0
  4705     0F56  0827               	movf	uart_puts@p,w
  4706     0F57  0084               	movwf	4
  4707     0F58  0828               	movf	uart_puts@p+1,w
  4708     0F59  0085               	movwf	5
  4709     0F5A  0012               	moviw fsr0++
  4710     0F5B  1D03               	btfss	3,2
  4711     0F5C  2F5E               	goto	u3051
  4712     0F5D  2F5F               	goto	u3050
  4713     0F5E                     u3051:
  4714     0F5E  2F42               	goto	l3202
  4715     0F5F                     u3050:
  4716     0F5F                     l241:
  4717     0F5F  0008               	return
  4718     0F60                     __end_of_uart_puts:
  4719                           
  4720                           	psect	text17
  4721     0E45                     __ptext17:	
  4722 ;; *************** function _sprintf *****************
  4723 ;; Defined at:
  4724 ;;		line 9 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_sprintf.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  s               1    wreg     PTR unsigned char 
  4727 ;;		 -> do_write@ads(48), do_read@ads(16), do_blank@ads(32), do_init@s(8), 
  4728 ;;  fmt             2   59[BANK0 ] PTR const unsigned char 
  4729 ;;		 -> STR_11(18), STR_9(5), STR_8(7), STR_5(8), 
  4730 ;;		 -> STR_4(10), STR_1(4), 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  s               1    1[BANK1 ] PTR unsigned char 
  4733 ;;		 -> do_write@ads(48), do_read@ads(16), do_blank@ads(32), do_init@s(8), 
  4734 ;;  f              11    2[BANK1 ] struct _IO_FILE
  4735 ;;  ret             2    0        int 
  4736 ;;  ap              1    0[BANK1 ] PTR void [1]
  4737 ;;		 -> ?_sprintf(2), 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  2   59[BANK0 ] int 
  4740 ;; Registers used:
  4741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4747 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4748 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4750 ;;      Totals:         0       5      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4751 ;;Total ram usage:       18 bytes
  4752 ;; Hardware stack levels used: 1
  4753 ;; Hardware stack levels required when called: 10
  4754 ;; This function calls:
  4755 ;;		_vfprintf
  4756 ;; This function is called by:
  4757 ;;		_do_init
  4758 ;;		_do_blank
  4759 ;;		_do_read
  4760 ;;		_do_write
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764     0E45                     _sprintf:	
  4765                           ;psect for function _sprintf
  4766                           
  4767                           
  4768                           ;incstack = 0
  4769                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4770                           ;sprintf@s stored from wreg
  4771     0E45  0021               	movlb	1	; select bank1
  4772     0E46  00A1               	movwf	sprintf@s^(0+128)
  4773     0E47                     l3186:
  4774     0E47  305D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4775     0E48  00A0               	movwf	sprintf@ap^(0+128)
  4776     0E49  0821               	movf	sprintf@s^(0+128),w
  4777     0E4A  00A2               	movwf	sprintf@f^(0+128)
  4778     0E4B                     l3188:
  4779     0E4B  01A4               	clrf	(sprintf@f^(0+128)+2)
  4780     0E4C  01A5               	clrf	((sprintf@f+1)^(0+128)+2)
  4781     0E4D                     l3190:
  4782     0E4D  01AB               	clrf	(sprintf@f^(0+128)+9)
  4783     0E4E  01AC               	clrf	((sprintf@f+1)^(0+128)+9)
  4784     0E4F                     l3192:
  4785     0E4F  0020               	movlb	0	; select bank0
  4786     0E50  085C               	movf	sprintf@fmt+1,w
  4787     0E51  00D5               	movwf	vfprintf@fmt+1
  4788     0E52  085B               	movf	sprintf@fmt,w
  4789     0E53  00D4               	movwf	vfprintf@fmt
  4790     0E54  30A0               	movlw	(low (sprintf@ap| 0))& (0+255)
  4791     0E55  00D6               	movwf	vfprintf@ap
  4792     0E56  30A2               	movlw	(low (sprintf@f| 0))& (0+255)
  4793     0E57  318E  260C  318E   	fcall	_vfprintf
  4794     0E5A                     l3194:
  4795     0E5A  0021               	movlb	1	; select bank1
  4796     0E5B  0824               	movf	(sprintf@f^(0+128)+2),w
  4797     0E5C  0721               	addwf	sprintf@s^(0+128),w
  4798     0E5D  0020               	movlb	0	; select bank0
  4799     0E5E  00DF               	movwf	??_sprintf
  4800     0E5F  085F               	movf	??_sprintf,w
  4801     0E60  0086               	movwf	6
  4802     0E61  0187               	clrf	7
  4803     0E62  0181               	clrf	1
  4804     0E63                     l860:
  4805     0E63  0008               	return
  4806     0E64                     __end_of_sprintf:
  4807                           
  4808                           	psect	text18
  4809     0E0C                     __ptext18:	
  4810 ;; *************** function _vfprintf *****************
  4811 ;; Defined at:
  4812 ;;		line 1817 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  fp              1    wreg     PTR struct _IO_FILE
  4815 ;;		 -> sprintf@f(11), 
  4816 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  4817 ;;		 -> STR_11(18), STR_9(5), STR_8(7), STR_5(8), 
  4818 ;;		 -> STR_4(10), STR_1(4), 
  4819 ;;  ap              1   54[BANK0 ] PTR PTR void 
  4820 ;;		 -> sprintf@ap(1), 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  fp              1   56[BANK0 ] PTR struct _IO_FILE
  4823 ;;		 -> sprintf@f(11), 
  4824 ;;  cfmt            2   57[BANK0 ] PTR unsigned char 
  4825 ;;		 -> STR_11(18), STR_9(5), STR_8(7), STR_5(8), 
  4826 ;;		 -> STR_4(10), STR_1(4), 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  2   52[BANK0 ] int 
  4829 ;; Registers used:
  4830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4836 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4837 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4838 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4839 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4840 ;;Total ram usage:        7 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 9
  4843 ;; This function calls:
  4844 ;;		_vfpfcnvrt
  4845 ;; This function is called by:
  4846 ;;		_sprintf
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850     0E0C                     _vfprintf:	
  4851                           ;psect for function _vfprintf
  4852                           
  4853                           
  4854                           ;incstack = 0
  4855                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4856                           ;vfprintf@fp stored from wreg
  4857     0E0C  0020               	movlb	0	; select bank0
  4858     0E0D  00D8               	movwf	vfprintf@fp
  4859     0E0E                     l3062:
  4860                           
  4861                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  4862     0E0E  0855               	movf	vfprintf@fmt+1,w
  4863     0E0F  00DA               	movwf	vfprintf@cfmt+1
  4864     0E10  0854               	movf	vfprintf@fmt,w
  4865     0E11  00D9               	movwf	vfprintf@cfmt
  4866                           
  4867                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4868     0E12  2E1B               	goto	l3066
  4869     0E13                     l3064:
  4870                           
  4871                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(f
      +                          p, &cfmt, ap);
  4872     0E13  3059               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4873     0E14  00C6               	movwf	vfpfcnvrt@fmt
  4874     0E15  0856               	movf	vfprintf@ap,w
  4875     0E16  00C7               	movwf	vfpfcnvrt@ap
  4876     0E17  0858               	movf	vfprintf@fp,w
  4877     0E18  3180  2072  318E   	fcall	_vfpfcnvrt
  4878     0E1B                     l3066:
  4879                           
  4880                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4881     0E1B  0020               	movlb	0	; select bank0
  4882     0E1C  0859               	movf	vfprintf@cfmt,w
  4883     0E1D  0084               	movwf	4
  4884     0E1E  085A               	movf	vfprintf@cfmt+1,w
  4885     0E1F  0085               	movwf	5
  4886     0E20  0012               	moviw fsr0++
  4887     0E21  1D03               	btfss	3,2
  4888     0E22  2E24               	goto	u2961
  4889     0E23  2E25               	goto	u2960
  4890     0E24                     u2961:
  4891     0E24  2E13               	goto	l3064
  4892     0E25                     u2960:
  4893     0E25                     l3068:
  4894                           
  4895                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  4896     0E25  01D4               	clrf	?_vfprintf
  4897     0E26  01D5               	clrf	?_vfprintf+1
  4898     0E27                     l948:
  4899     0E27  0008               	return
  4900     0E28                     __end_of_vfprintf:
  4901                           
  4902                           	psect	text19
  4903     0072                     __ptext19:	
  4904 ;; *************** function _vfpfcnvrt *****************
  4905 ;; Defined at:
  4906 ;;		line 1177 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  fp              1    wreg     PTR struct _IO_FILE
  4909 ;;		 -> sprintf@f(11), 
  4910 ;;  fmt             1   38[BANK0 ] PTR PTR unsigned char 
  4911 ;;		 -> vfprintf@cfmt(2), 
  4912 ;;  ap              1   39[BANK0 ] PTR PTR void 
  4913 ;;		 -> sprintf@ap(1), 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
  4916 ;;		 -> sprintf@f(11), 
  4917 ;;  convarg         4   45[BANK0 ] struct .
  4918 ;;  cp              2   50[BANK0 ] PTR unsigned char 
  4919 ;;		 -> STR_11(18), STR_9(5), STR_8(7), STR_5(8), 
  4920 ;;		 -> STR_4(10), STR_1(4), 
  4921 ;;  done            1   44[BANK0 ] _Bool 
  4922 ;;  c               1    0        unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4933 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4934 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4935 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4936 ;;Total ram usage:       14 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; Hardware stack levels required when called: 8
  4939 ;; This function calls:
  4940 ;;		_dtoa
  4941 ;;		_fputc
  4942 ;;		_read_prec_or_width
  4943 ;;		_xtoa
  4944 ;; This function is called by:
  4945 ;;		_vfprintf
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949     0072                     _vfpfcnvrt:	
  4950                           ;psect for function _vfpfcnvrt
  4951                           
  4952                           
  4953                           ;incstack = 0
  4954                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4955                           ;vfpfcnvrt@fp stored from wreg
  4956     0072  0020               	movlb	0	; select bank0
  4957     0073  00D1               	movwf	vfpfcnvrt@fp
  4958     0074                     l2988:
  4959                           
  4960                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 120
      +                          1:     if ((*fmt)[0] == '%') {
  4961     0074  0846               	movf	vfpfcnvrt@fmt,w
  4962     0075  0086               	movwf	6
  4963     0076  0187               	clrf	7
  4964     0077  3F40               	moviw [0]fsr1
  4965     0078  00C8               	movwf	??_vfpfcnvrt
  4966     0079  3F41               	moviw [1]fsr1
  4967     007A  00C9               	movwf	??_vfpfcnvrt+1
  4968     007B  0848               	movf	??_vfpfcnvrt,w
  4969     007C  0084               	movwf	4
  4970     007D  0849               	movf	??_vfpfcnvrt+1,w
  4971     007E  0085               	movwf	5
  4972     007F  0012               	moviw fsr0++
  4973     0080  3A25               	xorlw	37
  4974     0081  1D03               	btfss	3,2
  4975     0082  2884               	goto	u2891
  4976     0083  2885               	goto	u2890
  4977     0084                     u2891:
  4978     0084  2958               	goto	l3046
  4979     0085                     u2890:
  4980     0085                     l2990:
  4981                           
  4982                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  4983     0085  0846               	movf	vfpfcnvrt@fmt,w
  4984     0086  0086               	movwf	6
  4985     0087  0187               	clrf	7
  4986     0088  3001               	movlw	1
  4987     0089  0781               	addwf	1,f
  4988     008A  3141               	addfsr 1,1
  4989     008B  1803               	skipnc
  4990     008C  0A81               	incf	1,f
  4991     008D                     l2992:
  4992                           
  4993                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  4994     008D  0021               	movlb	1	; select bank1
  4995     008E  01E5               	clrf	_width^(0+128)
  4996     008F  01E6               	clrf	(_width+1)^(0+128)
  4997     0090  1003               	clrc
  4998     0091  3000               	movlw	0
  4999     0092  1803               	btfsc	3,0
  5000     0093  3001               	movlw	1
  5001     0094  0020               	movlb	0	; select bank0
  5002     0095  00E5               	movwf	_flags
  5003     0096                     l2994:
  5004                           
  5005                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  5006     0096  30FF               	movlw	255
  5007     0097  0021               	movlb	1	; select bank1
  5008     0098  00E7               	movwf	_prec^(0+128)
  5009     0099  30FF               	movlw	255
  5010     009A  00E8               	movwf	(_prec^(0+128)+1)
  5011     009B                     l2996:
  5012                           
  5013                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1209:         done =
      +                           0;
  5014     009B  0020               	movlb	0	; select bank0
  5015     009C  01CC               	clrf	vfpfcnvrt@done
  5016                           
  5017                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  5018     009D  28BB               	goto	l3004
  5019     009E                     l928:	
  5020                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1219:               
      +                            case '0' :
  5021                           
  5022                           
  5023                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1220:               
      +                                flags |= (1 << 1);
  5024     009E  14E5               	bsf	_flags,1
  5025     009F                     l2998:
  5026                           
  5027                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1221:               
      +                                ++*fmt;
  5028     009F  0846               	movf	vfpfcnvrt@fmt,w
  5029     00A0  0086               	movwf	6
  5030     00A1  0187               	clrf	7
  5031     00A2  3001               	movlw	1
  5032     00A3  0781               	addwf	1,f
  5033     00A4  3141               	addfsr 1,1
  5034     00A5  1803               	skipnc
  5035     00A6  0A81               	incf	1,f
  5036                           
  5037                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1222:               
      +                                break;
  5038     00A7  28BB               	goto	l3004
  5039     00A8                     l930:	
  5040                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1242:               
      +                            default:
  5041                           
  5042                           
  5043                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1243:               
      +                                done = 1;
  5044     00A8  01CC               	clrf	vfpfcnvrt@done
  5045     00A9  0ACC               	incf	vfpfcnvrt@done,f
  5046                           
  5047                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1244:               
      +                                break;
  5048     00AA  28BB               	goto	l3004
  5049     00AB                     l3002:
  5050     00AB  0846               	movf	vfpfcnvrt@fmt,w
  5051     00AC  0086               	movwf	6
  5052     00AD  0187               	clrf	7
  5053     00AE  3F40               	moviw [0]fsr1
  5054     00AF  00C8               	movwf	??_vfpfcnvrt
  5055     00B0  3F41               	moviw [1]fsr1
  5056     00B1  00C9               	movwf	??_vfpfcnvrt+1
  5057     00B2  0848               	movf	??_vfpfcnvrt,w
  5058     00B3  0084               	movwf	4
  5059     00B4  0849               	movf	??_vfpfcnvrt+1,w
  5060     00B5  0085               	movwf	5
  5061     00B6  0800               	movf	0,w	;code access
  5062                           
  5063                           ; Switch size 1, requested type "simple"
  5064                           ; Number of cases is 1, Range of values is 48 to 48
  5065                           ; switch strategies available:
  5066                           ; Name         Instructions Cycles
  5067                           ; simple_byte            4     3 (average)
  5068                           ; direct_byte           11     9 (fixed)
  5069                           ; jumptable            263     9 (fixed)
  5070                           ;	Chosen strategy is simple_byte
  5071     00B7  3A30               	xorlw	48	; case 48
  5072     00B8  1903               	skipnz
  5073     00B9  289E               	goto	l928
  5074     00BA  28A8               	goto	l930
  5075     00BB                     l3004:
  5076                           
  5077                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  5078     00BB  084C               	movf	vfpfcnvrt@done,w
  5079     00BC  1903               	btfsc	3,2
  5080     00BD  28BF               	goto	u2901
  5081     00BE  28C0               	goto	u2900
  5082     00BF                     u2901:
  5083     00BF  28AB               	goto	l3002
  5084     00C0                     u2900:
  5085     00C0                     l3006:
  5086                           
  5087                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1256:   width = read
      +                          _prec_or_width(fmt, ap);
  5088     00C0  0847               	movf	vfpfcnvrt@ap,w
  5089     00C1  00AA               	movwf	read_prec_or_width@ap
  5090     00C2  0846               	movf	vfpfcnvrt@fmt,w
  5091     00C3  3185  25A7  3180   	fcall	_read_prec_or_width
  5092     00C6  0020               	movlb	0	; select bank0
  5093     00C7  082B               	movf	?_read_prec_or_width+1,w
  5094     00C8  0021               	movlb	1	; select bank1
  5095     00C9  00E6               	movwf	(_width+1)^(0+128)
  5096     00CA  0020               	movlb	0	; select bank0
  5097     00CB  082A               	movf	?_read_prec_or_width,w
  5098     00CC  0021               	movlb	1	; select bank1
  5099     00CD  00E5               	movwf	_width^(0+128)
  5100     00CE                     l3008:
  5101                           
  5102                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1257:   if (width < 
      +                          0) {
  5103     00CE  1FE6               	btfss	(_width+1)^(0+128),7
  5104     00CF  28D1               	goto	u2911
  5105     00D0  28D2               	goto	u2910
  5106     00D1                     u2911:
  5107     00D1  28DA               	goto	l3014
  5108     00D2                     u2910:
  5109     00D2                     l3010:
  5110                           
  5111                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1
      +                           << 0);
  5112     00D2  0020               	movlb	0	; select bank0
  5113     00D3  1465               	bsf	_flags,0
  5114     00D4                     l3012:
  5115                           
  5116                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1259:    width = -wi
      +                          dth;
  5117     00D4  0021               	movlb	1	; select bank1
  5118     00D5  09E5               	comf	_width^(0+128),f
  5119     00D6  09E6               	comf	(_width+1)^(0+128),f
  5120     00D7  0AE5               	incf	_width^(0+128),f
  5121     00D8  1903               	skipnz
  5122     00D9  0AE6               	incf	(_width+1)^(0+128),f
  5123     00DA                     l3014:
  5124                           
  5125                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  5126     00DA  0020               	movlb	0	; select bank0
  5127     00DB  0846               	movf	vfpfcnvrt@fmt,w
  5128     00DC  0086               	movwf	6
  5129     00DD  0187               	clrf	7
  5130     00DE  3F40               	moviw [0]fsr1
  5131     00DF  00D2               	movwf	vfpfcnvrt@cp
  5132     00E0  3F41               	moviw [1]fsr1
  5133     00E1  00D3               	movwf	vfpfcnvrt@cp+1
  5134     00E2                     l3016:
  5135                           
  5136                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == '
      +                          d' || *cp == 'i') {
  5137     00E2  0852               	movf	vfpfcnvrt@cp,w
  5138     00E3  0084               	movwf	4
  5139     00E4  0853               	movf	vfpfcnvrt@cp+1,w
  5140     00E5  0085               	movwf	5
  5141     00E6  0012               	moviw fsr0++
  5142     00E7  3A64               	xorlw	100
  5143     00E8  1903               	btfsc	3,2
  5144     00E9  28EB               	goto	u2921
  5145     00EA  28EC               	goto	u2920
  5146     00EB                     u2921:
  5147     00EB  28F6               	goto	l3020
  5148     00EC                     u2920:
  5149     00EC                     l3018:
  5150     00EC  0852               	movf	vfpfcnvrt@cp,w
  5151     00ED  0084               	movwf	4
  5152     00EE  0853               	movf	vfpfcnvrt@cp+1,w
  5153     00EF  0085               	movwf	5
  5154     00F0  0012               	moviw fsr0++
  5155     00F1  3A69               	xorlw	105
  5156     00F2  1D03               	btfss	3,2
  5157     00F3  28F5               	goto	u2931
  5158     00F4  28F6               	goto	u2930
  5159     00F5                     u2931:
  5160     00F5  2918               	goto	l3028
  5161     00F6                     u2930:
  5162     00F6                     l3020:
  5163                           
  5164                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1404:    convarg.sin
      +                          t = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5165     00F6  0847               	movf	vfpfcnvrt@ap,w
  5166     00F7  0086               	movwf	6
  5167     00F8  0187               	clrf	7
  5168     00F9  0801               	movf	1,w
  5169     00FA  0084               	movwf	4
  5170     00FB  0185               	clrf	5
  5171     00FC  3002               	movlw	2
  5172     00FD  0781               	addwf	1,f
  5173     00FE  3F00               	moviw [0]fsr0
  5174     00FF  00CD               	movwf	vfpfcnvrt@convarg
  5175     0100  3F01               	moviw [1]fsr0
  5176     0101  00CE               	movwf	vfpfcnvrt@convarg+1
  5177     0102                     l3022:
  5178                           
  5179                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1
      +                          ;
  5180     0102  0852               	movf	vfpfcnvrt@cp,w
  5181     0103  3E01               	addlw	1
  5182     0104  00C8               	movwf	??_vfpfcnvrt
  5183     0105  3000               	movlw	0
  5184     0106  3D53               	addwfc	vfpfcnvrt@cp+1,w
  5185     0107  00C9               	movwf	??_vfpfcnvrt+1
  5186     0108  0846               	movf	vfpfcnvrt@fmt,w
  5187     0109  0086               	movwf	6
  5188     010A  0187               	clrf	7
  5189     010B  0848               	movf	??_vfpfcnvrt,w
  5190     010C  3FC0               	movwi [0]fsr1
  5191     010D  0849               	movf	??_vfpfcnvrt+1,w
  5192     010E  3FC1               	movwi [1]fsr1
  5193     010F                     l3024:
  5194                           
  5195                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1432:    return (voi
      +                          d) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5196     010F  084E               	movf	vfpfcnvrt@convarg+1,w
  5197     0110  00BB               	movwf	dtoa@d+1
  5198     0111  084D               	movf	vfpfcnvrt@convarg,w
  5199     0112  00BA               	movwf	dtoa@d
  5200     0113  0851               	movf	vfpfcnvrt@fp,w
  5201     0114  3181  2171  3180   	fcall	_dtoa
  5202     0117  2970               	goto	l936
  5203     0118                     l3028:
  5204     0118  0852               	movf	vfpfcnvrt@cp,w
  5205     0119  0084               	movwf	4
  5206     011A  0853               	movf	vfpfcnvrt@cp+1,w
  5207     011B  0085               	movwf	5
  5208     011C  0012               	moviw fsr0++
  5209     011D  3A78               	xorlw	120
  5210     011E  1D03               	btfss	3,2
  5211     011F  2921               	goto	u2941
  5212     0120  2922               	goto	u2940
  5213     0121                     u2941:
  5214     0121  294E               	goto	l3042
  5215     0122                     u2940:
  5216     0122                     l3030:
  5217                           
  5218                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1452:     ) {;/Appli
      +                          cations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1495:    convarg.uint = (vf
      +                          pf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  5219     0122  0847               	movf	vfpfcnvrt@ap,w
  5220     0123  0086               	movwf	6
  5221     0124  0187               	clrf	7
  5222     0125  0801               	movf	1,w
  5223     0126  0084               	movwf	4
  5224     0127  0185               	clrf	5
  5225     0128  3002               	movlw	2
  5226     0129  0781               	addwf	1,f
  5227     012A  3F00               	moviw [0]fsr0
  5228     012B  00CD               	movwf	vfpfcnvrt@convarg
  5229     012C  3F01               	moviw [1]fsr0
  5230     012D  00CE               	movwf	vfpfcnvrt@convarg+1
  5231     012E                     l3032:
  5232                           
  5233                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1497:    *fmt = cp+1
      +                          ;
  5234     012E  0852               	movf	vfpfcnvrt@cp,w
  5235     012F  3E01               	addlw	1
  5236     0130  00C8               	movwf	??_vfpfcnvrt
  5237     0131  3000               	movlw	0
  5238     0132  3D53               	addwfc	vfpfcnvrt@cp+1,w
  5239     0133  00C9               	movwf	??_vfpfcnvrt+1
  5240     0134  0846               	movf	vfpfcnvrt@fmt,w
  5241     0135  0086               	movwf	6
  5242     0136  0187               	clrf	7
  5243     0137  0848               	movf	??_vfpfcnvrt,w
  5244     0138  3FC0               	movwi [0]fsr1
  5245     0139  0849               	movf	??_vfpfcnvrt+1,w
  5246     013A  3FC1               	movwi [1]fsr1
  5247                           
  5248                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1498:    switch (*cp
      +                          ) {
  5249     013B  2945               	goto	l3040
  5250     013C                     l3034:
  5251                           
  5252                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1586:      return (v
      +                          oid) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  5253     013C  084E               	movf	vfpfcnvrt@convarg+1,w
  5254     013D  00BB               	movwf	xtoa@d+1
  5255     013E  084D               	movf	vfpfcnvrt@convarg,w
  5256     013F  00BA               	movwf	xtoa@d
  5257     0140  0851               	movf	vfpfcnvrt@fp,w
  5258     0141  3183  23E6  3180   	fcall	_xtoa
  5259     0144  2970               	goto	l936
  5260     0145                     l3040:
  5261     0145  0852               	movf	vfpfcnvrt@cp,w
  5262     0146  0084               	movwf	4
  5263     0147  0853               	movf	vfpfcnvrt@cp+1,w
  5264     0148  0085               	movwf	5
  5265     0149  0800               	movf	0,w	;code access
  5266                           
  5267                           ; Switch size 1, requested type "simple"
  5268                           ; Number of cases is 1, Range of values is 120 to 120
  5269                           ; switch strategies available:
  5270                           ; Name         Instructions Cycles
  5271                           ; simple_byte            4     3 (average)
  5272                           ; direct_byte           11     9 (fixed)
  5273                           ; jumptable            263     9 (fixed)
  5274                           ;	Chosen strategy is simple_byte
  5275     014A  3A78               	xorlw	120	; case 120
  5276     014B  1903               	skipnz
  5277     014C  293C               	goto	l3034
  5278     014D  294E               	goto	l3042
  5279     014E                     l3042:
  5280                           
  5281                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  5282     014E  0020               	movlb	0	; select bank0
  5283     014F  0846               	movf	vfpfcnvrt@fmt,w
  5284     0150  0086               	movwf	6
  5285     0151  0187               	clrf	7
  5286     0152  3001               	movlw	1
  5287     0153  0781               	addwf	1,f
  5288     0154  3141               	addfsr 1,1
  5289     0155  1803               	skipnc
  5290     0156  0A81               	incf	1,f
  5291     0157  2970               	goto	l936
  5292     0158                     l3046:
  5293                           
  5294                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  5295     0158  0846               	movf	vfpfcnvrt@fmt,w
  5296     0159  0086               	movwf	6
  5297     015A  0187               	clrf	7
  5298     015B  3F40               	moviw [0]fsr1
  5299     015C  00C8               	movwf	??_vfpfcnvrt
  5300     015D  3F41               	moviw [1]fsr1
  5301     015E  00C9               	movwf	??_vfpfcnvrt+1
  5302     015F  0848               	movf	??_vfpfcnvrt,w
  5303     0160  0084               	movwf	4
  5304     0161  0849               	movf	??_vfpfcnvrt+1,w
  5305     0162  0085               	movwf	5
  5306     0163  0800               	movf	0,w	;code access
  5307     0164  00CA               	movwf	??_vfpfcnvrt+2
  5308     0165  01CB               	clrf	??_vfpfcnvrt+3
  5309     0166  084A               	movf	??_vfpfcnvrt+2,w
  5310     0167  00A4               	movwf	fputc@c
  5311     0168  084B               	movf	??_vfpfcnvrt+3,w
  5312     0169  00A5               	movwf	fputc@c+1
  5313     016A  0851               	movf	vfpfcnvrt@fp,w
  5314     016B  00A6               	movwf	fputc@fp
  5315     016C  3187  2716  3180   	fcall	_fputc
  5316     016F  294E               	goto	l3042
  5317     0170                     l936:
  5318     0170  0008               	return
  5319     0171                     __end_of_vfpfcnvrt:
  5320                           
  5321                           	psect	text20
  5322     03E6                     __ptext20:	
  5323 ;; *************** function _xtoa *****************
  5324 ;; Defined at:
  5325 ;;		line 1055 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  fp              1    wreg     PTR struct _IO_FILE
  5328 ;;		 -> sprintf@f(11), 
  5329 ;;  d               2   26[BANK0 ] unsigned int 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  5332 ;;		 -> sprintf@f(11), 
  5333 ;;  i               2   34[BANK0 ] int 
  5334 ;;  w               2   31[BANK0 ] int 
  5335 ;;  c               1   33[BANK0 ] unsigned char 
  5336 ;;  p               1   30[BANK0 ] _Bool 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      void 
  5339 ;; Registers used:
  5340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5347 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5348 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5349 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5350 ;;Total ram usage:       10 bytes
  5351 ;; Hardware stack levels used: 1
  5352 ;; Hardware stack levels required when called: 7
  5353 ;; This function calls:
  5354 ;;		_pad
  5355 ;; This function is called by:
  5356 ;;		_vfpfcnvrt
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360     03E6                     _xtoa:	
  5361                           ;psect for function _xtoa
  5362                           
  5363                           
  5364                           ;incstack = 0
  5365                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5366                           ;xtoa@fp stored from wreg
  5367     03E6  0020               	movlb	0	; select bank0
  5368     03E7  00BD               	movwf	xtoa@fp
  5369     03E8                     l2922:
  5370                           
  5371                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1055: static void xt
      +                          oa(FILE *fp, vfpf_uint_t d);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/dop
      +                          rnt.c: 1058: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1059: 
      +                           char c;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1063:     in
      +                          t i, w;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1067:  _Bool 
      +                          p = 1;
  5372     03E8  01BE               	clrf	xtoa@p
  5373     03E9  0ABE               	incf	xtoa@p,f
  5374     03EA                     l2924:
  5375                           
  5376                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1082:     w = width;
  5377     03EA  0021               	movlb	1	; select bank1
  5378     03EB  0866               	movf	(_width+1)^(0+128),w
  5379     03EC  0020               	movlb	0	; select bank0
  5380     03ED  00C0               	movwf	xtoa@w+1
  5381     03EE  0021               	movlb	1	; select bank1
  5382     03EF  0865               	movf	_width^(0+128),w
  5383     03F0  0020               	movlb	0	; select bank0
  5384     03F1  00BF               	movwf	xtoa@w
  5385                           
  5386                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1095:     i = sizeof
      +                          (dbuf) - 1;
  5387     03F2  301F               	movlw	31
  5388     03F3  00C2               	movwf	xtoa@i
  5389     03F4  3000               	movlw	0
  5390     03F5  00C3               	movwf	xtoa@i+1
  5391     03F6                     l2926:
  5392                           
  5393                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1096:     dbuf[i] = 
      +                          '\0';
  5394     03F6  0022               	movlb	2	; select bank2
  5395     03F7  01BF               	clrf	(_dbuf^(0+256)+31)
  5396                           
  5397                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  5398     03F8  2C24               	goto	l2946
  5399     03F9                     l2928:
  5400                           
  5401                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1106:     )) {;/Appl
      +                          ications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1107:         --i;
  5402     03F9  30FF               	movlw	255
  5403     03FA  07C2               	addwf	xtoa@i,f
  5404     03FB  30FF               	movlw	255
  5405     03FC  3DC3               	addwfc	xtoa@i+1,f
  5406     03FD                     l2930:
  5407                           
  5408                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1108:         c = d 
      +                          & 0x0f;
  5409     03FD  083A               	movf	xtoa@d,w
  5410     03FE  390F               	andlw	15
  5411     03FF  00C1               	movwf	xtoa@c
  5412     0400                     l2932:
  5413                           
  5414                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1109:   if (c < 10) 
      +                          {
  5415     0400  300A               	movlw	10
  5416     0401  0241               	subwf	xtoa@c,w
  5417     0402  1803               	skipnc
  5418     0403  2C05               	goto	u2801
  5419     0404  2C06               	goto	u2800
  5420     0405                     u2801:
  5421     0405  2C0B               	goto	l2936
  5422     0406                     u2800:
  5423     0406                     l2934:
  5424                           
  5425                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1110:    c += '0';
  5426     0406  3030               	movlw	48
  5427     0407  00BC               	movwf	??_xtoa
  5428     0408  083C               	movf	??_xtoa,w
  5429     0409  07C1               	addwf	xtoa@c,f
  5430                           
  5431                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1111:   }
  5432     040A  2C0F               	goto	l2938
  5433     040B                     l2936:
  5434                           
  5435                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1116:    c += 'a' - 
      +                          10;
  5436     040B  3057               	movlw	87
  5437     040C  00BC               	movwf	??_xtoa
  5438     040D  083C               	movf	??_xtoa,w
  5439     040E  07C1               	addwf	xtoa@c,f
  5440     040F                     l2938:
  5441                           
  5442                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1121:   dbuf[i] = c;
  5443     040F  0842               	movf	xtoa@i,w
  5444     0410  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5445     0411  0086               	movwf	6
  5446     0412  3001               	movlw	1	; select bank2/3
  5447     0413  0087               	movwf	7
  5448     0414  0841               	movf	xtoa@c,w
  5449     0415  0081               	movwf	1
  5450     0416                     l2940:
  5451                           
  5452                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1125:   p = 0;
  5453     0416  01BE               	clrf	xtoa@p
  5454     0417                     l2942:
  5455                           
  5456                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1127:         --w;
  5457     0417  30FF               	movlw	255
  5458     0418  07BF               	addwf	xtoa@w,f
  5459     0419  30FF               	movlw	255
  5460     041A  3DC0               	addwfc	xtoa@w+1,f
  5461     041B                     l2944:
  5462                           
  5463                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1128:         d = d 
      +                          >> 4;
  5464     041B  0E3A               	swapf	xtoa@d,w
  5465     041C  390F               	andlw	15
  5466     041D  00BA               	movwf	xtoa@d
  5467     041E  0E3B               	swapf	xtoa@d+1,w
  5468     041F  39F0               	andlw	240
  5469     0420  04BA               	iorwf	xtoa@d,f
  5470     0421  0E3B               	swapf	xtoa@d+1,w
  5471     0422  390F               	andlw	15
  5472     0423  00BB               	movwf	xtoa@d+1
  5473     0424                     l2946:
  5474                           
  5475                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  5476     0424  0020               	movlb	0	; select bank0
  5477     0425  0843               	movf	xtoa@i+1,w
  5478     0426  3A80               	xorlw	128
  5479     0427  00BC               	movwf	??_xtoa
  5480     0428  3080               	movlw	128
  5481     0429  023C               	subwf	??_xtoa,w
  5482     042A  1D03               	skipz
  5483     042B  2C2E               	goto	u2815
  5484     042C  3002               	movlw	2
  5485     042D  0242               	subwf	xtoa@i,w
  5486     042E                     u2815:
  5487     042E  1C03               	skipc
  5488     042F  2C31               	goto	u2811
  5489     0430  2C32               	goto	u2810
  5490     0431                     u2811:
  5491     0431  2C50               	goto	l2956
  5492     0432                     u2810:
  5493     0432                     l2948:
  5494     0432  0020               	movlb	0	; select bank0
  5495     0433  083A               	movf	xtoa@d,w
  5496     0434  043B               	iorwf	xtoa@d+1,w
  5497     0435  1D03               	btfss	3,2
  5498     0436  2C38               	goto	u2821
  5499     0437  2C39               	goto	u2820
  5500     0438                     u2821:
  5501     0438  2BF9               	goto	l2928
  5502     0439                     u2820:
  5503     0439                     l2950:
  5504     0439  083E               	movf	xtoa@p,w
  5505     043A  1D03               	btfss	3,2
  5506     043B  2C3D               	goto	u2831
  5507     043C  2C3E               	goto	u2830
  5508     043D                     u2831:
  5509     043D  2BF9               	goto	l2928
  5510     043E                     u2830:
  5511     043E                     l2952:
  5512     043E  0840               	movf	xtoa@w+1,w
  5513     043F  3A80               	xorlw	128
  5514     0440  00BC               	movwf	??_xtoa
  5515     0441  3080               	movlw	128
  5516     0442  023C               	subwf	??_xtoa,w
  5517     0443  1D03               	skipz
  5518     0444  2C47               	goto	u2845
  5519     0445  3001               	movlw	1
  5520     0446  023F               	subwf	xtoa@w,w
  5521     0447                     u2845:
  5522     0447  1C03               	skipc
  5523     0448  2C4A               	goto	u2841
  5524     0449  2C4B               	goto	u2840
  5525     044A                     u2841:
  5526     044A  2C50               	goto	l2956
  5527     044B                     u2840:
  5528     044B                     l2954:
  5529     044B  0020               	movlb	0	; select bank0
  5530     044C  18E5               	btfsc	_flags,1
  5531     044D  2C4F               	goto	u2851
  5532     044E  2C50               	goto	u2850
  5533     044F                     u2851:
  5534     044F  2BF9               	goto	l2928
  5535     0450                     u2850:
  5536     0450                     l2956:
  5537                           
  5538                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1152:     return (vo
      +                          id) pad(fp, &dbuf[i], w);
  5539     0450  0020               	movlb	0	; select bank0
  5540     0451  0842               	movf	xtoa@i,w
  5541     0452  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5542     0453  00B3               	movwf	pad@buf
  5543     0454  0840               	movf	xtoa@w+1,w
  5544     0455  00B5               	movwf	pad@p+1
  5545     0456  083F               	movf	xtoa@w,w
  5546     0457  00B4               	movwf	pad@p
  5547     0458  083D               	movf	xtoa@fp,w
  5548     0459  318F  27C1  3183   	fcall	_pad
  5549     045C                     l913:
  5550     045C  0008               	return
  5551     045D                     __end_of_xtoa:
  5552                           
  5553                           	psect	text21
  5554     05A7                     __ptext21:	
  5555 ;; *************** function _read_prec_or_width *****************
  5556 ;; Defined at:
  5557 ;;		line 1158 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  fmt             1    wreg     PTR PTR const unsigned c
  5560 ;;		 -> vfprintf@cfmt(2), 
  5561 ;;  ap              1   10[BANK0 ] PTR PTR void [1]
  5562 ;;		 -> sprintf@ap(1), 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  fmt             1   18[BANK0 ] PTR PTR const unsigned c
  5565 ;;		 -> vfprintf@cfmt(2), 
  5566 ;;  c               1   15[BANK0 ] unsigned char 
  5567 ;;  n               2   16[BANK0 ] int 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  2   10[BANK0 ] int 
  5570 ;; Registers used:
  5571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5577 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5578 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5579 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5580 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5581 ;;Total ram usage:        9 bytes
  5582 ;; Hardware stack levels used: 1
  5583 ;; Hardware stack levels required when called: 4
  5584 ;; This function calls:
  5585 ;;		___wmul
  5586 ;; This function is called by:
  5587 ;;		_vfpfcnvrt
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591     05A7                     _read_prec_or_width:	
  5592                           ;psect for function _read_prec_or_width
  5593                           
  5594                           
  5595                           ;incstack = 0
  5596                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5597                           ;read_prec_or_width@fmt stored from wreg
  5598     05A7  0020               	movlb	0	; select bank0
  5599     05A8  00B2               	movwf	read_prec_or_width@fmt
  5600     05A9                     l2960:
  5601                           
  5602                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  5603     05A9  01B0               	clrf	read_prec_or_width@n
  5604     05AA  01B1               	clrf	read_prec_or_width@n+1
  5605     05AB                     l2962:
  5606                           
  5607                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)
      +                          [0] == '*') {
  5608     05AB  0832               	movf	read_prec_or_width@fmt,w
  5609     05AC  0086               	movwf	6
  5610     05AD  0187               	clrf	7
  5611     05AE  3F40               	moviw [0]fsr1
  5612     05AF  00AC               	movwf	??_read_prec_or_width
  5613     05B0  3F41               	moviw [1]fsr1
  5614     05B1  00AD               	movwf	??_read_prec_or_width+1
  5615     05B2  082C               	movf	??_read_prec_or_width,w
  5616     05B3  0084               	movwf	4
  5617     05B4  082D               	movf	??_read_prec_or_width+1,w
  5618     05B5  0085               	movwf	5
  5619     05B6  0012               	moviw fsr0++
  5620     05B7  3A2A               	xorlw	42
  5621     05B8  1D03               	btfss	3,2
  5622     05B9  2DBB               	goto	u2861
  5623     05BA  2DBC               	goto	u2860
  5624     05BB                     u2861:
  5625     05BB  2DEE               	goto	l2972
  5626     05BC                     u2860:
  5627     05BC                     l2964:
  5628                           
  5629                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt
      +                          ;
  5630     05BC  0832               	movf	read_prec_or_width@fmt,w
  5631     05BD  0086               	movwf	6
  5632     05BE  0187               	clrf	7
  5633     05BF  3001               	movlw	1
  5634     05C0  0781               	addwf	1,f
  5635     05C1  3141               	addfsr 1,1
  5636     05C2  1803               	skipnc
  5637     05C3  0A81               	incf	1,f
  5638     05C4                     l2966:
  5639                           
  5640                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1162:         n = (*
      +                          (int *)__va_arg(*(int **)*ap, (int)0));
  5641     05C4  082A               	movf	read_prec_or_width@ap,w
  5642     05C5  0086               	movwf	6
  5643     05C6  0187               	clrf	7
  5644     05C7  0801               	movf	1,w
  5645     05C8  0084               	movwf	4
  5646     05C9  0185               	clrf	5
  5647     05CA  3002               	movlw	2
  5648     05CB  0781               	addwf	1,f
  5649     05CC  3F00               	moviw [0]fsr0
  5650     05CD  00B0               	movwf	read_prec_or_width@n
  5651     05CE  3F01               	moviw [1]fsr0
  5652     05CF  00B1               	movwf	read_prec_or_width@n+1
  5653                           
  5654                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1163:     } else {
  5655     05D0  2E02               	goto	l2974
  5656     05D1                     l2968:
  5657                           
  5658                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1166:             n 
      +                          = n * 10 + c;
  5659     05D1  082F               	movf	read_prec_or_width@c,w
  5660     05D2  00AC               	movwf	??_read_prec_or_width
  5661     05D3  01AD               	clrf	??_read_prec_or_width+1
  5662     05D4  0831               	movf	read_prec_or_width@n+1,w
  5663     05D5  00A5               	movwf	___wmul@multiplier+1
  5664     05D6  0830               	movf	read_prec_or_width@n,w
  5665     05D7  00A4               	movwf	___wmul@multiplier
  5666     05D8  300A               	movlw	10
  5667     05D9  00A6               	movwf	___wmul@multiplicand
  5668     05DA  3000               	movlw	0
  5669     05DB  00A7               	movwf	___wmul@multiplicand+1
  5670     05DC  318E  26A3  3185   	fcall	___wmul
  5671     05DF  0020               	movlb	0	; select bank0
  5672     05E0  082C               	movf	??_read_prec_or_width,w
  5673     05E1  0724               	addwf	?___wmul,w
  5674     05E2  00B0               	movwf	read_prec_or_width@n
  5675     05E3  082D               	movf	??_read_prec_or_width+1,w
  5676     05E4  3D25               	addwfc	?___wmul+1,w
  5677     05E5  00B1               	movwf	read_prec_or_width@n+1
  5678     05E6                     l2970:
  5679                           
  5680                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1167:             ++
      +                          *fmt;
  5681     05E6  0832               	movf	read_prec_or_width@fmt,w
  5682     05E7  0086               	movwf	6
  5683     05E8  0187               	clrf	7
  5684     05E9  3001               	movlw	1
  5685     05EA  0781               	addwf	1,f
  5686     05EB  3141               	addfsr 1,1
  5687     05EC  1803               	skipnc
  5688     05ED  0A81               	incf	1,f
  5689     05EE                     l2972:
  5690                           
  5691                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1165:         while 
      +                          ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  5692     05EE  0832               	movf	read_prec_or_width@fmt,w
  5693     05EF  0086               	movwf	6
  5694     05F0  0187               	clrf	7
  5695     05F1  3F40               	moviw [0]fsr1
  5696     05F2  00AC               	movwf	??_read_prec_or_width
  5697     05F3  3F41               	moviw [1]fsr1
  5698     05F4  00AD               	movwf	??_read_prec_or_width+1
  5699     05F5  082C               	movf	??_read_prec_or_width,w
  5700     05F6  0084               	movwf	4
  5701     05F7  082D               	movf	??_read_prec_or_width+1,w
  5702     05F8  0085               	movwf	5
  5703     05F9  0800               	movf	0,w	;code access
  5704     05FA  3ED0               	addlw	208
  5705     05FB  00AF               	movwf	read_prec_or_width@c
  5706     05FC  300A               	movlw	10
  5707     05FD  022F               	subwf	read_prec_or_width@c,w
  5708     05FE  1C03               	skipc
  5709     05FF  2E01               	goto	u2871
  5710     0600  2E02               	goto	u2870
  5711     0601                     u2871:
  5712     0601  2DD1               	goto	l2968
  5713     0602                     u2870:
  5714     0602                     l2974:
  5715                           
  5716                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1170:     return n;
  5717     0602  0831               	movf	read_prec_or_width@n+1,w
  5718     0603  00AB               	movwf	?_read_prec_or_width+1
  5719     0604  0830               	movf	read_prec_or_width@n,w
  5720     0605  00AA               	movwf	?_read_prec_or_width
  5721     0606                     l921:
  5722     0606  0008               	return
  5723     0607                     __end_of_read_prec_or_width:
  5724                           
  5725                           	psect	text22
  5726     0EA3                     __ptext22:	
  5727 ;; *************** function ___wmul *****************
  5728 ;; Defined at:
  5729 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul16.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5732 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  product         2    8[BANK0 ] unsigned int 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  2    4[BANK0 ] unsigned int 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5744 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5745 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5747 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5748 ;;Total ram usage:        6 bytes
  5749 ;; Hardware stack levels used: 1
  5750 ;; Hardware stack levels required when called: 3
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_read_prec_or_width
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758     0EA3                     ___wmul:	
  5759                           ;psect for function ___wmul
  5760                           
  5761     0EA3                     l2756:	
  5762                           ;incstack = 0
  5763                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5764                           
  5765     0EA3  0020               	movlb	0	; select bank0
  5766     0EA4  01A8               	clrf	___wmul@product
  5767     0EA5  01A9               	clrf	___wmul@product+1
  5768     0EA6                     l2758:
  5769     0EA6  1C24               	btfss	___wmul@multiplier,0
  5770     0EA7  2EA9               	goto	u2421
  5771     0EA8  2EAA               	goto	u2420
  5772     0EA9                     u2421:
  5773     0EA9  2EAE               	goto	l391
  5774     0EAA                     u2420:
  5775     0EAA                     l2760:
  5776     0EAA  0826               	movf	___wmul@multiplicand,w
  5777     0EAB  07A8               	addwf	___wmul@product,f
  5778     0EAC  0827               	movf	___wmul@multiplicand+1,w
  5779     0EAD  3DA9               	addwfc	___wmul@product+1,f
  5780     0EAE                     l391:
  5781     0EAE  3001               	movlw	1
  5782     0EAF                     u2435:
  5783     0EAF  35A6               	lslf	___wmul@multiplicand,f
  5784     0EB0  0DA7               	rlf	___wmul@multiplicand+1,f
  5785     0EB1  0B89               	decfsz	9,f
  5786     0EB2  2EAF               	goto	u2435
  5787     0EB3                     l2762:
  5788     0EB3  3001               	movlw	1
  5789     0EB4                     u2445:
  5790     0EB4  36A5               	lsrf	___wmul@multiplier+1,f
  5791     0EB5  0CA4               	rrf	___wmul@multiplier,f
  5792     0EB6  0B89               	decfsz	9,f
  5793     0EB7  2EB4               	goto	u2445
  5794     0EB8                     l2764:
  5795     0EB8  0824               	movf	___wmul@multiplier,w
  5796     0EB9  0425               	iorwf	___wmul@multiplier+1,w
  5797     0EBA  1D03               	btfss	3,2
  5798     0EBB  2EBD               	goto	u2451
  5799     0EBC  2EBE               	goto	u2450
  5800     0EBD                     u2451:
  5801     0EBD  2EA6               	goto	l2758
  5802     0EBE                     u2450:
  5803     0EBE                     l2766:
  5804     0EBE  0829               	movf	___wmul@product+1,w
  5805     0EBF  00A5               	movwf	?___wmul+1
  5806     0EC0  0828               	movf	___wmul@product,w
  5807     0EC1  00A4               	movwf	?___wmul
  5808     0EC2                     l393:
  5809     0EC2  0008               	return
  5810     0EC3                     __end_of___wmul:
  5811                           
  5812                           	psect	text23
  5813     0171                     __ptext23:	
  5814 ;; *************** function _dtoa *****************
  5815 ;; Defined at:
  5816 ;;		line 513 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  fp              1    wreg     PTR struct _IO_FILE
  5819 ;;		 -> sprintf@f(11), 
  5820 ;;  d               2   26[BANK0 ] int 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  5823 ;;		 -> sprintf@f(11), 
  5824 ;;  i               2   36[BANK0 ] int 
  5825 ;;  w               2   33[BANK0 ] int 
  5826 ;;  s               1   35[BANK0 ] unsigned char 
  5827 ;;  p               1   32[BANK0 ] _Bool 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      void 
  5830 ;; Registers used:
  5831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5837 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5838 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5839 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5840 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5841 ;;Total ram usage:       12 bytes
  5842 ;; Hardware stack levels used: 1
  5843 ;; Hardware stack levels required when called: 7
  5844 ;; This function calls:
  5845 ;;		___awdiv
  5846 ;;		___awmod
  5847 ;;		_abs
  5848 ;;		_pad
  5849 ;; This function is called by:
  5850 ;;		_vfpfcnvrt
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854     0171                     _dtoa:	
  5855                           ;psect for function _dtoa
  5856                           
  5857                           
  5858                           ;incstack = 0
  5859                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5860                           ;dtoa@fp stored from wreg
  5861     0171  0020               	movlb	0	; select bank0
  5862     0172  00BD               	movwf	dtoa@fp
  5863     0173                     l2876:
  5864                           
  5865                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 513: static void dto
      +                          a(FILE *fp, vfpf_sint_t d);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/dopr
      +                          nt.c: 514: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 515:  ch
      +                          ar s;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 516:     int i,
      +                           w;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 520:  _Bool p = 1
      +                          ;
  5866     0173  01C0               	clrf	dtoa@p
  5867     0174  0AC0               	incf	dtoa@p,f
  5868     0175                     l2878:
  5869                           
  5870                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 524:     s = d < 0 ?
      +                           1 : 0;
  5871     0175  1BBB               	btfsc	dtoa@d+1,7
  5872     0176  2978               	goto	u2701
  5873     0177  297A               	goto	u2700
  5874     0178                     u2701:
  5875     0178  3001               	movlw	1
  5876     0179  297B               	goto	u2710
  5877     017A                     u2700:
  5878     017A  3000               	movlw	0
  5879     017B                     u2710:
  5880     017B  00C3               	movwf	dtoa@s
  5881                           
  5882                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 535:     w = width;
  5883     017C  0021               	movlb	1	; select bank1
  5884     017D  0866               	movf	(_width+1)^(0+128),w
  5885     017E  0020               	movlb	0	; select bank0
  5886     017F  00C2               	movwf	dtoa@w+1
  5887     0180  0021               	movlb	1	; select bank1
  5888     0181  0865               	movf	_width^(0+128),w
  5889     0182  0020               	movlb	0	; select bank0
  5890     0183  00C1               	movwf	dtoa@w
  5891     0184                     l2880:
  5892                           
  5893                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 536:     if (s
  5894     0184  0843               	movf	dtoa@s,w
  5895     0185  1903               	btfsc	3,2
  5896     0186  2988               	goto	u2721
  5897     0187  2989               	goto	u2720
  5898     0188                     u2721:
  5899     0188  299D               	goto	l888
  5900     0189                     u2720:
  5901     0189                     l2882:
  5902                           
  5903                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 540:     ) {;/Applic
      +                          ations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 541:         --w;
  5904     0189  30FF               	movlw	255
  5905     018A  07C1               	addwf	dtoa@w,f
  5906     018B  30FF               	movlw	255
  5907     018C  3DC2               	addwfc	dtoa@w+1,f
  5908     018D                     l2884:
  5909                           
  5910                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' :
      +                           '+';
  5911     018D  0843               	movf	dtoa@s,w
  5912     018E  1D03               	btfss	3,2
  5913     018F  2991               	goto	u2731
  5914     0190  2992               	goto	u2730
  5915     0191                     u2731:
  5916     0191  2997               	goto	l2888
  5917     0192                     u2730:
  5918     0192                     l2886:
  5919     0192  302B               	movlw	43
  5920     0193  00BE               	movwf	_dtoa$1182
  5921     0194  3000               	movlw	0
  5922     0195  00BF               	movwf	_dtoa$1182+1
  5923     0196  299B               	goto	l892
  5924     0197                     l2888:
  5925     0197  302D               	movlw	45
  5926     0198  00BE               	movwf	_dtoa$1182
  5927     0199  3000               	movlw	0
  5928     019A  00BF               	movwf	_dtoa$1182+1
  5929     019B                     l892:
  5930     019B  083E               	movf	_dtoa$1182,w
  5931     019C  00C3               	movwf	dtoa@s
  5932     019D                     l888:	
  5933                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 543:     }
  5934                           
  5935                           
  5936                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(
      +                          dbuf) - 1;
  5937     019D  301F               	movlw	31
  5938     019E  00C4               	movwf	dtoa@i
  5939     019F  3000               	movlw	0
  5940     01A0  00C5               	movwf	dtoa@i+1
  5941     01A1                     l2890:
  5942                           
  5943                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '
      +                          \0';
  5944     01A1  0022               	movlb	2	; select bank2
  5945     01A2  01BF               	clrf	(_dbuf^(0+256)+31)
  5946                           
  5947                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 554:     while (!(i 
      +                          < 1) && (d != 0
  5948     01A3  29D9               	goto	l2902
  5949     01A4                     l2892:
  5950                           
  5951                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 563:     )) {;/Appli
      +                          cations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 564:         --i;
  5952     01A4  30FF               	movlw	255
  5953     01A5  07C4               	addwf	dtoa@i,f
  5954     01A6  30FF               	movlw	255
  5955     01A7  3DC5               	addwfc	dtoa@i+1,f
  5956     01A8                     l2894:
  5957                           
  5958                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 565:         dbuf[i]
      +                           = (char)((int)'0' + abs(d % 10));
  5959     01A8  0844               	movf	dtoa@i,w
  5960     01A9  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5961     01AA  0086               	movwf	6
  5962     01AB  3001               	movlw	1	; select bank2/3
  5963     01AC  0087               	movwf	7
  5964     01AD  300A               	movlw	10
  5965     01AE  00A4               	movwf	___awmod@divisor
  5966     01AF  3000               	movlw	0
  5967     01B0  00A5               	movwf	___awmod@divisor+1
  5968     01B1  083B               	movf	dtoa@d+1,w
  5969     01B2  00A7               	movwf	___awmod@dividend+1
  5970     01B3  083A               	movf	dtoa@d,w
  5971     01B4  00A6               	movwf	___awmod@dividend
  5972     01B5  3186  26C2  3181   	fcall	___awmod
  5973     01B8  0020               	movlb	0	; select bank0
  5974     01B9  0825               	movf	?___awmod+1,w
  5975     01BA  00AC               	movwf	abs@a+1
  5976     01BB  0824               	movf	?___awmod,w
  5977     01BC  00AB               	movwf	abs@a
  5978     01BD  318D  2558  3181   	fcall	_abs
  5979     01C0  0020               	movlb	0	; select bank0
  5980     01C1  082B               	movf	?_abs,w
  5981     01C2  3E30               	addlw	48
  5982     01C3  0081               	movwf	1
  5983     01C4                     l2896:
  5984                           
  5985                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 569:   p = 0;
  5986     01C4  01C0               	clrf	dtoa@p
  5987     01C5                     l2898:
  5988                           
  5989                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 571:         --w;
  5990     01C5  30FF               	movlw	255
  5991     01C6  07C1               	addwf	dtoa@w,f
  5992     01C7  30FF               	movlw	255
  5993     01C8  3DC2               	addwfc	dtoa@w+1,f
  5994     01C9                     l2900:
  5995                           
  5996                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 572:         d = d /
      +                           10;
  5997     01C9  300A               	movlw	10
  5998     01CA  00A4               	movwf	___awdiv@divisor
  5999     01CB  3000               	movlw	0
  6000     01CC  00A5               	movwf	___awdiv@divisor+1
  6001     01CD  083B               	movf	dtoa@d+1,w
  6002     01CE  00A7               	movwf	___awdiv@dividend+1
  6003     01CF  083A               	movf	dtoa@d,w
  6004     01D0  00A6               	movwf	___awdiv@dividend
  6005     01D1  3186  2607  3181   	fcall	___awdiv
  6006     01D4  0020               	movlb	0	; select bank0
  6007     01D5  0825               	movf	?___awdiv+1,w
  6008     01D6  00BB               	movwf	dtoa@d+1
  6009     01D7  0824               	movf	?___awdiv,w
  6010     01D8  00BA               	movwf	dtoa@d
  6011     01D9                     l2902:
  6012                           
  6013                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 554:     while (!(i 
      +                          < 1) && (d != 0
  6014     01D9  0020               	movlb	0	; select bank0
  6015     01DA  0845               	movf	dtoa@i+1,w
  6016     01DB  3A80               	xorlw	128
  6017     01DC  00BC               	movwf	??_dtoa
  6018     01DD  3080               	movlw	128
  6019     01DE  023C               	subwf	??_dtoa,w
  6020     01DF  1D03               	skipz
  6021     01E0  29E3               	goto	u2745
  6022     01E1  3001               	movlw	1
  6023     01E2  0244               	subwf	dtoa@i,w
  6024     01E3                     u2745:
  6025     01E3  1C03               	skipc
  6026     01E4  29E6               	goto	u2741
  6027     01E5  29E7               	goto	u2740
  6028     01E6                     u2741:
  6029     01E6  2A05               	goto	l2912
  6030     01E7                     u2740:
  6031     01E7                     l2904:
  6032     01E7  0020               	movlb	0	; select bank0
  6033     01E8  083A               	movf	dtoa@d,w
  6034     01E9  043B               	iorwf	dtoa@d+1,w
  6035     01EA  1D03               	btfss	3,2
  6036     01EB  29ED               	goto	u2751
  6037     01EC  29EE               	goto	u2750
  6038     01ED                     u2751:
  6039     01ED  29A4               	goto	l2892
  6040     01EE                     u2750:
  6041     01EE                     l2906:
  6042     01EE  0840               	movf	dtoa@p,w
  6043     01EF  1D03               	btfss	3,2
  6044     01F0  29F2               	goto	u2761
  6045     01F1  29F3               	goto	u2760
  6046     01F2                     u2761:
  6047     01F2  29A4               	goto	l2892
  6048     01F3                     u2760:
  6049     01F3                     l2908:
  6050     01F3  0842               	movf	dtoa@w+1,w
  6051     01F4  3A80               	xorlw	128
  6052     01F5  00BC               	movwf	??_dtoa
  6053     01F6  3080               	movlw	128
  6054     01F7  023C               	subwf	??_dtoa,w
  6055     01F8  1D03               	skipz
  6056     01F9  29FC               	goto	u2775
  6057     01FA  3001               	movlw	1
  6058     01FB  0241               	subwf	dtoa@w,w
  6059     01FC                     u2775:
  6060     01FC  1C03               	skipc
  6061     01FD  29FF               	goto	u2771
  6062     01FE  2A00               	goto	u2770
  6063     01FF                     u2771:
  6064     01FF  2A05               	goto	l2912
  6065     0200                     u2770:
  6066     0200                     l2910:
  6067     0200  0020               	movlb	0	; select bank0
  6068     0201  18E5               	btfsc	_flags,1
  6069     0202  2A04               	goto	u2781
  6070     0203  2A05               	goto	u2780
  6071     0204                     u2781:
  6072     0204  29A4               	goto	l2892
  6073     0205                     u2780:
  6074     0205                     l2912:
  6075                           
  6076                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 576:     if (s != 0)
      +                           {
  6077     0205  0020               	movlb	0	; select bank0
  6078     0206  0843               	movf	dtoa@s,w
  6079     0207  1903               	btfsc	3,2
  6080     0208  2A0A               	goto	u2791
  6081     0209  2A0B               	goto	u2790
  6082     020A                     u2791:
  6083     020A  2A16               	goto	l2918
  6084     020B                     u2790:
  6085     020B                     l2914:
  6086                           
  6087                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 577:         --i;
  6088     020B  30FF               	movlw	255
  6089     020C  07C4               	addwf	dtoa@i,f
  6090     020D  30FF               	movlw	255
  6091     020E  3DC5               	addwfc	dtoa@i+1,f
  6092     020F                     l2916:
  6093                           
  6094                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 578:         dbuf[i]
      +                           = s;
  6095     020F  0844               	movf	dtoa@i,w
  6096     0210  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6097     0211  0086               	movwf	6
  6098     0212  3001               	movlw	1	; select bank2/3
  6099     0213  0087               	movwf	7
  6100     0214  0843               	movf	dtoa@s,w
  6101     0215  0081               	movwf	1
  6102     0216                     l2918:
  6103                           
  6104                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 582:     return (voi
      +                          d) pad(fp, &dbuf[i], w);
  6105     0216  0844               	movf	dtoa@i,w
  6106     0217  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6107     0218  00B3               	movwf	pad@buf
  6108     0219  0842               	movf	dtoa@w+1,w
  6109     021A  00B5               	movwf	pad@p+1
  6110     021B  0841               	movf	dtoa@w,w
  6111     021C  00B4               	movwf	pad@p
  6112     021D  083D               	movf	dtoa@fp,w
  6113     021E  318F  27C1  3181   	fcall	_pad
  6114     0221                     l901:
  6115     0221  0008               	return
  6116     0222                     __end_of_dtoa:
  6117                           
  6118                           	psect	text24
  6119     0FC1                     __ptext24:	
  6120 ;; *************** function _pad *****************
  6121 ;; Defined at:
  6122 ;;		line 193 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  fp              1    wreg     PTR struct _IO_FILE
  6125 ;;		 -> sprintf@f(11), 
  6126 ;;  buf             1   19[BANK0 ] PTR unsigned char 
  6127 ;;		 -> dbuf(32), 
  6128 ;;  p               2   20[BANK0 ] int 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  fp              1   25[BANK0 ] PTR struct _IO_FILE
  6131 ;;		 -> sprintf@f(11), 
  6132 ;;  i               2   23[BANK0 ] int 
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6142 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6143 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6144 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6145 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6146 ;;Total ram usage:        7 bytes
  6147 ;; Hardware stack levels used: 1
  6148 ;; Hardware stack levels required when called: 6
  6149 ;; This function calls:
  6150 ;;		_fputc
  6151 ;;		_fputs
  6152 ;; This function is called by:
  6153 ;;		_dtoa
  6154 ;;		_xtoa
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158     0FC1                     _pad:	
  6159                           ;psect for function _pad
  6160                           
  6161                           
  6162                           ;incstack = 0
  6163                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6164                           ;pad@fp stored from wreg
  6165     0FC1  0020               	movlb	0	; select bank0
  6166     0FC2  00B9               	movwf	pad@fp
  6167     0FC3                     l2852:
  6168                           
  6169                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 193: static void pad
      +                          (FILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/do
      +                          prnt.c: 194: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 195:  
      +                             int i;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 199:     if
      +                           (flags & (1 << 0)) {
  6170     0FC3  1C65               	btfss	_flags,0
  6171     0FC4  2FC6               	goto	u2651
  6172     0FC5  2FC7               	goto	u2650
  6173     0FC6                     u2651:
  6174     0FC6  2FCD               	goto	l2856
  6175     0FC7                     u2650:
  6176     0FC7                     l2854:
  6177                           
  6178                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 200:         fputs((
      +                          const char *)buf, fp);
  6179     0FC7  0839               	movf	pad@fp,w
  6180     0FC8  00AC               	movwf	fputs@fp
  6181     0FC9  0833               	movf	pad@buf,w
  6182     0FCA  318E  26C3  318F   	fcall	_fputs
  6183     0FCD                     l2856:
  6184                           
  6185                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  6186     0FCD  0020               	movlb	0	; select bank0
  6187     0FCE  1FB5               	btfss	pad@p+1,7
  6188     0FCF  2FD1               	goto	u2661
  6189     0FD0  2FD2               	goto	u2660
  6190     0FD1                     u2661:
  6191     0FD1  2FD4               	goto	l880
  6192     0FD2                     u2660:
  6193     0FD2                     l2858:
  6194                           
  6195                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  6196     0FD2  01B4               	clrf	pad@p
  6197     0FD3  01B5               	clrf	pad@p+1
  6198     0FD4                     l880:	
  6199                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 207:  }
  6200                           
  6201                           
  6202                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  6203     0FD4  01B7               	clrf	pad@i
  6204     0FD5  01B8               	clrf	pad@i+1
  6205                           
  6206                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6207     0FD6  2FE6               	goto	l2864
  6208     0FD7                     l2860:
  6209                           
  6210                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 210:         fputc('
      +                           ', fp);
  6211     0FD7  3020               	movlw	32
  6212     0FD8  0020               	movlb	0	; select bank0
  6213     0FD9  00A4               	movwf	fputc@c
  6214     0FDA  3000               	movlw	0
  6215     0FDB  00A5               	movwf	fputc@c+1
  6216     0FDC  0839               	movf	pad@fp,w
  6217     0FDD  00A6               	movwf	fputc@fp
  6218     0FDE  3187  2716  318F   	fcall	_fputc
  6219     0FE1                     l2862:
  6220                           
  6221                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 211:         ++i;
  6222     0FE1  3001               	movlw	1
  6223     0FE2  0020               	movlb	0	; select bank0
  6224     0FE3  07B7               	addwf	pad@i,f
  6225     0FE4  3000               	movlw	0
  6226     0FE5  3DB8               	addwfc	pad@i+1,f
  6227     0FE6                     l2864:
  6228                           
  6229                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6230     0FE6  0838               	movf	pad@i+1,w
  6231     0FE7  3A80               	xorlw	128
  6232     0FE8  00B6               	movwf	??_pad
  6233     0FE9  0835               	movf	pad@p+1,w
  6234     0FEA  3A80               	xorlw	128
  6235     0FEB  0236               	subwf	??_pad,w
  6236     0FEC  1D03               	skipz
  6237     0FED  2FF0               	goto	u2675
  6238     0FEE  0834               	movf	pad@p,w
  6239     0FEF  0237               	subwf	pad@i,w
  6240     0FF0                     u2675:
  6241     0FF0  1C03               	skipc
  6242     0FF1  2FF3               	goto	u2671
  6243     0FF2  2FF4               	goto	u2670
  6244     0FF3                     u2671:
  6245     0FF3  2FD7               	goto	l2860
  6246     0FF4                     u2670:
  6247     0FF4                     l883:
  6248                           
  6249                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 216:     if (!(flags
      +                           & (1 << 0))) {
  6250     0FF4  0020               	movlb	0	; select bank0
  6251     0FF5  1865               	btfsc	_flags,0
  6252     0FF6  2FF8               	goto	u2681
  6253     0FF7  2FF9               	goto	u2680
  6254     0FF8                     u2681:
  6255     0FF8  2FFF               	goto	l885
  6256     0FF9                     u2680:
  6257     0FF9                     l2866:
  6258                           
  6259                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 218:         fputs((
      +                          const char *)buf, fp);
  6260     0FF9  0839               	movf	pad@fp,w
  6261     0FFA  00AC               	movwf	fputs@fp
  6262     0FFB  0833               	movf	pad@buf,w
  6263     0FFC  318E  26C3  318F   	fcall	_fputs
  6264     0FFF                     l885:
  6265     0FFF  0008               	return
  6266     1000                     __end_of_pad:
  6267                           
  6268                           	psect	text25
  6269     0EC3                     __ptext25:	
  6270 ;; *************** function _fputs *****************
  6271 ;; Defined at:
  6272 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputs.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  s               1    wreg     PTR const unsigned char 
  6275 ;;		 -> dbuf(32), 
  6276 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  6277 ;;		 -> sprintf@f(11), 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  s               1   18[BANK0 ] PTR const unsigned char 
  6280 ;;		 -> dbuf(32), 
  6281 ;;  i               2   16[BANK0 ] int 
  6282 ;;  c               1   15[BANK0 ] unsigned char 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  2   12[BANK0 ] int 
  6285 ;; Registers used:
  6286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6292 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6293 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6294 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6295 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6296 ;;Total ram usage:        7 bytes
  6297 ;; Hardware stack levels used: 1
  6298 ;; Hardware stack levels required when called: 5
  6299 ;; This function calls:
  6300 ;;		_fputc
  6301 ;; This function is called by:
  6302 ;;		_pad
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306     0EC3                     _fputs:	
  6307                           ;psect for function _fputs
  6308                           
  6309                           
  6310                           ;incstack = 0
  6311                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6312                           ;fputs@s stored from wreg
  6313     0EC3  0020               	movlb	0	; select bank0
  6314     0EC4  00B2               	movwf	fputs@s
  6315     0EC5                     l2748:
  6316     0EC5  01B0               	clrf	fputs@i
  6317     0EC6  01B1               	clrf	fputs@i+1
  6318     0EC7  2ED9               	goto	l2754
  6319     0EC8                     l2750:
  6320     0EC8  082F               	movf	fputs@c,w
  6321     0EC9  00AD               	movwf	??_fputs
  6322     0ECA  01AE               	clrf	??_fputs+1
  6323     0ECB  082D               	movf	??_fputs,w
  6324     0ECC  00A4               	movwf	fputc@c
  6325     0ECD  082E               	movf	??_fputs+1,w
  6326     0ECE  00A5               	movwf	fputc@c+1
  6327     0ECF  082C               	movf	fputs@fp,w
  6328     0ED0  00A6               	movwf	fputc@fp
  6329     0ED1  3187  2716  318E   	fcall	_fputc
  6330     0ED4                     l2752:
  6331     0ED4  3001               	movlw	1
  6332     0ED5  0020               	movlb	0	; select bank0
  6333     0ED6  07B0               	addwf	fputs@i,f
  6334     0ED7  3000               	movlw	0
  6335     0ED8  3DB1               	addwfc	fputs@i+1,f
  6336     0ED9                     l2754:
  6337     0ED9  0830               	movf	fputs@i,w
  6338     0EDA  0732               	addwf	fputs@s,w
  6339     0EDB  00AD               	movwf	??_fputs
  6340     0EDC  082D               	movf	??_fputs,w
  6341     0EDD  0086               	movwf	6
  6342     0EDE  3001               	movlw	1	; select bank2/3
  6343     0EDF  0087               	movwf	7
  6344     0EE0  0801               	movf	1,w
  6345     0EE1  00AF               	movwf	fputs@c
  6346     0EE2  082F               	movf	fputs@c,w
  6347     0EE3  1D03               	btfss	3,2
  6348     0EE4  2EE6               	goto	u2411
  6349     0EE5  2EE7               	goto	u2410
  6350     0EE6                     u2411:
  6351     0EE6  2EC8               	goto	l2750
  6352     0EE7                     u2410:
  6353     0EE7                     l975:
  6354     0EE7  0008               	return
  6355     0EE8                     __end_of_fputs:
  6356                           
  6357                           	psect	text26
  6358     0716                     __ptext26:	
  6359 ;; *************** function _fputc *****************
  6360 ;; Defined at:
  6361 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputc.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  c               2    4[BANK0 ] int 
  6364 ;;  fp              1    6[BANK0 ] PTR struct _IO_FILE
  6365 ;;		 -> sprintf@f(11), 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  2    4[BANK0 ] int 
  6370 ;; Registers used:
  6371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6377 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6379 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6380 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6381 ;;Total ram usage:        8 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 4
  6384 ;; This function calls:
  6385 ;;		_putch
  6386 ;; This function is called by:
  6387 ;;		_pad
  6388 ;;		_vfpfcnvrt
  6389 ;;		_fputs
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393     0716                     _fputc:	
  6394                           ;psect for function _fputc
  6395                           
  6396     0716                     l2732:	
  6397                           ;incstack = 0
  6398                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6399                           
  6400     0716  0020               	movlb	0	; select bank0
  6401     0717  0826               	movf	fputc@fp,w
  6402     0718  1903               	btfsc	3,2
  6403     0719  2F1B               	goto	u2371
  6404     071A  2F1C               	goto	u2370
  6405     071B                     u2371:
  6406     071B  2F21               	goto	l2736
  6407     071C                     u2370:
  6408     071C                     l2734:
  6409     071C  0826               	movf	fputc@fp,w
  6410     071D  1D03               	btfss	3,2
  6411     071E  2F20               	goto	u2381
  6412     071F  2F21               	goto	u2380
  6413     0720                     u2381:
  6414     0720  2F26               	goto	l2738
  6415     0721                     u2380:
  6416     0721                     l2736:
  6417     0721  0824               	movf	fputc@c,w
  6418     0722  3187  27FF  3187   	fcall	_putch
  6419     0725  2F67               	goto	l967
  6420     0726                     l2738:
  6421     0726  0826               	movf	fputc@fp,w
  6422     0727  3E09               	addlw	9
  6423     0728  0086               	movwf	6
  6424     0729  0187               	clrf	7
  6425     072A  0016               	moviw fsr1++
  6426     072B  0401               	iorwf	1,w
  6427     072C  1903               	btfsc	3,2
  6428     072D  2F2F               	goto	u2391
  6429     072E  2F30               	goto	u2390
  6430     072F                     u2391:
  6431     072F  2F4E               	goto	l2742
  6432     0730                     u2390:
  6433     0730                     l2740:
  6434     0730  0826               	movf	fputc@fp,w
  6435     0731  3E09               	addlw	9
  6436     0732  0086               	movwf	6
  6437     0733  0187               	clrf	7
  6438     0734  3F40               	moviw [0]fsr1
  6439     0735  00A7               	movwf	??_fputc
  6440     0736  3F41               	moviw [1]fsr1
  6441     0737  00A8               	movwf	??_fputc+1
  6442     0738  0826               	movf	fputc@fp,w
  6443     0739  3E02               	addlw	2
  6444     073A  0086               	movwf	6
  6445     073B  0187               	clrf	7
  6446     073C  3F40               	moviw [0]fsr1
  6447     073D  00A9               	movwf	??_fputc+2
  6448     073E  3F41               	moviw [1]fsr1
  6449     073F  00AA               	movwf	??_fputc+3
  6450     0740  082A               	movf	??_fputc+3,w
  6451     0741  3A80               	xorlw	128
  6452     0742  00AB               	movwf	??_fputc+4
  6453     0743  0828               	movf	??_fputc+1,w
  6454     0744  3A80               	xorlw	128
  6455     0745  022B               	subwf	??_fputc+4,w
  6456     0746  1D03               	skipz
  6457     0747  2F4A               	goto	u2405
  6458     0748  0827               	movf	??_fputc,w
  6459     0749  0229               	subwf	??_fputc+2,w
  6460     074A                     u2405:
  6461     074A  1803               	skipnc
  6462     074B  2F4D               	goto	u2401
  6463     074C  2F4E               	goto	u2400
  6464     074D                     u2401:
  6465     074D  2F67               	goto	l967
  6466     074E                     u2400:
  6467     074E                     l2742:
  6468     074E  0020               	movlb	0	; select bank0
  6469     074F  0826               	movf	fputc@fp,w
  6470     0750  0086               	movwf	6
  6471     0751  0187               	clrf	7
  6472     0752  0826               	movf	fputc@fp,w
  6473     0753  3E02               	addlw	2
  6474     0754  0084               	movwf	4
  6475     0755  0185               	clrf	5
  6476     0756  0800               	movf	0,w
  6477     0757  0701               	addwf	1,w
  6478     0758  00A7               	movwf	??_fputc
  6479     0759  0827               	movf	??_fputc,w
  6480     075A  0086               	movwf	6
  6481     075B  0187               	clrf	7
  6482     075C  0824               	movf	fputc@c,w
  6483     075D  0081               	movwf	1
  6484     075E                     l2744:
  6485     075E  0826               	movf	fputc@fp,w
  6486     075F  3E02               	addlw	2
  6487     0760  0086               	movwf	6
  6488     0761  0187               	clrf	7
  6489     0762  3001               	movlw	1
  6490     0763  0781               	addwf	1,f
  6491     0764  3141               	addfsr 1,1
  6492     0765  1803               	skipnc
  6493     0766  0A81               	incf	1,f
  6494     0767                     l967:
  6495     0767  0008               	return
  6496     0768                     __end_of_fputc:
  6497                           
  6498                           	psect	text27
  6499     07FF                     __ptext27:	
  6500 ;; *************** function _putch *****************
  6501 ;; Defined at:
  6502 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/putch.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  c               1    wreg     unsigned char 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  c               1    0[COMMON] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6520 ;;Total ram usage:        0 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 3
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_fputc
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530     07FF                     _putch:	
  6531                           ;psect for function _putch
  6532                           
  6533     07FF                     l978:	
  6534                           ;incstack = 0
  6535                           ; Regs used in _putch: [wreg]
  6536                           
  6537     07FF  0008               	return
  6538     0800                     __end_of_putch:
  6539                           
  6540                           	psect	text28
  6541     0D58                     __ptext28:	
  6542 ;; *************** function _abs *****************
  6543 ;; Defined at:
  6544 ;;		line 1 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/abs.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  a               2   11[BANK0 ] int 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  2   11[BANK0 ] int 
  6551 ;; Registers used:
  6552 ;;		wreg, status,2, status,0
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6561 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6562 ;;Total ram usage:        4 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; Hardware stack levels required when called: 3
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_dtoa
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572     0D58                     _abs:	
  6573                           ;psect for function _abs
  6574                           
  6575     0D58                     l2868:	
  6576                           ;incstack = 0
  6577                           ; Regs used in _abs: [wreg+status,2+status,0]
  6578                           
  6579     0D58  0020               	movlb	0	; select bank0
  6580     0D59  1BAC               	btfsc	abs@a+1,7
  6581     0D5A  2D5C               	goto	u2691
  6582     0D5B  2D5D               	goto	u2690
  6583     0D5C                     u2691:
  6584     0D5C  2D5E               	goto	l2872
  6585     0D5D                     u2690:
  6586     0D5D                     l2870:
  6587     0D5D  2D69               	goto	l955
  6588     0D5E                     l2872:
  6589     0D5E  092B               	comf	abs@a,w
  6590     0D5F  00AD               	movwf	??_abs
  6591     0D60  092C               	comf	abs@a+1,w
  6592     0D61  00AE               	movwf	??_abs+1
  6593     0D62  0AAD               	incf	??_abs,f
  6594     0D63  1903               	skipnz
  6595     0D64  0AAE               	incf	??_abs+1,f
  6596     0D65  082D               	movf	??_abs,w
  6597     0D66  00AB               	movwf	?_abs
  6598     0D67  082E               	movf	??_abs+1,w
  6599     0D68  00AC               	movwf	?_abs+1
  6600     0D69                     l955:
  6601     0D69  0008               	return
  6602     0D6A                     __end_of_abs:
  6603                           
  6604                           	psect	text29
  6605     06C2                     __ptext29:	
  6606 ;; *************** function ___awmod *****************
  6607 ;; Defined at:
  6608 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/awmod.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  divisor         2    4[BANK0 ] int 
  6611 ;;  dividend        2    6[BANK0 ] int 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  sign            1   10[BANK0 ] unsigned char 
  6614 ;;  counter         1    9[BANK0 ] unsigned char 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  2    4[BANK0 ] int 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6624 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6625 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6626 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6627 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6628 ;;Total ram usage:        7 bytes
  6629 ;; Hardware stack levels used: 1
  6630 ;; Hardware stack levels required when called: 3
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_dtoa
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638     06C2                     ___awmod:	
  6639                           ;psect for function ___awmod
  6640                           
  6641     06C2                     l2814:	
  6642                           ;incstack = 0
  6643                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6644                           
  6645     06C2  0020               	movlb	0	; select bank0
  6646     06C3  01AA               	clrf	___awmod@sign
  6647     06C4                     l2816:
  6648     06C4  1FA7               	btfss	___awmod@dividend+1,7
  6649     06C5  2EC7               	goto	u2561
  6650     06C6  2EC8               	goto	u2560
  6651     06C7                     u2561:
  6652     06C7  2ECF               	goto	l2822
  6653     06C8                     u2560:
  6654     06C8                     l2818:
  6655     06C8  09A6               	comf	___awmod@dividend,f
  6656     06C9  09A7               	comf	___awmod@dividend+1,f
  6657     06CA  0AA6               	incf	___awmod@dividend,f
  6658     06CB  1903               	skipnz
  6659     06CC  0AA7               	incf	___awmod@dividend+1,f
  6660     06CD                     l2820:
  6661     06CD  01AA               	clrf	___awmod@sign
  6662     06CE  0AAA               	incf	___awmod@sign,f
  6663     06CF                     l2822:
  6664     06CF  1FA5               	btfss	___awmod@divisor+1,7
  6665     06D0  2ED2               	goto	u2571
  6666     06D1  2ED3               	goto	u2570
  6667     06D2                     u2571:
  6668     06D2  2ED8               	goto	l2826
  6669     06D3                     u2570:
  6670     06D3                     l2824:
  6671     06D3  09A4               	comf	___awmod@divisor,f
  6672     06D4  09A5               	comf	___awmod@divisor+1,f
  6673     06D5  0AA4               	incf	___awmod@divisor,f
  6674     06D6  1903               	skipnz
  6675     06D7  0AA5               	incf	___awmod@divisor+1,f
  6676     06D8                     l2826:
  6677     06D8  0824               	movf	___awmod@divisor,w
  6678     06D9  0425               	iorwf	___awmod@divisor+1,w
  6679     06DA  1903               	btfsc	3,2
  6680     06DB  2EDD               	goto	u2581
  6681     06DC  2EDE               	goto	u2580
  6682     06DD                     u2581:
  6683     06DD  2F07               	goto	l2844
  6684     06DE                     u2580:
  6685     06DE                     l2828:
  6686     06DE  01A9               	clrf	___awmod@counter
  6687     06DF  0AA9               	incf	___awmod@counter,f
  6688     06E0  2EEA               	goto	l2834
  6689     06E1                     l2830:
  6690     06E1  3001               	movlw	1
  6691     06E2                     u2595:
  6692     06E2  35A4               	lslf	___awmod@divisor,f
  6693     06E3  0DA5               	rlf	___awmod@divisor+1,f
  6694     06E4  0B89               	decfsz	9,f
  6695     06E5  2EE2               	goto	u2595
  6696     06E6                     l2832:
  6697     06E6  3001               	movlw	1
  6698     06E7  00A8               	movwf	??___awmod
  6699     06E8  0828               	movf	??___awmod,w
  6700     06E9  07A9               	addwf	___awmod@counter,f
  6701     06EA                     l2834:
  6702     06EA  1FA5               	btfss	___awmod@divisor+1,7
  6703     06EB  2EED               	goto	u2601
  6704     06EC  2EEE               	goto	u2600
  6705     06ED                     u2601:
  6706     06ED  2EE1               	goto	l2830
  6707     06EE                     u2600:
  6708     06EE                     l2836:
  6709     06EE  0825               	movf	___awmod@divisor+1,w
  6710     06EF  0227               	subwf	___awmod@dividend+1,w
  6711     06F0  1D03               	skipz
  6712     06F1  2EF4               	goto	u2615
  6713     06F2  0824               	movf	___awmod@divisor,w
  6714     06F3  0226               	subwf	___awmod@dividend,w
  6715     06F4                     u2615:
  6716     06F4  1C03               	skipc
  6717     06F5  2EF7               	goto	u2611
  6718     06F6  2EF8               	goto	u2610
  6719     06F7                     u2611:
  6720     06F7  2EFC               	goto	l2840
  6721     06F8                     u2610:
  6722     06F8                     l2838:
  6723     06F8  0824               	movf	___awmod@divisor,w
  6724     06F9  02A6               	subwf	___awmod@dividend,f
  6725     06FA  0825               	movf	___awmod@divisor+1,w
  6726     06FB  3BA7               	subwfb	___awmod@dividend+1,f
  6727     06FC                     l2840:
  6728     06FC  3001               	movlw	1
  6729     06FD                     u2625:
  6730     06FD  36A5               	lsrf	___awmod@divisor+1,f
  6731     06FE  0CA4               	rrf	___awmod@divisor,f
  6732     06FF  0B89               	decfsz	9,f
  6733     0700  2EFD               	goto	u2625
  6734     0701                     l2842:
  6735     0701  3001               	movlw	1
  6736     0702  02A9               	subwf	___awmod@counter,f
  6737     0703  1D03               	btfss	3,2
  6738     0704  2F06               	goto	u2631
  6739     0705  2F07               	goto	u2630
  6740     0706                     u2631:
  6741     0706  2EEE               	goto	l2836
  6742     0707                     u2630:
  6743     0707                     l2844:
  6744     0707  082A               	movf	___awmod@sign,w
  6745     0708  1903               	btfsc	3,2
  6746     0709  2F0B               	goto	u2641
  6747     070A  2F0C               	goto	u2640
  6748     070B                     u2641:
  6749     070B  2F11               	goto	l2848
  6750     070C                     u2640:
  6751     070C                     l2846:
  6752     070C  09A6               	comf	___awmod@dividend,f
  6753     070D  09A7               	comf	___awmod@dividend+1,f
  6754     070E  0AA6               	incf	___awmod@dividend,f
  6755     070F  1903               	skipnz
  6756     0710  0AA7               	incf	___awmod@dividend+1,f
  6757     0711                     l2848:
  6758     0711  0827               	movf	___awmod@dividend+1,w
  6759     0712  00A5               	movwf	?___awmod+1
  6760     0713  0826               	movf	___awmod@dividend,w
  6761     0714  00A4               	movwf	?___awmod
  6762     0715                     l557:
  6763     0715  0008               	return
  6764     0716                     __end_of___awmod:
  6765                           
  6766                           	psect	text30
  6767     0607                     __ptext30:	
  6768 ;; *************** function ___awdiv *****************
  6769 ;; Defined at:
  6770 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/awdiv.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  divisor         2    4[BANK0 ] int 
  6773 ;;  dividend        2    6[BANK0 ] int 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  quotient        2   11[BANK0 ] int 
  6776 ;;  sign            1   10[BANK0 ] unsigned char 
  6777 ;;  counter         1    9[BANK0 ] unsigned char 
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  2    4[BANK0 ] int 
  6780 ;; Registers used:
  6781 ;;		wreg, status,2, status,0
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6787 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6788 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6789 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6790 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6791 ;;Total ram usage:        9 bytes
  6792 ;; Hardware stack levels used: 1
  6793 ;; Hardware stack levels required when called: 3
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		_dtoa
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801     0607                     ___awdiv:	
  6802                           ;psect for function ___awdiv
  6803                           
  6804     0607                     l2770:	
  6805                           ;incstack = 0
  6806                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6807                           
  6808     0607  0020               	movlb	0	; select bank0
  6809     0608  01AA               	clrf	___awdiv@sign
  6810     0609                     l2772:
  6811     0609  1FA5               	btfss	___awdiv@divisor+1,7
  6812     060A  2E0C               	goto	u2461
  6813     060B  2E0D               	goto	u2460
  6814     060C                     u2461:
  6815     060C  2E14               	goto	l2778
  6816     060D                     u2460:
  6817     060D                     l2774:
  6818     060D  09A4               	comf	___awdiv@divisor,f
  6819     060E  09A5               	comf	___awdiv@divisor+1,f
  6820     060F  0AA4               	incf	___awdiv@divisor,f
  6821     0610  1903               	skipnz
  6822     0611  0AA5               	incf	___awdiv@divisor+1,f
  6823     0612                     l2776:
  6824     0612  01AA               	clrf	___awdiv@sign
  6825     0613  0AAA               	incf	___awdiv@sign,f
  6826     0614                     l2778:
  6827     0614  1FA7               	btfss	___awdiv@dividend+1,7
  6828     0615  2E17               	goto	u2471
  6829     0616  2E18               	goto	u2470
  6830     0617                     u2471:
  6831     0617  2E21               	goto	l2784
  6832     0618                     u2470:
  6833     0618                     l2780:
  6834     0618  09A6               	comf	___awdiv@dividend,f
  6835     0619  09A7               	comf	___awdiv@dividend+1,f
  6836     061A  0AA6               	incf	___awdiv@dividend,f
  6837     061B  1903               	skipnz
  6838     061C  0AA7               	incf	___awdiv@dividend+1,f
  6839     061D                     l2782:
  6840     061D  3001               	movlw	1
  6841     061E  00A8               	movwf	??___awdiv
  6842     061F  0828               	movf	??___awdiv,w
  6843     0620  06AA               	xorwf	___awdiv@sign,f
  6844     0621                     l2784:
  6845     0621  01AB               	clrf	___awdiv@quotient
  6846     0622  01AC               	clrf	___awdiv@quotient+1
  6847     0623                     l2786:
  6848     0623  0824               	movf	___awdiv@divisor,w
  6849     0624  0425               	iorwf	___awdiv@divisor+1,w
  6850     0625  1903               	btfsc	3,2
  6851     0626  2E28               	goto	u2481
  6852     0627  2E29               	goto	u2480
  6853     0628                     u2481:
  6854     0628  2E58               	goto	l2806
  6855     0629                     u2480:
  6856     0629                     l2788:
  6857     0629  01A9               	clrf	___awdiv@counter
  6858     062A  0AA9               	incf	___awdiv@counter,f
  6859     062B  2E35               	goto	l2794
  6860     062C                     l2790:
  6861     062C  3001               	movlw	1
  6862     062D                     u2495:
  6863     062D  35A4               	lslf	___awdiv@divisor,f
  6864     062E  0DA5               	rlf	___awdiv@divisor+1,f
  6865     062F  0B89               	decfsz	9,f
  6866     0630  2E2D               	goto	u2495
  6867     0631                     l2792:
  6868     0631  3001               	movlw	1
  6869     0632  00A8               	movwf	??___awdiv
  6870     0633  0828               	movf	??___awdiv,w
  6871     0634  07A9               	addwf	___awdiv@counter,f
  6872     0635                     l2794:
  6873     0635  1FA5               	btfss	___awdiv@divisor+1,7
  6874     0636  2E38               	goto	u2501
  6875     0637  2E39               	goto	u2500
  6876     0638                     u2501:
  6877     0638  2E2C               	goto	l2790
  6878     0639                     u2500:
  6879     0639                     l2796:
  6880     0639  3001               	movlw	1
  6881     063A                     u2515:
  6882     063A  35AB               	lslf	___awdiv@quotient,f
  6883     063B  0DAC               	rlf	___awdiv@quotient+1,f
  6884     063C  0B89               	decfsz	9,f
  6885     063D  2E3A               	goto	u2515
  6886     063E  0825               	movf	___awdiv@divisor+1,w
  6887     063F  0227               	subwf	___awdiv@dividend+1,w
  6888     0640  1D03               	skipz
  6889     0641  2E44               	goto	u2525
  6890     0642  0824               	movf	___awdiv@divisor,w
  6891     0643  0226               	subwf	___awdiv@dividend,w
  6892     0644                     u2525:
  6893     0644  1C03               	skipc
  6894     0645  2E47               	goto	u2521
  6895     0646  2E48               	goto	u2520
  6896     0647                     u2521:
  6897     0647  2E4D               	goto	l2802
  6898     0648                     u2520:
  6899     0648                     l2798:
  6900     0648  0824               	movf	___awdiv@divisor,w
  6901     0649  02A6               	subwf	___awdiv@dividend,f
  6902     064A  0825               	movf	___awdiv@divisor+1,w
  6903     064B  3BA7               	subwfb	___awdiv@dividend+1,f
  6904     064C                     l2800:
  6905     064C  142B               	bsf	___awdiv@quotient,0
  6906     064D                     l2802:
  6907     064D  3001               	movlw	1
  6908     064E                     u2535:
  6909     064E  36A5               	lsrf	___awdiv@divisor+1,f
  6910     064F  0CA4               	rrf	___awdiv@divisor,f
  6911     0650  0B89               	decfsz	9,f
  6912     0651  2E4E               	goto	u2535
  6913     0652                     l2804:
  6914     0652  3001               	movlw	1
  6915     0653  02A9               	subwf	___awdiv@counter,f
  6916     0654  1D03               	btfss	3,2
  6917     0655  2E57               	goto	u2541
  6918     0656  2E58               	goto	u2540
  6919     0657                     u2541:
  6920     0657  2E39               	goto	l2796
  6921     0658                     u2540:
  6922     0658                     l2806:
  6923     0658  082A               	movf	___awdiv@sign,w
  6924     0659  1903               	btfsc	3,2
  6925     065A  2E5C               	goto	u2551
  6926     065B  2E5D               	goto	u2550
  6927     065C                     u2551:
  6928     065C  2E62               	goto	l2810
  6929     065D                     u2550:
  6930     065D                     l2808:
  6931     065D  09AB               	comf	___awdiv@quotient,f
  6932     065E  09AC               	comf	___awdiv@quotient+1,f
  6933     065F  0AAB               	incf	___awdiv@quotient,f
  6934     0660  1903               	skipnz
  6935     0661  0AAC               	incf	___awdiv@quotient+1,f
  6936     0662                     l2810:
  6937     0662  082C               	movf	___awdiv@quotient+1,w
  6938     0663  00A5               	movwf	?___awdiv+1
  6939     0664  082B               	movf	___awdiv@quotient,w
  6940     0665  00A4               	movwf	?___awdiv
  6941     0666                     l544:
  6942     0666  0008               	return
  6943     0667                     __end_of___awdiv:
  6944                           
  6945                           	psect	text31
  6946     0DF0                     __ptext31:	
  6947 ;; *************** function _setup_address *****************
  6948 ;; Defined at:
  6949 ;;		line 267 in file "main.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  addr            2    4[BANK0 ] unsigned short 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  hi              1    6[BANK0 ] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  1    wreg      void 
  6956 ;; Registers used:
  6957 ;;		wreg, status,2
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6963 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6966 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6967 ;;Total ram usage:        3 bytes
  6968 ;; Hardware stack levels used: 1
  6969 ;; Hardware stack levels required when called: 3
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_do_blank
  6974 ;;		_do_read
  6975 ;;		_do_write
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979     0DF0                     _setup_address:	
  6980                           ;psect for function _setup_address
  6981                           
  6982     0DF0                     l3128:	
  6983                           ;incstack = 0
  6984                           ; Regs used in _setup_address: [wreg+status,2]
  6985                           
  6986                           
  6987                           ;main.c: 267: void setup_address(uint16_t addr);main.c: 268: {;main.c: 270:         TRIS
      +                          D = 0x00;
  6988     0DF0  0021               	movlb	1	; select bank1
  6989     0DF1  018F               	clrf	15	;volatile
  6990     0DF2                     l3130:
  6991                           
  6992                           ;main.c: 273:         PORTBbits.RB2 = 1;
  6993     0DF2  0020               	movlb	0	; select bank0
  6994     0DF3  150D               	bsf	13,2	;volatile
  6995     0DF4                     l3132:
  6996                           
  6997                           ;main.c: 276:         uint8_t hi = addr >> 8;
  6998     0DF4  0825               	movf	setup_address@addr+1,w
  6999     0DF5  00A6               	movwf	setup_address@hi
  7000                           
  7001                           ;main.c: 277:         LATD = addr & 0x00ff;
  7002     0DF6  0824               	movf	setup_address@addr,w
  7003     0DF7  0022               	movlb	2	; select bank2
  7004     0DF8  008F               	movwf	15	;volatile
  7005                           
  7006                           ;main.c: 278:         LATC = hi;
  7007     0DF9  0020               	movlb	0	; select bank0
  7008     0DFA  0826               	movf	setup_address@hi,w
  7009     0DFB  0022               	movlb	2	; select bank2
  7010     0DFC  008E               	movwf	14	;volatile
  7011                           
  7012                           ;main.c: 279:         _delay((unsigned long)((2)*(20000000/4000000.0)));
  7013     0DFD  3003               	movlw	3
  7014     0DFE                     u3537:
  7015     0DFE  0B89               	decfsz	9,f
  7016     0DFF  2DFE               	goto	u3537
  7017     0E00  0000               	nop
  7018     0E01                     l3134:
  7019                           
  7020                           ;main.c: 282:         PORTBbits.RB0 = 1;
  7021     0E01  0020               	movlb	0	; select bank0
  7022     0E02  140D               	bsf	13,0	;volatile
  7023     0E03                     l3136:
  7024                           
  7025                           ;main.c: 283:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  7026     0E03  3200               	nop2	;2 cycle nop
  7027     0E04  3200               	nop2	;2 cycle nop
  7028     0E05  0000               	nop
  7029     0E06                     l3138:
  7030                           
  7031                           ;main.c: 285:         PORTBbits.RB0 = 0;
  7032     0E06  0020               	movlb	0	; select bank0
  7033     0E07  100D               	bcf	13,0	;volatile
  7034     0E08                     l3140:
  7035                           
  7036                           ;main.c: 286:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  7037     0E08  3200               	nop2	;2 cycle nop
  7038     0E09  3200               	nop2	;2 cycle nop
  7039     0E0A  0000               	nop
  7040     0E0B                     l116:
  7041     0E0B  0008               	return
  7042     0E0C                     __end_of_setup_address:
  7043                           
  7044                           	psect	text32
  7045     0DBF                     __ptext32:	
  7046 ;; *************** function _read_port *****************
  7047 ;; Defined at:
  7048 ;;		line 292 in file "main.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;		None
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  data            1    4[BANK0 ] unsigned char 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1    wreg      unsigned char 
  7055 ;; Registers used:
  7056 ;;		wreg, status,2
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7063 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7065 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7066 ;;Total ram usage:        1 bytes
  7067 ;; Hardware stack levels used: 1
  7068 ;; Hardware stack levels required when called: 3
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_do_blank
  7073 ;;		_do_read
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077     0DBF                     _read_port:	
  7078                           ;psect for function _read_port
  7079                           
  7080     0DBF                     l3142:	
  7081                           ;incstack = 0
  7082                           ; Regs used in _read_port: [wreg+status,2]
  7083                           
  7084                           
  7085                           ;main.c: 295:     TRISD = 0xFF;
  7086     0DBF  30FF               	movlw	255
  7087     0DC0  0021               	movlb	1	; select bank1
  7088     0DC1  008F               	movwf	15	;volatile
  7089     0DC2                     l3144:
  7090                           
  7091                           ;main.c: 296:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  7092     0DC2  3200               	nop2	;2 cycle nop
  7093     0DC3  3200               	nop2	;2 cycle nop
  7094     0DC4  0000               	nop
  7095     0DC5                     l3146:
  7096                           
  7097                           ;main.c: 299:     PORTBbits.RB2 = 0;
  7098     0DC5  0020               	movlb	0	; select bank0
  7099     0DC6  110D               	bcf	13,2	;volatile
  7100     0DC7                     l3148:
  7101                           
  7102                           ;main.c: 300:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  7103     0DC7  3200               	nop2	;2 cycle nop
  7104     0DC8  3200               	nop2	;2 cycle nop
  7105     0DC9  0000               	nop
  7106                           
  7107                           ;main.c: 303:     uint8_t data = PORTD;
  7108     0DCA  0020               	movlb	0	; select bank0
  7109     0DCB  080F               	movf	15,w	;volatile
  7110     0DCC  00A4               	movwf	read_port@data
  7111     0DCD                     l3150:
  7112                           
  7113                           ;main.c: 306:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  7114     0DCD  3200               	nop2	;2 cycle nop
  7115     0DCE  3200               	nop2	;2 cycle nop
  7116     0DCF  0000               	nop
  7117     0DD0                     l3152:
  7118                           
  7119                           ;main.c: 307:     PORTBbits.RB2 = 1;
  7120     0DD0  0020               	movlb	0	; select bank0
  7121     0DD1  150D               	bsf	13,2	;volatile
  7122     0DD2                     l3154:
  7123                           
  7124                           ;main.c: 311:     TRISD = 0x00;
  7125     0DD2  0021               	movlb	1	; select bank1
  7126     0DD3  018F               	clrf	15	;volatile
  7127     0DD4                     l3156:
  7128                           
  7129                           ;main.c: 313:     return data;
  7130     0DD4  0020               	movlb	0	; select bank0
  7131     0DD5  0824               	movf	read_port@data,w
  7132     0DD6                     l119:
  7133     0DD6  0008               	return
  7134     0DD7                     __end_of_read_port:
  7135                           
  7136                           	psect	text33
  7137     0DD7                     __ptext33:	
  7138 ;; *************** function _clear *****************
  7139 ;; Defined at:
  7140 ;;		line 59 in file "main.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;		None
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      void 
  7147 ;; Registers used:
  7148 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7158 ;;Total ram usage:        0 bytes
  7159 ;; Hardware stack levels used: 1
  7160 ;; Hardware stack levels required when called: 4
  7161 ;; This function calls:
  7162 ;;		_memset
  7163 ;; This function is called by:
  7164 ;;		_main
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168     0DD7                     _clear:	
  7169                           ;psect for function _clear
  7170                           
  7171     0DD7                     l3266:	
  7172                           ;incstack = 0
  7173                           ; Regs used in _clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7174                           
  7175                           
  7176                           ;main.c: 61:     memset(queue, 0x00, 1024);
  7177     0DD7  30F0               	movlw	240
  7178     0DD8  0020               	movlb	0	; select bank0
  7179     0DD9  00A4               	movwf	memset@dest
  7180     0DDA  3023               	movlw	35
  7181     0DDB  00A5               	movwf	memset@dest+1
  7182     0DDC  3000               	movlw	0
  7183     0DDD  00A6               	movwf	memset@c
  7184     0DDE  00A7               	movwf	memset@c+1
  7185     0DDF  3000               	movlw	0
  7186     0DE0  00A8               	movwf	memset@n
  7187     0DE1  3004               	movlw	4
  7188     0DE2  00A9               	movwf	memset@n+1
  7189     0DE3  318E  2628  318D   	fcall	_memset
  7190     0DE6                     l3268:
  7191                           
  7192                           ;main.c: 62:     head = 0;
  7193     0DE6  01FC               	clrf	_head
  7194     0DE7  01FD               	clrf	_head+1
  7195     0DE8                     l3270:
  7196                           
  7197                           ;main.c: 63:     tail = 1024 -1;
  7198     0DE8  30FF               	movlw	255
  7199     0DE9  0020               	movlb	0	; select bank0
  7200     0DEA  00E7               	movwf	_tail
  7201     0DEB  3003               	movlw	3
  7202     0DEC  00E8               	movwf	_tail+1
  7203     0DED                     l3272:
  7204                           
  7205                           ;main.c: 64:     cmd_active = 0;
  7206     0DED  0021               	movlb	1	; select bank1
  7207     0DEE  01ED               	clrf	_cmd_active^(0+128)
  7208     0DEF                     l68:
  7209     0DEF  0008               	return
  7210     0DF0                     __end_of_clear:
  7211                           
  7212                           	psect	text34
  7213     0E28                     __ptext34:	
  7214 ;; *************** function _memset *****************
  7215 ;; Defined at:
  7216 ;;		line 3 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/memset.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;  dest            2    4[BANK0 ] PTR void 
  7219 ;;		 -> queue(1024), 
  7220 ;;  c               2    6[BANK0 ] int 
  7221 ;;  n               2    8[BANK0 ] unsigned int 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  p               2   10[BANK0 ] PTR unsigned char 
  7224 ;;		 -> queue(1024), 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  2    4[BANK0 ] PTR void 
  7227 ;; Registers used:
  7228 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7234 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7237 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7238 ;;Total ram usage:        8 bytes
  7239 ;; Hardware stack levels used: 1
  7240 ;; Hardware stack levels required when called: 3
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_clear
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248     0E28                     _memset:	
  7249                           ;psect for function _memset
  7250                           
  7251     0E28                     l3072:	
  7252                           ;incstack = 0
  7253                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7254                           
  7255     0E28  0020               	movlb	0	; select bank0
  7256     0E29  0825               	movf	memset@dest+1,w
  7257     0E2A  00AB               	movwf	memset@p+1
  7258     0E2B  0824               	movf	memset@dest,w
  7259     0E2C  00AA               	movwf	memset@p
  7260     0E2D  2E38               	goto	l3078
  7261     0E2E                     l3074:
  7262     0E2E  082A               	movf	memset@p,w
  7263     0E2F  0086               	movwf	6
  7264     0E30  082B               	movf	memset@p+1,w
  7265     0E31  0087               	movwf	7
  7266     0E32  0826               	movf	memset@c,w
  7267     0E33  0081               	movwf	1
  7268     0E34                     l3076:
  7269     0E34  3001               	movlw	1
  7270     0E35  07AA               	addwf	memset@p,f
  7271     0E36  3000               	movlw	0
  7272     0E37  3DAB               	addwfc	memset@p+1,f
  7273     0E38                     l3078:
  7274     0E38  3001               	movlw	1
  7275     0E39  02A8               	subwf	memset@n,f
  7276     0E3A  3000               	movlw	0
  7277     0E3B  3BA9               	subwfb	memset@n+1,f
  7278     0E3C  0A28               	incf	memset@n,w
  7279     0E3D  1D03               	skipz
  7280     0E3E  2E43               	goto	u2971
  7281     0E3F  0A29               	incf	memset@n+1,w
  7282     0E40  1D03               	btfss	3,2
  7283     0E41  2E43               	goto	u2971
  7284     0E42  2E44               	goto	u2970
  7285     0E43                     u2971:
  7286     0E43  2E2E               	goto	l3074
  7287     0E44                     u2970:
  7288     0E44                     l853:
  7289     0E44  0008               	return
  7290     0E45                     __end_of_memset:
  7291                           
  7292                           	psect	intentry
  7293     0004                     __pintentry:	
  7294 ;; *************** function _isr *****************
  7295 ;; Defined at:
  7296 ;;		line 237 in file "main.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  n               2    0[BANK0 ] short 
  7301 ;;  c               1    3[BANK0 ] unsigned char 
  7302 ;;  ok              1    2[BANK0 ] _Bool 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      void 
  7305 ;; Registers used:
  7306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7313 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7315 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7316 ;;Total ram usage:        5 bytes
  7317 ;; Hardware stack levels used: 1
  7318 ;; Hardware stack levels required when called: 2
  7319 ;; This function calls:
  7320 ;;		_first
  7321 ;;		_push
  7322 ;;		_size
  7323 ;;		_uart_getc
  7324 ;; This function is called by:
  7325 ;;		Interrupt level 1
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329     0004                     _isr:
  7330                           
  7331                           ;incstack = 0
  7332     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7333                           
  7334                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7335     0005  3180               	pagesel	$
  7336     0006                     i1l2672:
  7337                           
  7338                           ;main.c: 239:         char c = 0;
  7339     0006  0020               	movlb	0	; select bank0
  7340     0007  01A3               	clrf	isr@c
  7341     0008                     i1l2674:
  7342                           
  7343                           ;main.c: 242:         INTCONbits.GIE = 0;
  7344     0008  138B               	bcf	11,7	;volatile
  7345     0009                     i1l2676:
  7346                           
  7347                           ;main.c: 243:         PIE1bits.RCIE=0;
  7348     0009  0021               	movlb	1	; select bank1
  7349     000A  1291               	bcf	17,5	;volatile
  7350     000B                     i1l2678:
  7351                           
  7352                           ;main.c: 246:         _Bool ok = uart_getc(&c);
  7353     000B  3023               	movlw	(low (isr@c| 0))& (0+255)
  7354     000C  318E  2683  3180   	fcall	_uart_getc
  7355     000F  0020               	movlb	0	; select bank0
  7356     0010  00A2               	movwf	isr@ok
  7357     0011                     i1l2680:
  7358                           
  7359                           ;main.c: 247:         if (ok) {
  7360     0011  0822               	movf	isr@ok,w
  7361     0012  1903               	btfsc	3,2
  7362     0013  2815               	goto	u230_21
  7363     0014  2816               	goto	u230_20
  7364     0015                     u230_21:
  7365     0015  283B               	goto	i1l111
  7366     0016                     u230_20:
  7367     0016                     i1l2682:
  7368                           
  7369                           ;main.c: 249:             push(c);
  7370     0016  0823               	movf	isr@c,w
  7371     0017  3184  245D  3180   	fcall	_push
  7372     001A                     i1l2684:
  7373                           
  7374                           ;main.c: 252:             int16_t n = size();
  7375     001A  318F  270D  3180   	fcall	_size
  7376     001D  0873               	movf	?_size+1,w
  7377     001E  0020               	movlb	0	; select bank0
  7378     001F  00A1               	movwf	isr@n+1
  7379     0020  0872               	movf	?_size,w
  7380     0021  00A0               	movwf	isr@n
  7381     0022                     i1l2686:
  7382                           
  7383                           ;main.c: 253:             if ( (first() == '$') && n > 1) {
  7384     0022  318D  252E  3180   	fcall	_first
  7385     0025  3A24               	xorlw	36
  7386     0026  1D03               	skipz
  7387     0027  2829               	goto	u231_21
  7388     0028  282A               	goto	u231_20
  7389     0029                     u231_21:
  7390     0029  283B               	goto	i1l111
  7391     002A                     u231_20:
  7392     002A                     i1l2688:
  7393     002A  0020               	movlb	0	; select bank0
  7394     002B  0821               	movf	isr@n+1,w
  7395     002C  3A80               	xorlw	128
  7396     002D  00FB               	movwf	??_isr
  7397     002E  3080               	movlw	128
  7398     002F  027B               	subwf	??_isr,w
  7399     0030  1D03               	skipz
  7400     0031  2834               	goto	u232_25
  7401     0032  3002               	movlw	2
  7402     0033  0220               	subwf	isr@n,w
  7403     0034                     u232_25:
  7404     0034  1C03               	skipc
  7405     0035  2837               	goto	u232_21
  7406     0036  2838               	goto	u232_20
  7407     0037                     u232_21:
  7408     0037  283B               	goto	i1l111
  7409     0038                     u232_20:
  7410     0038                     i1l2690:
  7411                           
  7412                           ;main.c: 255:                 cmd_active = 1;
  7413     0038  0021               	movlb	1	; select bank1
  7414     0039  01ED               	clrf	_cmd_active^(0+128)
  7415     003A  0AED               	incf	_cmd_active^(0+128),f
  7416     003B                     i1l111:	
  7417                           ;main.c: 257:         }
  7418                           
  7419                           
  7420                           ;main.c: 260:         PIE1bits.RCIE=1;
  7421     003B  0021               	movlb	1	; select bank1
  7422     003C  1691               	bsf	17,5	;volatile
  7423                           
  7424                           ;main.c: 261:         INTCONbits.GIE = 1;
  7425     003D  178B               	bsf	11,7	;volatile
  7426     003E                     i1l113:
  7427     003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7428     003F  0009               	retfie
  7429     0040                     __end_of_isr:
  7430                           
  7431                           	psect	text36
  7432     0E83                     __ptext36:	
  7433 ;; *************** function _uart_getc *****************
  7434 ;; Defined at:
  7435 ;;		line 134 in file "uart.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  c               1    wreg     PTR unsigned char 
  7438 ;;		 -> isr@c(1), 
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;  c               1    0[COMMON] PTR unsigned char 
  7441 ;;		 -> isr@c(1), 
  7442 ;;  er              1    0        unsigned char 
  7443 ;;  ok              1    1[COMMON] _Bool 
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  1    wreg      _Bool 
  7446 ;; Registers used:
  7447 ;;		wreg, fsr1l, fsr1h, status,2
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7457 ;;Total ram usage:        2 bytes
  7458 ;; Hardware stack levels used: 1
  7459 ;; This function calls:
  7460 ;;		Nothing
  7461 ;; This function is called by:
  7462 ;;		_isr
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466     0E83                     _uart_getc:	
  7467                           ;psect for function _uart_getc
  7468                           
  7469                           
  7470                           ;incstack = 0
  7471                           ; Regs used in _uart_getc: [wreg+fsr1l+fsr1h+status,2]
  7472                           ;uart_getc@c stored from wreg
  7473     0E83  00F0               	movwf	uart_getc@c
  7474     0E84                     i1l2484:
  7475                           
  7476                           ;uart.c: 134: _Bool uart_getc(char *c);uart.c: 135: {;uart.c: 137:     _Bool ok = 0;
  7477     0E84  01F1               	clrf	uart_getc@ok
  7478     0E85                     i1l2486:
  7479                           
  7480                           ;uart.c: 140:     if (RCSTAbits.FERR) {
  7481     0E85  0023               	movlb	3	; select bank3
  7482     0E86  1D1D               	btfss	29,2	;volatile
  7483     0E87  2E89               	goto	u205_21
  7484     0E88  2E8A               	goto	u205_20
  7485     0E89                     u205_21:
  7486     0E89  2E8C               	goto	i1l215
  7487     0E8A                     u205_20:
  7488     0E8A                     i1l2488:
  7489     0E8A  0819               	movf	25,w	;volatile
  7490                           
  7491                           ;uart.c: 142:     }
  7492     0E8B  2EA1               	goto	i1l2496
  7493     0E8C                     i1l215:	
  7494                           ;uart.c: 143:     else if (RCSTAbits.OERR) {
  7495                           
  7496     0E8C  1C9D               	btfss	29,1	;volatile
  7497     0E8D  2E8F               	goto	u206_21
  7498     0E8E  2E90               	goto	u206_20
  7499     0E8F                     u206_21:
  7500     0E8F  2E93               	goto	i1l217
  7501     0E90                     u206_20:
  7502     0E90                     i1l2490:
  7503                           
  7504                           ;uart.c: 144:         RCSTAbits.CREN = 0;
  7505     0E90  121D               	bcf	29,4	;volatile
  7506                           
  7507                           ;uart.c: 145:         RCSTAbits.CREN = 1;
  7508     0E91  161D               	bsf	29,4	;volatile
  7509                           
  7510                           ;uart.c: 146:     }
  7511     0E92  2EA1               	goto	i1l2496
  7512     0E93                     i1l217:	
  7513                           ;uart.c: 147:     else {
  7514                           
  7515                           
  7516                           ;uart.c: 148:         if (PIR1bits.RCIF) {
  7517     0E93  0020               	movlb	0	; select bank0
  7518     0E94  1E91               	btfss	17,5	;volatile
  7519     0E95  2E97               	goto	u207_21
  7520     0E96  2E98               	goto	u207_20
  7521     0E97                     u207_21:
  7522     0E97  2EA1               	goto	i1l2496
  7523     0E98                     u207_20:
  7524     0E98                     i1l2492:
  7525                           
  7526                           ;uart.c: 149:             *c = RCREG & 0x7f;
  7527     0E98  0870               	movf	uart_getc@c,w
  7528     0E99  0086               	movwf	6
  7529     0E9A  0187               	clrf	7
  7530     0E9B  0023               	movlb	3	; select bank3
  7531     0E9C  0819               	movf	25,w	;volatile
  7532     0E9D  397F               	andlw	127
  7533     0E9E  0081               	movwf	1
  7534     0E9F                     i1l2494:
  7535                           
  7536                           ;uart.c: 150:             ok = 1;
  7537     0E9F  01F1               	clrf	uart_getc@ok
  7538     0EA0  0AF1               	incf	uart_getc@ok,f
  7539     0EA1                     i1l2496:
  7540                           
  7541                           ;uart.c: 153:     return ok;
  7542     0EA1  0871               	movf	uart_getc@ok,w
  7543     0EA2                     i1l220:
  7544     0EA2  0008               	return
  7545     0EA3                     __end_of_uart_getc:
  7546                           
  7547                           	psect	text37
  7548     0F0D                     __ptext37:	
  7549 ;; *************** function _size *****************
  7550 ;; Defined at:
  7551 ;;		line 80 in file "main.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;		None
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  s               2    5[COMMON] short 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  2    2[COMMON] short 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0, pclath, cstack
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7568 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7569 ;;Total ram usage:        5 bytes
  7570 ;; Hardware stack levels used: 1
  7571 ;; Hardware stack levels required when called: 1
  7572 ;; This function calls:
  7573 ;;		_setCTS
  7574 ;;		i1_addone
  7575 ;; This function is called by:
  7576 ;;		_isr
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580     0F0D                     _size:	
  7581                           ;psect for function _size
  7582                           
  7583     0F0D                     i1l2410:	
  7584                           ;incstack = 0
  7585                           ; Regs used in _size: [wreg+status,2+status,0+pclath+cstack]
  7586                           
  7587                           
  7588                           ;main.c: 82:     int16_t s = addone(tail) - head;
  7589     0F0D  0020               	movlb	0	; select bank0
  7590     0F0E  0868               	movf	_tail+1,w
  7591     0F0F  00F1               	movwf	i1addone@i+1
  7592     0F10  0867               	movf	_tail,w
  7593     0F11  00F0               	movwf	i1addone@i
  7594     0F12  318D  2546  318F   	fcall	i1_addone
  7595     0F15  087C               	movf	_head,w
  7596     0F16  0270               	subwf	?i1_addone,w
  7597     0F17  00F5               	movwf	size@s
  7598     0F18  087D               	movf	_head+1,w
  7599     0F19  3B71               	subwfb	?i1_addone+1,w
  7600     0F1A  00F6               	movwf	size@s+1
  7601     0F1B                     i1l2412:
  7602                           
  7603                           ;main.c: 83:     if (s > 1024 -16) {
  7604     0F1B  0876               	movf	size@s+1,w
  7605     0F1C  3A80               	xorlw	128
  7606     0F1D  00F4               	movwf	??_size
  7607     0F1E  3083               	movlw	131
  7608     0F1F  0274               	subwf	??_size,w
  7609     0F20  1D03               	skipz
  7610     0F21  2F24               	goto	u202_25
  7611     0F22  30F1               	movlw	241
  7612     0F23  0275               	subwf	size@s,w
  7613     0F24                     u202_25:
  7614     0F24  1C03               	skipc
  7615     0F25  2F27               	goto	u202_21
  7616     0F26  2F28               	goto	u202_20
  7617     0F27                     u202_21:
  7618     0F27  2F2D               	goto	i1l2416
  7619     0F28                     u202_20:
  7620     0F28                     i1l2414:
  7621                           
  7622                           ;main.c: 84:         setCTS(1);
  7623     0F28  3001               	movlw	1
  7624     0F29  3187  27F5  318F   	fcall	_setCTS
  7625                           
  7626                           ;main.c: 85:     }
  7627     0F2C  2F31               	goto	i1l2418
  7628     0F2D                     i1l2416:
  7629                           
  7630                           ;main.c: 87:         setCTS(0);
  7631     0F2D  3000               	movlw	0
  7632     0F2E  3187  27F5  318F   	fcall	_setCTS
  7633     0F31                     i1l2418:
  7634                           
  7635                           ;main.c: 89:     return s;
  7636     0F31  0876               	movf	size@s+1,w
  7637     0F32  00F3               	movwf	?_size+1
  7638     0F33  0875               	movf	size@s,w
  7639     0F34  00F2               	movwf	?_size
  7640     0F35                     i1l77:
  7641     0F35  0008               	return
  7642     0F36                     __end_of_size:
  7643                           
  7644                           	psect	text38
  7645     045D                     __ptext38:	
  7646 ;; *************** function _push *****************
  7647 ;; Defined at:
  7648 ;;		line 110 in file "main.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  c               1    wreg     unsigned char 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  c               1   10[COMMON] unsigned char 
  7653 ;;  s               2    6[COMMON] short 
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  1    wreg      void 
  7656 ;; Registers used:
  7657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7664 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7665 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7666 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7667 ;;Total ram usage:        9 bytes
  7668 ;; Hardware stack levels used: 1
  7669 ;; Hardware stack levels required when called: 1
  7670 ;; This function calls:
  7671 ;;		_setCTS
  7672 ;;		i1_addone
  7673 ;; This function is called by:
  7674 ;;		_isr
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678     045D                     _push:	
  7679                           ;psect for function _push
  7680                           
  7681                           
  7682                           ;incstack = 0
  7683                           ; Regs used in _push: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7684                           ;push@c stored from wreg
  7685     045D  00FA               	movwf	push@c
  7686     045E                     i1l2422:
  7687                           
  7688                           ;main.c: 110: void push(char c);main.c: 111: {;main.c: 113:     int16_t s = addone(tail)
      +                           - head;
  7689     045E  0020               	movlb	0	; select bank0
  7690     045F  0868               	movf	_tail+1,w
  7691     0460  00F1               	movwf	i1addone@i+1
  7692     0461  0867               	movf	_tail,w
  7693     0462  00F0               	movwf	i1addone@i
  7694     0463  318D  2546  3184   	fcall	i1_addone
  7695     0466  087C               	movf	_head,w
  7696     0467  0270               	subwf	?i1_addone,w
  7697     0468  00F6               	movwf	push@s
  7698     0469  087D               	movf	_head+1,w
  7699     046A  3B71               	subwfb	?i1_addone+1,w
  7700     046B  00F7               	movwf	push@s+1
  7701     046C                     i1l2424:
  7702                           
  7703                           ;main.c: 114:     if (s > 1024 -16) {
  7704     046C  0877               	movf	push@s+1,w
  7705     046D  3A80               	xorlw	128
  7706     046E  00F2               	movwf	??_push
  7707     046F  3083               	movlw	131
  7708     0470  0272               	subwf	??_push,w
  7709     0471  1D03               	skipz
  7710     0472  2C75               	goto	u203_25
  7711     0473  30F1               	movlw	241
  7712     0474  0276               	subwf	push@s,w
  7713     0475                     u203_25:
  7714     0475  1C03               	skipc
  7715     0476  2C78               	goto	u203_21
  7716     0477  2C79               	goto	u203_20
  7717     0478                     u203_21:
  7718     0478  2C7E               	goto	i1l2428
  7719     0479                     u203_20:
  7720     0479                     i1l2426:
  7721                           
  7722                           ;main.c: 115:         setCTS(1);
  7723     0479  3001               	movlw	1
  7724     047A  3187  27F5  3184   	fcall	_setCTS
  7725                           
  7726                           ;main.c: 116:     }
  7727     047D  2C82               	goto	i1l85
  7728     047E                     i1l2428:
  7729                           
  7730                           ;main.c: 118:         setCTS(0);
  7731     047E  3000               	movlw	0
  7732     047F  3187  27F5  3184   	fcall	_setCTS
  7733     0482                     i1l85:	
  7734                           ;main.c: 119:     }
  7735                           
  7736                           
  7737                           ;main.c: 121:     if ( addone(addone(tail)) == head) {
  7738     0482  0020               	movlb	0	; select bank0
  7739     0483  0868               	movf	_tail+1,w
  7740     0484  00F1               	movwf	i1addone@i+1
  7741     0485  0867               	movf	_tail,w
  7742     0486  00F0               	movwf	i1addone@i
  7743     0487  318D  2546  3184   	fcall	i1_addone
  7744     048A  0871               	movf	?i1_addone+1,w
  7745     048B  00F9               	movwf	_push$1474+1
  7746     048C  0870               	movf	?i1_addone,w
  7747     048D  00F8               	movwf	_push$1474
  7748                           
  7749                           ;main.c: 121:     if ( addone(addone(tail)) == head) {
  7750     048E  0879               	movf	_push$1474+1,w
  7751     048F  00F1               	movwf	i1addone@i+1
  7752     0490  0878               	movf	_push$1474,w
  7753     0491  00F0               	movwf	i1addone@i
  7754     0492  318D  2546  3184   	fcall	i1_addone
  7755     0495  087D               	movf	_head+1,w
  7756     0496  0671               	xorwf	?i1_addone+1,w
  7757     0497  1D03               	skipz
  7758     0498  2C9B               	goto	u204_25
  7759     0499  087C               	movf	_head,w
  7760     049A  0670               	xorwf	?i1_addone,w
  7761     049B                     u204_25:
  7762     049B  1D03               	skipz
  7763     049C  2C9E               	goto	u204_21
  7764     049D  2C9F               	goto	u204_20
  7765     049E                     u204_21:
  7766     049E  2CAD               	goto	i1l2438
  7767     049F                     u204_20:
  7768     049F                     i1l2430:
  7769                           
  7770                           ;main.c: 123:         PORTEbits.RE2 = 1;
  7771     049F  0020               	movlb	0	; select bank0
  7772     04A0  1510               	bsf	16,2	;volatile
  7773     04A1                     i1l2432:
  7774                           
  7775                           ;main.c: 124:         _delay((unsigned long)((2000)*(20000000/4000.0)));
  7776     04A1  3033               	movlw	51
  7777     04A2  00F3               	movwf	??_push+1
  7778     04A3  30BB               	movlw	187
  7779     04A4  00F2               	movwf	??_push
  7780     04A5  30E0               	movlw	224
  7781     04A6                     u354_27:
  7782     04A6  0B89               	decfsz	9,f
  7783     04A7  2CA6               	goto	u354_27
  7784     04A8  0BF2               	decfsz	??_push,f
  7785     04A9  2CA6               	goto	u354_27
  7786     04AA  0BF3               	decfsz	??_push+1,f
  7787     04AB  2CA6               	goto	u354_27
  7788     04AC  2CCF               	goto	i1l87
  7789     04AD                     i1l2438:
  7790                           
  7791                           ;main.c: 128:         tail = addone(tail);
  7792     04AD  0020               	movlb	0	; select bank0
  7793     04AE  0868               	movf	_tail+1,w
  7794     04AF  00F1               	movwf	i1addone@i+1
  7795     04B0  0867               	movf	_tail,w
  7796     04B1  00F0               	movwf	i1addone@i
  7797     04B2  318D  2546  3184   	fcall	i1_addone
  7798     04B5  0871               	movf	?i1_addone+1,w
  7799     04B6  0020               	movlb	0	; select bank0
  7800     04B7  00E8               	movwf	_tail+1
  7801     04B8  0870               	movf	?i1_addone,w
  7802     04B9  00E7               	movwf	_tail
  7803     04BA                     i1l2440:
  7804                           
  7805                           ;main.c: 129:         queue[tail] = c;
  7806     04BA  30F0               	movlw	240
  7807     04BB  00F2               	movwf	??_push
  7808     04BC  3023               	movlw	35
  7809     04BD  00F3               	movwf	??_push+1
  7810     04BE  0867               	movf	_tail,w
  7811     04BF  0772               	addwf	??_push,w
  7812     04C0  00F4               	movwf	??_push+2
  7813     04C1  0868               	movf	_tail+1,w
  7814     04C2  3D73               	addwfc	??_push+1,w
  7815     04C3  00F5               	movwf	??_push+3
  7816     04C4  0874               	movf	??_push+2,w
  7817     04C5  0086               	movwf	6
  7818     04C6  0875               	movf	??_push+3,w
  7819     04C7  0087               	movwf	7
  7820     04C8  087A               	movf	push@c,w
  7821     04C9  0081               	movwf	1
  7822     04CA                     i1l2442:
  7823                           
  7824                           ;main.c: 130:         bytes_pushed++;
  7825     04CA  3001               	movlw	1
  7826     04CB  0021               	movlb	1	; select bank1
  7827     04CC  07EB               	addwf	_bytes_pushed^(0+128),f
  7828     04CD  3000               	movlw	0
  7829     04CE  3DEC               	addwfc	(_bytes_pushed+1)^(0+128),f
  7830     04CF                     i1l87:
  7831     04CF  0008               	return
  7832     04D0                     __end_of_push:
  7833                           
  7834                           	psect	text39
  7835     0D46                     __ptext39:	
  7836 ;; *************** function i1_addone *****************
  7837 ;; Defined at:
  7838 ;;		line 70 in file "main.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;  i               2    0[COMMON] short 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  2    0[COMMON] short 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2, status,0
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7856 ;;Total ram usage:        2 bytes
  7857 ;; Hardware stack levels used: 1
  7858 ;; This function calls:
  7859 ;;		Nothing
  7860 ;; This function is called by:
  7861 ;;		_size
  7862 ;;		_push
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866     0D46                     i1_addone:	
  7867                           ;psect for function i1_addone
  7868                           
  7869     0D46                     i1l2392:	
  7870                           ;incstack = 0
  7871                           ; Regs used in i1_addone: [wreg+status,2+status,0]
  7872                           
  7873                           
  7874                           ;main.c: 70: int16_t addone(int16_t i);main.c: 71: {;main.c: 72:     if (i == 1024 -1)
  7875     0D46  0A70               	incf	i1addone@i,w
  7876     0D47  3003               	movlw	3
  7877     0D48  1903               	skipnz
  7878     0D49  0671               	xorwf	i1addone@i+1,w
  7879     0D4A  1D03               	btfss	3,2
  7880     0D4B  2D4D               	goto	u201_21
  7881     0D4C  2D4E               	goto	u201_20
  7882     0D4D                     u201_21:
  7883     0D4D  2D51               	goto	i1l2398
  7884     0D4E                     u201_20:
  7885     0D4E                     i1l2394:
  7886                           
  7887                           ;main.c: 73:         return 0;
  7888     0D4E  01F0               	clrf	?i1_addone
  7889     0D4F  01F1               	clrf	?i1_addone+1
  7890     0D50  2D57               	goto	i1l72
  7891     0D51                     i1l2398:
  7892                           
  7893                           ;main.c: 74:     return i+1;
  7894     0D51  0870               	movf	i1addone@i,w
  7895     0D52  3E01               	addlw	1
  7896     0D53  00F0               	movwf	?i1_addone
  7897     0D54  3000               	movlw	0
  7898     0D55  3D71               	addwfc	i1addone@i+1,w
  7899     0D56  00F1               	movwf	?i1_addone+1
  7900     0D57                     i1l72:
  7901     0D57  0008               	return
  7902     0D58                     __end_ofi1_addone:
  7903                           
  7904                           	psect	text40
  7905     07F5                     __ptext40:	
  7906 ;; *************** function _setCTS *****************
  7907 ;; Defined at:
  7908 ;;		line 51 in file "main.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  b               1    wreg     _Bool 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  b               1    0[COMMON] _Bool 
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  1    wreg      void 
  7915 ;; Registers used:
  7916 ;;		wreg, status,0
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7926 ;;Total ram usage:        1 bytes
  7927 ;; Hardware stack levels used: 1
  7928 ;; This function calls:
  7929 ;;		Nothing
  7930 ;; This function is called by:
  7931 ;;		_size
  7932 ;;		_push
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936     07F5                     _setCTS:	
  7937                           ;psect for function _setCTS
  7938                           
  7939                           
  7940                           ;incstack = 0
  7941                           ; Regs used in _setCTS: [wreg+status,0]
  7942                           ;setCTS@b stored from wreg
  7943     07F5  00F0               	movwf	setCTS@b
  7944     07F6                     i1l2196:
  7945                           
  7946                           ;main.c: 51: void setCTS(_Bool b);main.c: 52: {;main.c: 53:     PORTAbits.RA2 = b;
  7947     07F6  0C70               	rrf	setCTS@b,w
  7948     07F7  0020               	movlb	0	; select bank0
  7949     07F8  1C03               	skipc
  7950     07F9  110C               	bcf	12,2	;volatile
  7951     07FA  1803               	skipnc
  7952     07FB  150C               	bsf	12,2	;volatile
  7953     07FC                     i1l65:
  7954     07FC  0008               	return
  7955     07FD                     __end_of_setCTS:
  7956                           
  7957                           	psect	text41
  7958     0D2E                     __ptext41:	
  7959 ;; *************** function _first *****************
  7960 ;; Defined at:
  7961 ;;		line 171 in file "main.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;		None
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      unsigned char 
  7968 ;; Registers used:
  7969 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7979 ;;Total ram usage:        2 bytes
  7980 ;; Hardware stack levels used: 1
  7981 ;; This function calls:
  7982 ;;		Nothing
  7983 ;; This function is called by:
  7984 ;;		_isr
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988     0D2E                     _first:	
  7989                           ;psect for function _first
  7990                           
  7991     0D2E                     i1l2444:	
  7992                           ;incstack = 0
  7993                           ; Regs used in _first: [wreg+fsr1l+fsr1h+status,2+status,0]
  7994                           
  7995                           
  7996                           ;main.c: 173:     return queue[head];
  7997     0D2E  30F0               	movlw	240
  7998     0D2F  00F0               	movwf	??_first
  7999     0D30  3023               	movlw	35
  8000     0D31  00F1               	movwf	??_first+1
  8001     0D32  087C               	movf	_head,w
  8002     0D33  0770               	addwf	??_first,w
  8003     0D34  0086               	movwf	6
  8004     0D35  087D               	movf	_head+1,w
  8005     0D36  3D71               	addwfc	??_first+1,w
  8006     0D37  0087               	movwf	7
  8007     0D38  0801               	movf	1,w
  8008     0D39                     i1l96:
  8009     0D39  0008               	return
  8010     0D3A                     __end_of_first:
  8011     007E                     btemp	set	126	;btemp
  8012     007E                     int$flags	set	126
  8013     007E                     wtemp0	set	126
  8014     23F0                     
  8015                           	psect	config
  8016                           
  8017                           ;Config register CONFIG1 @ 0x8007
  8018                           ;	Oscillator Selection
  8019                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  8020                           ;	Watchdog Timer Enable
  8021                           ;	WDTE = OFF, WDT disabled
  8022                           ;	Power-up Timer Enable
  8023                           ;	PWRTE = OFF, PWRT disabled
  8024                           ;	MCLR Pin Function Select
  8025                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8026                           ;	Flash Program Memory Code Protection
  8027                           ;	CP = OFF, Program memory code protection is disabled
  8028                           ;	Data Memory Code Protection
  8029                           ;	CPD = OFF, Data memory code protection is disabled
  8030                           ;	Brown-out Reset Enable
  8031                           ;	BOREN = OFF, Brown-out Reset disabled
  8032                           ;	Clock Out Enable
  8033                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8034                           ;	Internal/External Switchover
  8035                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8036                           ;	Fail-Safe Clock Monitor Enable
  8037                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8038     8007                     	org	32775
  8039     8007  39E2               	dw	14818
  8040                           
  8041                           ;Config register CONFIG2 @ 0x8008
  8042                           ;	Flash Memory Self-Write Protection
  8043                           ;	WRT = OFF, Write protection off
  8044                           ;	Voltage Regulator Capacitor Enable bit
  8045                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  8046                           ;	PLL Enable
  8047                           ;	PLLEN = OFF, 4x PLL disabled
  8048                           ;	Stack Overflow/Underflow Reset Enable
  8049                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8050                           ;	Brown-out Reset Voltage Selection
  8051                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8052                           ;	Low Power Brown-Out Reset Enable Bit
  8053                           ;	LPBOR = OFF, Low power brown-out is disabled
  8054                           ;	In-Circuit Debugger Mode
  8055                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  8056                           ;	Low-Voltage Programming Enable
  8057                           ;	LVP = ON, Low-voltage programming enabled
  8058     8008                     	org	32776
  8059     8008  3EFF               	dw	16127

Data Sizes:
    Strings     146
    Constant    0
    Data        2
    BSS         45
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     69      73
    BANK1            80     69      78
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    do_blank@s	PTR unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[15]), STR_6(CODE[21]), 

    do_read@s	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), 

    do_write@s	PTR unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[15]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    memset@dest	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    memset@p	PTR unsigned char  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1103$buffer	PTR unsigned char  size(2) Largest target is 0

    S1103$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[4]), STR_11(CODE[18]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 48
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[48]), 

    uart_getc@c	PTR unsigned char  size(1) Largest target is 1
		 -> isr@c(BANK0[1]), 

    uart_puts@p	PTR unsigned char  size(2) Largest target is 48
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[48]), 
		 -> STR_10(CODE[15]), STR_2(CODE[15]), STR_3(CODE[29]), STR_6(CODE[21]), 
		 -> STR_7(CODE[14]), 

    uart_puts@s	PTR unsigned char  size(2) Largest target is 48
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[48]), 
		 -> STR_10(CODE[15]), STR_2(CODE[15]), STR_3(CODE[29]), STR_6(CODE[21]), 
		 -> STR_7(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[4]), STR_11(CODE[18]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[4]), STR_11(CODE[18]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[4]), STR_11(CODE[18]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_push
    _size->i1_addone
    _push->i1_addone

Critical Paths under _main in BANK0

    _main->_do_blank
    _main->_do_read
    _uart_init->___lldiv
    ___lldiv->___lmul
    _do_write->_sprintf
    _pop->_addone
    _empty->_addone
    _do_read->_sprintf
    _do_init->_sprintf
    _do_blank->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _xtoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _clear->_memset

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_do_write
    _do_write->_sprintf
    _do_read->_sprintf
    _do_init->_sprintf
    _do_blank->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   60448
                                             66 BANK0      3     3      0
                              _clear
                           _do_blank
                            _do_init
                            _do_read
                           _do_write
                                _pop
                         _ports_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                           13     9      4    1000
                                             30 BANK0     13     9      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                             16 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ports_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _do_write                                            57    57      0   15529
                                             64 BANK0      1     1      0
                                             13 BANK1     56    56      0
                     _charToHexDigit
                                _pop
                      _setup_address
                            _sprintf
                          _uart_puts
                         _write_port
 ---------------------------------------------------------------------------------
 (2) _write_port                                           3     3      0      31
                                              4 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _pop                                                  3     3      0    1102
                                              6 BANK0      3     3      0
                             _addone
                              _empty
 ---------------------------------------------------------------------------------
 (2) _empty                                                0     0      0     517
                             _addone
 ---------------------------------------------------------------------------------
 (3) _addone                                               2     0      2     517
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _charToHexDigit                                       1     1      0     155
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_read                                             24    24      0   14334
                                             64 BANK0      2     2      0
                                             13 BANK1     22    22      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_putc
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_putc                                            1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_init                                             10    10      0   13646
                                             13 BANK1     10    10      0
                            _sprintf
                      _uart_init_brg
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_init_brg                                       10     8      2      40
                                              4 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _do_blank                                            40    40      0   14334
                                             64 BANK0      2     2      0
                                             13 BANK1     38    38      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_puts                                            5     3      2    1089
                                              4 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    16      4   12403
                                             59 BANK0      5     1      4
                                              0 BANK1     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3   11329
                                             52 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    13      2   10889
                                             38 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                10     8      2    3354
                                             26 BANK0     10     8      2
                                _pad
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     7      2     702
                                             10 BANK0      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     316
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12    10      2    4939
                                             26 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     4      3    2795
                                             19 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1    1249
                                             12 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     857
                                              4 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     613
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     625
                                              4 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _setup_address                                        3     1      2     366
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _read_port                                            1     1      0      34
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear                                                0     0      0     407
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     407
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 5     5      0     678
                                             11 COMMON     1     1      0
                                              0 BANK0      4     4      0
                              _first
                               _push
                               _size
                          _uart_getc
 ---------------------------------------------------------------------------------
 (11) _uart_getc                                           3     3      0      80
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _size                                                5     3      2     241
                                              2 COMMON     5     3      2
                             _setCTS
                           i1_addone
 ---------------------------------------------------------------------------------
 (11) _push                                                9     9      0     264
                                              2 COMMON     9     9      0
                             _setCTS
                           i1_addone
 ---------------------------------------------------------------------------------
 (12) i1_addone                                            2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _setCTS                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _first                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear
     _memset
   _do_blank
     _read_port
     _setup_address
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
           _xtoa
             _pad
     _uart_puts
   _do_init
     _sprintf
     _uart_init_brg
     _uart_puts
   _do_read
     _read_port
     _setup_address
     _sprintf
     _uart_putc
     _uart_puts
   _do_write
     _charToHexDigit
     _pop
       _addone
       _empty
         _addone
     _setup_address
     _sprintf
     _uart_puts
     _write_port
   _pop
   _ports_init
   _uart_init
     ___lldiv
       ___lmul (ARG)
     ___lmul

 _isr (ROOT)
   _first
   _push
     _setCTS
     i1_addone
   _size
     _setCTS
     i1_addone
   _uart_getc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      49       5       91.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     45      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      C5      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      C5      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 12 17:06:29 2025

                        l72 0D7C                          l81 0DBE                          l68 0DEF  
                        l92 07F4                ___awdiv@sign 002A         ___wmul@multiplicand 0026  
                       l100 0DA7                         l200 025B                         l122 0F0C  
                       l106 0E82                         l116 0E0B                         l212 07B5  
                       l204 02CE                         l126 03D8                         l134 0358  
                       l142 0F8C                         l119 0DD6                         l223 0D81  
                       l232 0F38                         l128 03E5                         l208 0774  
                       l224 0D80                         l136 035A                         l241 0F5F  
                       l233 0F37                         l226 0D8B                         l146 052C  
                       l227 0D8A                         l148 053E                         l237 0F50  
                       l229 0D90                         l405 0FC0                         l238 0F4F  
                       l427 06C1                         l196 0246                         l198 0252  
                       l391 0EAE                         l199 0267                         l544 0666  
                       l393 0EC2                         l557 0715                         l901 0221  
                       l921 0606                         l913 045C                         l930 00A8  
                       l860 0E63                         l853 0E44                         l880 0FD4  
                       l936 0170                         l928 009E                         l955 0D69  
                       l883 0FF4                         l892 019B                         l948 0E27  
                       l885 0FFF                         l967 0767                         l975 0EE7  
                       l888 019D                         l978 07FF             ??_uart_init_brg 0026  
                       _abs 0D58                         _pad 0FC1                         _isr 0004  
                       _pop 07B6                ___awmod@sign 002A                         wreg 0009  
               do_write@ads 00AD                        ?_abs 002B                        l3010 00D2  
                      l3002 00AB                        l3020 00F6                        l3012 00D4  
                      l3004 00BB                        l3100 07F0                        l3030 0122  
                      l3022 0102                        l3014 00DA                        l3006 00C0  
                      l3110 0D99                        l3102 07F1                        l3040 0145  
                      l3032 012E                        l3024 010F                        l3016 00E2  
                      l3008 00CE                        l3200 0F3D                        l3104 07F2  
                      l3130 0DF2                        l3034 013C                        l3042 014E  
                      l3018 00EC                        l3202 0F42                        l3210 0D86  
                      l3140 0E08                        l3132 0DF4                        l3028 0118  
                      l3204 0F49                        l3124 0DA5                        l3116 0D9C  
                      l3108 0D93                        l3052 0DA8                        l3220 0F82  
                      l3212 0F62                        l3300 0E7C                        l3150 0DCD  
                      l3142 0DBF                        l3134 0E01                        l3046 0158  
                      l3062 0E0E                        l3206 0F55                        l3310 0EE8  
                      l3118 0DA2                        l3054 0DBB                        l3222 0F84  
                      l3214 0F6E                        l3302 0E7E                        l3230 0F96  
                      l3072 0E28                        l3152 0DD0                        l3144 0DC2  
                      l3136 0E03                        l3128 0DF0                        l3064 0E13  
                      l3160 0768                        l3312 0EF3                        l3208 0D7F  
                      l3400 034F                        l3080 07B6                        l3224 0F87  
                      l3216 0F70                        l3304 0E7F                        l3232 0F9A  
                      l3074 0E2E                        l3154 0DD2                        l3146 0DC5  
                      l3138 0E06                        l3066 0E1B                        l3170 0775  
                      l3162 0768                        l3314 0F04                        l3058 0DBD  
                      l3082 07B9                        l3226 0F89                        l3218 0F73  
                      l3402 04D0                        l3306 0E80                        l3250 068A  
                      l3242 0667                        l3234 0FA2                        l3076 0E34  
                      l3156 0DD4                        l3148 0DC7                        l3068 0E25  
                      l3340 0395                        l3332 0379                        l3324 0365  
                      l3316 035B                        l3180 07AD                        l3172 0782  
                      l3164 076A                        l3084 07B9                        l3404 04D2  
                      l3308 0E81                        l3260 06B3                        l3252 0691  
                      l3244 0678                        l3236 0FA9                        l3228 0F8D  
                      l3500 056E                        l3078 0E38                        l3270 0DE8  
                      l3190 0E4D                        l3350 03DA                        l3342 03A6  
                      l3334 0383                        l3326 036A                        l3318 0362  
                      l3182 07AE                        l3174 0791                        l3166 076C  
                      l3086 07C1                        l3094 07D2                        l3430 050F  
                      l3422 04ED                        l3414 04D9                        l3406 04D4  
                      l3254 06A3                        l3246 067B                        l3262 06B9  
                      l3238 0FB8                        l3502 0574                        l3510 0584  
                      l3272 0DED                        l2800 064C                        l3192 0E4F  
                      l3352 03E0                        l3344 03C0                        l3336 0388  
                      l3328 036E                        l3176 0796                        l3168 0771  
                      l3360 02D3                        l3096 07DF                        l3088 07C3  
                      l3440 0536                        l3432 0519                        l3424 04F2  
                      l3416 04DE                        l3408 04D5                        l3280 0E6C  
                      l3256 06AB                        l3248 0686                        l3520 0597  
                      l3512 0586                        l3504 0578                        l3266 0DD7  
                      l2810 0662                        l2802 064D                        l3194 0E5A  
                      l3186 0E47                        l3346 03C8                        l3338 038D  
                      l3178 0798                        l3370 02DD                        l3362 02D4  
                      l3098 07EB                        l3434 051E                        l3426 04F8  
                      l3418 04E2                        l3290 0E72                        l3282 0E6D  
                      l3274 0E64                        l3258 06AC                        l3450 0242  
                      l3442 0222                        l3514 0593                        l3506 057E  
                      l3268 0DE6                        l2804 0652                        l2820 06CD  
                      l2740 0730                        l2732 0716                        l2900 01C9  
                      l3188 0E4B                        l3348 03CB                        l3380 02FB  
                      l3372 02E1                        l3356 02CF                        l3436 0523  
                      l3428 0503                        l3292 0E74                        l3284 0E6E  
                      l3276 0E66                        l3460 025F                        l3452 024A  
                      l3444 0230                        l3516 0595                        l3508 0581  
                      l2806 0658                        l2830 06E1                        l2822 06CF  
                      l2814 06C2                        l2742 074E                        l2734 071C  
                      l2750 0EC8                        l2910 0200                        l2902 01D9  
                      l3198 0F36                        l3390 033A                        l3382 0300  
                      l3358 02D1                        l3438 052E                        l3294 0E75  
                      l3286 0E70                        l3278 0E6A                        l3470 02A9  
                      l3462 0263                        l3454 024E                        l3446 0239  
                      l3518 0596                        l2808 065D                        l2840 06FC  
                      l2832 06E6                        l2824 06D3                        l2816 06C4  
                      l2744 075E                        l2736 0721                        l2752 0ED4  
                      l2904 01E7                        l2912 0205                        l2760 0EAA  
                      l3392 033B                        l3384 0311                        l3376 02EC  
                      l3368 02D8                        l3296 0E79                        l3288 0E71  
                      l3480 02CD                        l3472 02BB                        l3456 0256  
                      l3464 0267                        l3448 023E                        l2770 0607  
                      l2842 0701                        l2834 06EA                        l2826 06D8  
                      l2818 06C8                        l2738 0726                        l2754 0ED9  
                      l2914 020B                        l2906 01EE                        l2762 0EB3  
                      l2930 03FD                        l2922 03E8                        l3394 0340  
                      l3386 0319                        l3378 02F6                        l3298 0E7B  
                      l3466 026C                        l3474 02C9                        l3490 0554  
                      l3482 053F                        l2780 0618                        l2772 0609  
                      l2836 06EE                        l2828 06DE                        l2844 0707  
                      l2748 0EC5                        l2860 0FD7                        l2852 0FC3  
                      l2916 020F                        l2908 01F3                        l2764 0EB8  
                      l2756 0EA3                        l2940 0416                        l2932 0400  
                      l2924 03EA                        l3396 0344                        l3388 0333  
                      l3476 02CA                        l3468 026F                        l3492 055A  
                      l3484 054E                        l2790 062C                        l2782 061D  
                      l2774 060D                        l2846 070C                        l2838 06F8  
                      l2870 0D5D                        l2862 0FE1                        l2854 0FC7  
                      l2918 0216                        l2766 0EBE                        l2758 0EA6  
                      l2950 0439                        l2942 0417                        l2934 0406  
                      l2926 03F6                        l3398 034A                        l3478 02CC  
                      l3494 055C                        l3486 0551                        ?_pad 0033  
                      l2792 0631                        l2784 0621                        l2776 0612  
                      l2848 0711                        l2872 0D5E                        l2864 0FE6  
                      l2856 0FCD                        l2880 0184                        l2960 05A9  
                      l2952 043E                        l2944 041B                        l2936 040B  
                      l2928 03F9                        l3496 0564                        l3488 0553  
                      l2794 0635                        l2786 0623                        l2778 0614  
                      l2866 0FF9                        l2858 0FD2                        l2890 01A1  
                      l2882 0189                        l2970 05E6                        l2962 05AB  
                      l2954 044B                        l2938 040F                        l2946 0424  
                      l3498 056A                        l2796 0639                        l2788 0629  
                      l2868 0D58                        l2892 01A4                        l2884 018D  
                      l2876 0173                        l2964 05BC                        l2972 05EE  
                      l2948 0432                        l2956 0450                        l2980 0D73  
                      l2798 0648                        l2894 01A8                        l2886 0192  
                      l2878 0175                        l2974 0602                        l2966 05C4  
                      l2990 0085                        l2896 01C4                        l2888 0197  
                      l2968 05D1                        l2992 008D                        l2984 0D76  
                      l2898 01C5                        l2994 0096                        l2978 0D6A  
                      l2996 009B                        l2988 0074                        l2998 009F  
                      ?_isr 0070                        ?_pop 0070                        STR_1 108E  
                      STR_2 1053                        STR_3 1000                        STR_4 1070  
                      STR_5 107A                        STR_6 101D                        STR_7 1062  
                      STR_8 1082                        STR_9 1089                        u3000 0DA2  
                      u3001 0DA1                        u3010 0771                        u3011 0770  
                      u3020 0796                        u3021 0795                        u3030 0F3D  
                      u3110 0FB8                        u3031 0F3C                        u3111 0FB7  
                      _LATC 010E                        u2400 074E                        u3040 0F55  
                      u3200 038D                        u3120 0678                        _LATD 010F  
                      u2401 074D                        u3041 0F54                        u3201 038C  
                      u3121 0677                        u3105 0FAA                        u2410 0EE7  
                      u3050 0F5F                        u3210 03D8                        u2411 0EE6  
                      u3051 0F5E                        u3211 03D7                        u2500 0639  
                      u2420 0EAA                        u3220 03E0                        u3060 0D86  
                      u3140 068A                        u3300 0239                        u2501 0638  
                      u2405 074A                        u2421 0EA9                        u3221 03DF  
                      u3061 0D85                        u3141 0689                        u3301 0238  
                      u3070 0D90                        u3230 02DD                        u3310 023E  
                      u3071 0D8F                        u3231 02DC                        u3135 067C  
                      u3311 023D                        u2520 0648                        u2600 06EE  
                      u3240 0300                        u3160 06A3                        u3080 0F9A  
                      u3400 02B6                        u3320 0242                        u2521 0647  
                      u2601 06ED                        u3241 02FF                        u3161 06A2  
                      u3081 0F99                        u3321 0241                        u2610 06F8  
                      u2370 071C                        u2450 0EBE                        u3250 033A  
                      u3330 024A                        u3410 055A                        u2515 063A  
                      u2611 06F7                        u2371 071B                        u2451 0EBD  
                      u2435 0EAF                        u3251 0339                        u3155 068B  
                      u3331 0249                        u3411 0559                        u2540 0658  
                      u2460 060D                        u2380 0721                        u2700 017A  
                      u3260 0358                        u3180 06B9                        u3340 024E  
                      u3420 056A                        u2541 0657                        u2525 0644  
                      u2461 060C                        u2381 0720                        u2701 0178  
                      u2445 0EB4                        u3261 0357                        u3181 06B8  
                      u3165 069F                        u3405 02B2                        u3341 024D  
                      u3421 0569                        u2550 065D                        u2470 0618  
                      u2630 0707                        u2390 0730                        u2710 017B  
                      u3190 036A                        u3270 04DE                        u3350 0256  
                      u3430 0574                        u2551 065C                        u2535 064E  
                      u2471 0617                        u2631 0706                        u2615 06F4  
                      u2391 072F                        u3191 0369                        u3271 04DD  
                      u3175 06AD                        u3095 0FA3                        u3351 0255  
                      u3431 0573                        u2480 0629                        u2640 070C  
                      u2560 06C8                        u2720 0189                        u2800 0406  
                      u3360 025A                        u3440 057E                        u2481 0628  
                      u2641 070B                        u2625 06FD                        u2561 06C7  
                      u2721 0188                        u2801 0405                        u3361 0259  
                      u3441 057D                        u2570 06D3                        u2650 0FC7  
                      u2730 0192                        u2810 0432                        u3290 052C  
                      u3370 025F                        u2571 06D2                        u2651 0FC6  
                      u2731 0191                        u2811 0431                        u3507 07C9  
                      u3291 052B                        u3371 025E                        u2580 06DE  
                      u2660 0FD2                        u2740 01E7                        u2820 0439  
                      u2900 00C0                        u3380 0263                        u2581 06DD  
                      u2661 0FD1                        u2741 01E6                        u2821 0438  
                      u2901 00BF                        u3517 077B                        u3285 0507  
                      u3381 0262                        u2670 0FF4                        u2750 01EE  
                      u2830 043E                        u2910 00D2                        u3390 026C  
                      u2495 062D                        u2671 0FF3                        u2751 01ED  
                      u2831 043D                        u2815 042E                        u2911 00D1  
                      u3527 078A                        u3391 026B                        u2680 0FF9  
                      u2760 01F3                        u2840 044B                        u2920 00EC  
                      u3537 0DFE                        u2681 0FF8                        u2761 01F2  
                      u2745 01E3                        u2841 044A                        u2921 00EB  
                      u3457 058C                        u2690 0D5D                        u2770 0200  
                      u2850 0450                        u2930 00F6                        u2595 06E2  
                      u2691 0D5C                        u2675 0FF0                        u2771 01FF  
                      u2851 044F                        u2931 00F5                        u3467 059D  
                      u2780 0205                        u2860 05BC                        u2940 0122  
                      u2781 0204                        u2861 05BB                        u2845 0447  
                      u2941 0121                        u3477 0F63                        u2790 020B  
                      u2870 0602                        u2950 0DBB                        u2791 020A  
                      u2775 01FC                        u2871 0601                        u2951 0DBA  
                      u3487 0F6B                        u2960 0E25                        u2880 0D73  
                      u2961 0E24                        u2881 0D72                        u3497 0F7B  
                      u2970 0E44                        u2890 0085                        u2971 0E43  
                      u2891 0084                        u2955 0DB7                        u2980 07C1  
                      u2981 07C0                        u2990 0D99                        u2991 0D98  
                      i1l72 0D57                        i1l65 07FC                        i1l85 0482  
                      i1l77 0F35                        i1l87 04CF                        i1l96 0D39  
         uart_init_brg@rate 002B                        abs@a 002B                        _dbuf 0120  
                      _head 007C                        _main 053F                        _dtoa 0171  
                      _tail 0067                        _prec 00E7                        pad@i 0037  
                      _size 0F0D                        pad@p 0034                        fsr0h 0005  
                      fsr1h 0007                        indf0 0000                        fsr0l 0004  
                      indf1 0001                        fsr1l 0006                        _push 045D  
                      btemp 007E                        _xtoa 03E6                        isr@c 0023  
                      isr@n 0020                        pop@c 0028                        start 0040  
           ?_charToHexDigit 0070                do_write@addr 00E3                do_write@data 00E1  
                     ??_abs 002D                       ??_pad 0036                       ??_isr 007B  
                     ??_pop 0026                       ?_main 0070                       ?_dtoa 003A  
           __end_of___awdiv 0667                       STR_10 1044                       STR_11 1032  
           __end_of___awmod 0716                       ?_size 0072                       ?_push 0070  
           __end_of___lldiv 06C2             ___awdiv@divisor 0024                       ?_xtoa 003A  
                     i1l111 003B                       i1l113 003E                       i1l220 0EA2  
                     i1l215 0E8C                       i1l217 0E93             ___awdiv@counter 0029  
                     _RCREG 0199                vfpfcnvrt@fmt 0046                       _SPBRG 019B  
                     _PORTD 000F                       _TRISB 008D                       _TRISC 008E  
                     _TRISD 008F                       _TXREG 019A         ___lmul@multiplicand 0028  
           __end_of_do_init 0F0D             __end_of_do_read 035B             ??_setup_address 0026  
                     _clear 0DD7                       _flags 0065                       _first 0D2E  
                     _empty 0DA8         read_prec_or_width@c 002F         read_prec_or_width@n 0030  
                     _fputc 0716                       _fputs 0EC3                       pad@fp 0039  
                     _width 00E5                       _queue 23F0                       _putch 07FF  
                     dtoa@d 003A                       dtoa@i 0044                       dtoa@p 0040  
                     dtoa@s 0043                       dtoa@w 0041                       isr@ok 0022  
          __end_ofi1_addone 0D58                       size@s 0075                       push@c 007A  
                     push@s 0076                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0E64                       xtoa@c 0041                       xtoa@d 003A  
                     xtoa@i 0042                       xtoa@p 003E                       xtoa@w 003F  
           __initialization 0042                __end_of_main 05A7                __end_of_dtoa 0222  
              __end_of_size 0F36                __end_of_push 04D0                __end_of_xtoa 045D  
                    ??_main 0062                      ??_dtoa 003C              write_port@data 0026  
                    ??_size 0074                      ??_push 0072                      ??_xtoa 003C  
__end_of_read_prec_or_width 0607                      ?_clear 0070                      ?_first 0070  
                    ?_empty 0070                      ?_fputc 0024                      ?_fputs 002C  
          ___awdiv@dividend 0026                      _ANSELA 018C                      ?_putch 0070  
                    _ANSELB 018D                      _ANSELD 018F                      i1l2410 0F0D  
                    i1l2412 0F1B                      i1l2430 049F                      i1l2422 045E  
                    i1l2414 0F28                      u201_20 0D4E                      i1l2440 04BA  
                    i1l2432 04A1                      i1l2424 046C                      i1l2416 0F2D  
                    u201_21 0D4D                      i1l2442 04CA                      i1l2426 0479  
                    i1l2418 0F31                      i1l2444 0D2E                      i1l2196 07F6  
                    i1l2428 047E                      i1l2438 04AD                      i1l2392 0D46  
                    u202_20 0F28                      u202_21 0F27                      i1l2394 0D4E  
                    i1l2490 0E90                      i1l2492 0E98                      i1l2484 0E84  
                    u202_25 0F24                      i1l2398 0D51                      i1l2494 0E9F  
                    i1l2486 0E85                      u203_20 0479                      i1l2496 0EA1  
                    i1l2488 0E8A                      i1l2680 0011                      i1l2672 0006  
                    u203_21 0478                      i1l2690 0038                      i1l2682 0016  
                    i1l2674 0008                      i1l2684 001A                      i1l2676 0009  
                    u203_25 0475                      i1l2686 0022                      i1l2678 000B  
                    u204_20 049F                      i1l2688 002A                      u204_21 049E  
                    u204_25 049B                      u205_20 0E8A                      u205_21 0E89  
                    u206_20 0E90                      u230_20 0016                      u206_21 0E8F  
                    u230_21 0015                      u207_20 0E98                      u231_20 002A  
                    u207_21 0E97                      u231_21 0029                      u232_20 0038  
                    u232_21 0037                      u232_25 0034                      u354_27 04A6  
             vfpfcnvrt@done 004C                      _SPBRGH 019C            __end_of_do_blank 03E6  
              vfprintf@cfmt 0059            __end_of_do_write 053F                      ___lmul 0F8D  
                    _addone 0D6A                      ___wmul 0EA3                   ??___awdiv 0028  
                 ??___awmod 0028                   ??___lldiv 0038        read_prec_or_width@ap 002A  
                    _setCTS 07F5                      _memset 0E28            ___awdiv@quotient 002B  
           ___awmod@divisor 0024             ___awmod@counter 0029                      pad@buf 0033  
                 ??_do_init 0060                   ??_do_read 0060                      dtoa@fp 003D  
                    fputc@c 0024                      fputs@c 002F                      fputs@i 0030  
                    fputs@s 0032                      putch@c 0070            __end_of_vfprintf 0E28  
                 ??_sprintf 005F                      xtoa@fp 003D     __end_of__initialization 006E  
            __pcstackCOMMON 0070                __pidataBANK0 07FD               __end_of_clear 0DF0  
             __end_of_first 0D3A               __end_of_empty 0DBF               __end_of_fputc 0768  
             __end_of_fputs 0EE8               __end_of_putch 0800                   ?i1_addone 0070  
                   ??_clear 002C                     ??_first 0070                     ??_empty 0026  
                   ??_fputc 0027                     ??_fputs 002D                     ??_putch 0024  
                __pbssBANK0 0065                  __pbssBANK1 00E5                  __pbssBANK2 0120  
          ??_charToHexDigit 0024                  _cmd_active 00ED                  __pmaintext 053F  
                   ?___lmul 0024                     ?_addone 0024                     ?___wmul 0024  
                __pintentry 0004                     ?_setCTS 0070                     ?_memset 0024  
            ___lmul@product 002C                  ??i1_addone 0072       __end_of_uart_init_brg 07B6  
           setup_address@hi 0026                   ?_do_blank 0070                   ?_do_write 0070  
                   ___awdiv 0607                     ___awmod 06C2                     ___lldiv 0667  
                 ?_vfprintf 0054                     _do_init 0EE8                     _do_read 02CF  
                   __ptext1 0222                     __ptext2 0F8D                     __ptext3 0667  
                   __ptext4 0E64                     __ptext5 04D0                     __ptext6 0F60  
                   __ptext7 07B6                     __ptext8 0DA8                     __ptext9 0D6A  
                   addone@i 0024       read_prec_or_width@fmt 0032            ___awmod@dividend 0026  
         __end_of_read_port 0DD7                  ??_do_blank 0060                     main@cmd 0064  
     __end_of_setup_address 0E0C                     _sprintf 0E45                     clrloop0 0D3B  
                ??_do_write 0060        end_of_initialization 006E                     fputc@fp 0026  
                   setCTS@b 0070                     memset@c 0026                     memset@n 0028  
                   memset@p 002A                     fputs@fp 002C          _read_prec_or_width 05A7  
         __end_of_uart_getc 0EA3           __end_of_uart_init 02CF             ___lldiv@divisor 0030  
                do_blank@ok 00CD           __end_of_uart_putc 0D91           setup_address@addr 0024  
         __end_of_uart_puts 0F60             ___lldiv@counter 003D           __end_of_vfpfcnvrt 0171  
                 _RCSTAbits 019D         ?_read_prec_or_width 002A            vfpfcnvrt@convarg 004D  
                ??_vfprintf 0057                 uart_getc@ok 0071                  _uart_ready 0066  
                do_read@ads 00AD                  do_read@col 00C0                   _PORTAbits 000C  
                 _PORTBbits 000D                   _PORTEbits 0010                   _TRISAbits 008C  
                 _TRISCbits 008E                   _TRISEbits 0090        ??_read_prec_or_width 002C  
                _ports_init 0E64                   i1addone@i 0070                  do_write@hi 00DF  
                do_write@lo 00E0                   _TXSTAbits 019E              __end_of___lmul 0FC1  
               vfpfcnvrt@ap 0047              __end_of_addone 0D7D                 vfpfcnvrt@cp 0052  
               vfpfcnvrt@fp 0051              __end_of___wmul 0EC3                 _BAUDCONbits 019F  
                _write_port 0F60              __end_of_setCTS 07FD              __end_of_memset 0E45  
       start_initialization 0042                 __end_of_abs 0D6A                 __end_of_pad 1000  
               __end_of_isr 0040                 __end_of_pop 07F5                 vfprintf@fmt 0054  
                  ??___lmul 002C                    ??_addone 0026                    ??___wmul 0028  
               __pdataBANK0 0067                    ??_setCTS 0070                    ??_memset 002A  
                memset@dest 0024                 __pbssBIGRAM 23F0                 __pbssCOMMON 007C  
                 ___latbits 0003               __pcstackBANK0 0020               __pcstackBANK1 00A0  
               ?_ports_init 0070                   _dtoa$1182 003E                _bytes_popped 00E9  
              _bytes_pushed 00EB                    ?___awdiv 0024                    ?___awmod 0024  
                  ?___lldiv 0030                 ?_write_port 0070                    ?_do_init 0070  
                  ?_do_read 0070                    ?_sprintf 005B                   _read_port 0DBF  
            ___wmul@product 0028                   clear_ram0 0D3A                    _PIE1bits 0091  
                 _push$1474 0078             uart_init@factor 004A                   do_blank@s 00CF  
                  _PIR1bits 0011                  uart_getc@c 0070                   _uart_getc 0E83  
                 _uart_init 0222                   _uart_putc 0D7D                   _uart_puts 0F36  
                uart_init@n 0046                  uart_putc@c 0024                   _vfpfcnvrt 0072  
                uart_puts@p 0027                  uart_puts@s 0024                  _ADCON0bits 009D  
                  i1_addone 0D46           ___wmul@multiplier 0024                   do_write@c 00E2  
                 do_write@s 00DD           ___lmul@multiplier 0024                  ?_read_port 0070  
                vfprintf@ap 0056                  vfprintf@fp 0058                  ?_uart_getc 0070  
                ?_uart_init 003E                  ?_uart_putc 0070                  ?_uart_puts 0024  
                ?_vfpfcnvrt 0046                  sprintf@fmt 005B          uart_init@baud_rate 003E  
                  _do_blank 035B               _uart_init_brg 0768                    __ptext10 0D91  
                  __ptext11 02CF                    __ptext20 03E6                    __ptext12 0D7D  
                  __ptext21 05A7                    __ptext13 0EE8                    __ptext30 0607  
                  __ptext22 0EA3                    __ptext14 0768                    __ptext31 0DF0  
                  __ptext23 0171                    __ptext15 035B                    __ptext40 07F5  
                  __ptext32 0DBF                    __ptext24 0FC1                    __ptext16 0F36  
                  __ptext41 0D2E                    __ptext33 0DD7                    __ptext25 0EC3  
                  __ptext17 0E45                    __ptext34 0E28                    __ptext26 0716  
                  __ptext18 0E0C                    __ptext27 07FF                    __ptext19 0072  
                  __ptext36 0E83                    __ptext28 0D58                    __ptext37 0F0D  
                  __ptext29 06C2                    __ptext38 045D                    __ptext39 0D46  
                  _do_write 04D0             charToHexDigit@c 0024                do_blank@addr 00D1  
              do_blank@data 00CE                    do_init@s 00AD                    do_read@s 00BD  
                  int$flags 007E                    _vfprintf 0E0C                  _INTCONbits 000B  
            ?_uart_init_brg 0024              __pstringtext10 1089              __pstringtext11 108E  
            __pstringtext12 0000                ??_ports_init 0024                 ??_read_port 0024  
             _setup_address 0DF0                    intlevel1 0000                   sprintf@ap 00A0  
          ___lldiv@dividend 0034                 do_blank@ads 00AD                 ??_uart_getc 0070  
               ??_uart_init 0042                 ??_uart_putc 0024                 ??_uart_puts 0026  
            _charToHexDigit 0D91          __end_of_ports_init 0E83                 ??_vfpfcnvrt 0048  
              ??_write_port 0024               __pstringtext1 1000               __pstringtext2 101D  
             __pstringtext3 1032               __pstringtext4 1044               __pstringtext5 1053  
             __pstringtext6 1062               __pstringtext7 1070               __pstringtext8 107A  
             __pstringtext9 1082                    sprintf@f 00A2                    sprintf@s 00A1  
          ___lldiv@quotient 0039                 do_read@addr 00C1                 do_init@rate 00B5  
               do_read@data 00BF              ?_setup_address 0024          __end_of_write_port 0F8D  
             read_port@data 0024      __end_of_charToHexDigit 0DA8  
