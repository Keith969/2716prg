

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Mar 19 11:53:58 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1789
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2
    66                           	psect	text38,local,class=CODE,merge=1,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    71                           	dabs	1,0xCA0,32
    72                           	dabs	1,0xC20,80
    73                           	dabs	1,0xBA0,80
    74                           	dabs	1,0xB20,80
    75                           	dabs	1,0xAA0,80
    76                           	dabs	1,0xA20,80
    77                           	dabs	1,0x9A0,80
    78                           	dabs	1,0x920,80
    79                           	dabs	1,0x8A0,80
    80                           	dabs	1,0x820,80
    81                           	dabs	1,0x7A0,80
    82                           	dabs	1,0x720,80
    83                           	dabs	1,0x6A0,80
    84                           	dabs	1,0x650,32
    85                           	dabs	1,0x23F0,0,_queue
    86                           	dabs	1,0x7E,2
    87     0000                     
    88                           ; Generated 07/09/2023 GMT
    89                           ; 
    90                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC16F1789 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122     0000                     	;# 
   123     0001                     	;# 
   124     0002                     	;# 
   125     0003                     	;# 
   126     0004                     	;# 
   127     0005                     	;# 
   128     0006                     	;# 
   129     0007                     	;# 
   130     0008                     	;# 
   131     0009                     	;# 
   132     000A                     	;# 
   133     000B                     	;# 
   134     000C                     	;# 
   135     000D                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0016                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001C                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     008F                     	;# 
   156     0090                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0095                     	;# 
   162     0096                     	;# 
   163     0097                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009A                     	;# 
   167     009B                     	;# 
   168     009B                     	;# 
   169     009C                     	;# 
   170     009D                     	;# 
   171     009E                     	;# 
   172     009F                     	;# 
   173     010C                     	;# 
   174     010D                     	;# 
   175     010E                     	;# 
   176     010F                     	;# 
   177     0110                     	;# 
   178     0111                     	;# 
   179     0112                     	;# 
   180     0113                     	;# 
   181     0114                     	;# 
   182     0115                     	;# 
   183     0116                     	;# 
   184     0117                     	;# 
   185     0118                     	;# 
   186     0119                     	;# 
   187     011A                     	;# 
   188     011B                     	;# 
   189     011C                     	;# 
   190     011D                     	;# 
   191     011D                     	;# 
   192     011D                     	;# 
   193     011E                     	;# 
   194     011F                     	;# 
   195     018C                     	;# 
   196     018D                     	;# 
   197     018E                     	;# 
   198     018F                     	;# 
   199     0190                     	;# 
   200     0191                     	;# 
   201     0191                     	;# 
   202     0192                     	;# 
   203     0193                     	;# 
   204     0193                     	;# 
   205     0193                     	;# 
   206     0194                     	;# 
   207     0195                     	;# 
   208     0196                     	;# 
   209     0197                     	;# 
   210     0199                     	;# 
   211     0199                     	;# 
   212     0199                     	;# 
   213     019A                     	;# 
   214     019A                     	;# 
   215     019A                     	;# 
   216     019B                     	;# 
   217     019B                     	;# 
   218     019B                     	;# 
   219     019B                     	;# 
   220     019B                     	;# 
   221     019C                     	;# 
   222     019C                     	;# 
   223     019C                     	;# 
   224     019D                     	;# 
   225     019D                     	;# 
   226     019D                     	;# 
   227     019E                     	;# 
   228     019E                     	;# 
   229     019E                     	;# 
   230     019F                     	;# 
   231     019F                     	;# 
   232     019F                     	;# 
   233     019F                     	;# 
   234     019F                     	;# 
   235     020C                     	;# 
   236     020D                     	;# 
   237     020E                     	;# 
   238     020F                     	;# 
   239     0210                     	;# 
   240     0211                     	;# 
   241     0211                     	;# 
   242     0212                     	;# 
   243     0212                     	;# 
   244     0213                     	;# 
   245     0213                     	;# 
   246     0214                     	;# 
   247     0214                     	;# 
   248     0215                     	;# 
   249     0215                     	;# 
   250     0215                     	;# 
   251     0215                     	;# 
   252     0216                     	;# 
   253     0216                     	;# 
   254     0217                     	;# 
   255     0217                     	;# 
   256     028C                     	;# 
   257     028D                     	;# 
   258     028E                     	;# 
   259     028F                     	;# 
   260     0290                     	;# 
   261     0291                     	;# 
   262     0291                     	;# 
   263     0292                     	;# 
   264     0293                     	;# 
   265     0298                     	;# 
   266     0298                     	;# 
   267     0299                     	;# 
   268     029A                     	;# 
   269     030C                     	;# 
   270     030D                     	;# 
   271     030E                     	;# 
   272     030F                     	;# 
   273     0310                     	;# 
   274     0311                     	;# 
   275     0311                     	;# 
   276     0312                     	;# 
   277     0313                     	;# 
   278     038C                     	;# 
   279     038D                     	;# 
   280     038E                     	;# 
   281     038F                     	;# 
   282     0390                     	;# 
   283     0391                     	;# 
   284     0392                     	;# 
   285     0393                     	;# 
   286     0394                     	;# 
   287     0395                     	;# 
   288     0396                     	;# 
   289     0397                     	;# 
   290     0398                     	;# 
   291     0399                     	;# 
   292     039D                     	;# 
   293     039E                     	;# 
   294     039F                     	;# 
   295     0511                     	;# 
   296     0513                     	;# 
   297     0515                     	;# 
   298     051A                     	;# 
   299     0591                     	;# 
   300     0592                     	;# 
   301     0592                     	;# 
   302     0593                     	;# 
   303     0594                     	;# 
   304     0594                     	;# 
   305     0595                     	;# 
   306     0596                     	;# 
   307     0596                     	;# 
   308     0E91                     	;# 
   309     0E92                     	;# 
   310     0E93                     	;# 
   311     0E94                     	;# 
   312     0E95                     	;# 
   313     0E96                     	;# 
   314     0E97                     	;# 
   315     0E98                     	;# 
   316     0E99                     	;# 
   317     0E9A                     	;# 
   318     0E9B                     	;# 
   319     0E9C                     	;# 
   320     0E9D                     	;# 
   321     0E9E                     	;# 
   322     0E9F                     	;# 
   323     0EA0                     	;# 
   324     0EA1                     	;# 
   325     0EA1                     	;# 
   326     0EA2                     	;# 
   327     0EA3                     	;# 
   328     0EA3                     	;# 
   329     0EA4                     	;# 
   330     0EA5                     	;# 
   331     0EA5                     	;# 
   332     0EA6                     	;# 
   333     0EA7                     	;# 
   334     0EA7                     	;# 
   335     0EA8                     	;# 
   336     0EA9                     	;# 
   337     0EAA                     	;# 
   338     0EAB                     	;# 
   339     0EAC                     	;# 
   340     0EAD                     	;# 
   341     0EAE                     	;# 
   342     0EAF                     	;# 
   343     0EB1                     	;# 
   344     0EB2                     	;# 
   345     0EB3                     	;# 
   346     0EB4                     	;# 
   347     0EB5                     	;# 
   348     0EB6                     	;# 
   349     0EB7                     	;# 
   350     0EB8                     	;# 
   351     0EB9                     	;# 
   352     0EBA                     	;# 
   353     0EBB                     	;# 
   354     0EBC                     	;# 
   355     0EBD                     	;# 
   356     0EBE                     	;# 
   357     0EBF                     	;# 
   358     0EC0                     	;# 
   359     0EC1                     	;# 
   360     0EC1                     	;# 
   361     0EC2                     	;# 
   362     0EC3                     	;# 
   363     0EC3                     	;# 
   364     0EC4                     	;# 
   365     0EC5                     	;# 
   366     0EC5                     	;# 
   367     0EC6                     	;# 
   368     0EC7                     	;# 
   369     0EC7                     	;# 
   370     0EC8                     	;# 
   371     0EC9                     	;# 
   372     0ECA                     	;# 
   373     0ECB                     	;# 
   374     0ECC                     	;# 
   375     0ECD                     	;# 
   376     0ECE                     	;# 
   377     0ECF                     	;# 
   378     0ED1                     	;# 
   379     0ED2                     	;# 
   380     0ED3                     	;# 
   381     0ED4                     	;# 
   382     0ED5                     	;# 
   383     0ED6                     	;# 
   384     0ED7                     	;# 
   385     0ED8                     	;# 
   386     0ED9                     	;# 
   387     0EDA                     	;# 
   388     0EDB                     	;# 
   389     0EDC                     	;# 
   390     0EDD                     	;# 
   391     0EDE                     	;# 
   392     0EDF                     	;# 
   393     0EE0                     	;# 
   394     0EE1                     	;# 
   395     0EE1                     	;# 
   396     0EE2                     	;# 
   397     0EE3                     	;# 
   398     0EE3                     	;# 
   399     0EE4                     	;# 
   400     0EE5                     	;# 
   401     0EE5                     	;# 
   402     0EE6                     	;# 
   403     0EE7                     	;# 
   404     0EE7                     	;# 
   405     0EE8                     	;# 
   406     0EE9                     	;# 
   407     0EEA                     	;# 
   408     0EEB                     	;# 
   409     0EEC                     	;# 
   410     0EED                     	;# 
   411     0EEE                     	;# 
   412     0EEF                     	;# 
   413     0F11                     	;# 
   414     0F12                     	;# 
   415     0F13                     	;# 
   416     0F14                     	;# 
   417     0F15                     	;# 
   418     0F16                     	;# 
   419     0F17                     	;# 
   420     0F18                     	;# 
   421     0F19                     	;# 
   422     0F1A                     	;# 
   423     0F1B                     	;# 
   424     0F1C                     	;# 
   425     0F1D                     	;# 
   426     0F1E                     	;# 
   427     0F1F                     	;# 
   428     0F20                     	;# 
   429     0F21                     	;# 
   430     0F21                     	;# 
   431     0F22                     	;# 
   432     0F23                     	;# 
   433     0F23                     	;# 
   434     0F24                     	;# 
   435     0F25                     	;# 
   436     0F25                     	;# 
   437     0F26                     	;# 
   438     0F27                     	;# 
   439     0F27                     	;# 
   440     0F28                     	;# 
   441     0F29                     	;# 
   442     0F2A                     	;# 
   443     0F2B                     	;# 
   444     0F2C                     	;# 
   445     0F2D                     	;# 
   446     0F2E                     	;# 
   447     0F2F                     	;# 
   448     0FE4                     	;# 
   449     0FE5                     	;# 
   450     0FE6                     	;# 
   451     0FE7                     	;# 
   452     0FE8                     	;# 
   453     0FE9                     	;# 
   454     0FEA                     	;# 
   455     0FEB                     	;# 
   456     0FED                     	;# 
   457     0FEE                     	;# 
   458     0FEF                     	;# 
   459     0000                     	;# 
   460     0001                     	;# 
   461     0002                     	;# 
   462     0003                     	;# 
   463     0004                     	;# 
   464     0005                     	;# 
   465     0006                     	;# 
   466     0007                     	;# 
   467     0008                     	;# 
   468     0009                     	;# 
   469     000A                     	;# 
   470     000B                     	;# 
   471     000C                     	;# 
   472     000D                     	;# 
   473     000E                     	;# 
   474     000F                     	;# 
   475     0010                     	;# 
   476     0011                     	;# 
   477     0012                     	;# 
   478     0013                     	;# 
   479     0014                     	;# 
   480     0015                     	;# 
   481     0016                     	;# 
   482     0016                     	;# 
   483     0017                     	;# 
   484     0018                     	;# 
   485     0019                     	;# 
   486     001A                     	;# 
   487     001B                     	;# 
   488     001C                     	;# 
   489     008C                     	;# 
   490     008D                     	;# 
   491     008E                     	;# 
   492     008F                     	;# 
   493     0090                     	;# 
   494     0091                     	;# 
   495     0092                     	;# 
   496     0093                     	;# 
   497     0094                     	;# 
   498     0095                     	;# 
   499     0096                     	;# 
   500     0097                     	;# 
   501     0098                     	;# 
   502     0099                     	;# 
   503     009A                     	;# 
   504     009B                     	;# 
   505     009B                     	;# 
   506     009C                     	;# 
   507     009D                     	;# 
   508     009E                     	;# 
   509     009F                     	;# 
   510     010C                     	;# 
   511     010D                     	;# 
   512     010E                     	;# 
   513     010F                     	;# 
   514     0110                     	;# 
   515     0111                     	;# 
   516     0112                     	;# 
   517     0113                     	;# 
   518     0114                     	;# 
   519     0115                     	;# 
   520     0116                     	;# 
   521     0117                     	;# 
   522     0118                     	;# 
   523     0119                     	;# 
   524     011A                     	;# 
   525     011B                     	;# 
   526     011C                     	;# 
   527     011D                     	;# 
   528     011D                     	;# 
   529     011D                     	;# 
   530     011E                     	;# 
   531     011F                     	;# 
   532     018C                     	;# 
   533     018D                     	;# 
   534     018E                     	;# 
   535     018F                     	;# 
   536     0190                     	;# 
   537     0191                     	;# 
   538     0191                     	;# 
   539     0192                     	;# 
   540     0193                     	;# 
   541     0193                     	;# 
   542     0193                     	;# 
   543     0194                     	;# 
   544     0195                     	;# 
   545     0196                     	;# 
   546     0197                     	;# 
   547     0199                     	;# 
   548     0199                     	;# 
   549     0199                     	;# 
   550     019A                     	;# 
   551     019A                     	;# 
   552     019A                     	;# 
   553     019B                     	;# 
   554     019B                     	;# 
   555     019B                     	;# 
   556     019B                     	;# 
   557     019B                     	;# 
   558     019C                     	;# 
   559     019C                     	;# 
   560     019C                     	;# 
   561     019D                     	;# 
   562     019D                     	;# 
   563     019D                     	;# 
   564     019E                     	;# 
   565     019E                     	;# 
   566     019E                     	;# 
   567     019F                     	;# 
   568     019F                     	;# 
   569     019F                     	;# 
   570     019F                     	;# 
   571     019F                     	;# 
   572     020C                     	;# 
   573     020D                     	;# 
   574     020E                     	;# 
   575     020F                     	;# 
   576     0210                     	;# 
   577     0211                     	;# 
   578     0211                     	;# 
   579     0212                     	;# 
   580     0212                     	;# 
   581     0213                     	;# 
   582     0213                     	;# 
   583     0214                     	;# 
   584     0214                     	;# 
   585     0215                     	;# 
   586     0215                     	;# 
   587     0215                     	;# 
   588     0215                     	;# 
   589     0216                     	;# 
   590     0216                     	;# 
   591     0217                     	;# 
   592     0217                     	;# 
   593     028C                     	;# 
   594     028D                     	;# 
   595     028E                     	;# 
   596     028F                     	;# 
   597     0290                     	;# 
   598     0291                     	;# 
   599     0291                     	;# 
   600     0292                     	;# 
   601     0293                     	;# 
   602     0298                     	;# 
   603     0298                     	;# 
   604     0299                     	;# 
   605     029A                     	;# 
   606     030C                     	;# 
   607     030D                     	;# 
   608     030E                     	;# 
   609     030F                     	;# 
   610     0310                     	;# 
   611     0311                     	;# 
   612     0311                     	;# 
   613     0312                     	;# 
   614     0313                     	;# 
   615     038C                     	;# 
   616     038D                     	;# 
   617     038E                     	;# 
   618     038F                     	;# 
   619     0390                     	;# 
   620     0391                     	;# 
   621     0392                     	;# 
   622     0393                     	;# 
   623     0394                     	;# 
   624     0395                     	;# 
   625     0396                     	;# 
   626     0397                     	;# 
   627     0398                     	;# 
   628     0399                     	;# 
   629     039D                     	;# 
   630     039E                     	;# 
   631     039F                     	;# 
   632     0511                     	;# 
   633     0513                     	;# 
   634     0515                     	;# 
   635     051A                     	;# 
   636     0591                     	;# 
   637     0592                     	;# 
   638     0592                     	;# 
   639     0593                     	;# 
   640     0594                     	;# 
   641     0594                     	;# 
   642     0595                     	;# 
   643     0596                     	;# 
   644     0596                     	;# 
   645     0E91                     	;# 
   646     0E92                     	;# 
   647     0E93                     	;# 
   648     0E94                     	;# 
   649     0E95                     	;# 
   650     0E96                     	;# 
   651     0E97                     	;# 
   652     0E98                     	;# 
   653     0E99                     	;# 
   654     0E9A                     	;# 
   655     0E9B                     	;# 
   656     0E9C                     	;# 
   657     0E9D                     	;# 
   658     0E9E                     	;# 
   659     0E9F                     	;# 
   660     0EA0                     	;# 
   661     0EA1                     	;# 
   662     0EA1                     	;# 
   663     0EA2                     	;# 
   664     0EA3                     	;# 
   665     0EA3                     	;# 
   666     0EA4                     	;# 
   667     0EA5                     	;# 
   668     0EA5                     	;# 
   669     0EA6                     	;# 
   670     0EA7                     	;# 
   671     0EA7                     	;# 
   672     0EA8                     	;# 
   673     0EA9                     	;# 
   674     0EAA                     	;# 
   675     0EAB                     	;# 
   676     0EAC                     	;# 
   677     0EAD                     	;# 
   678     0EAE                     	;# 
   679     0EAF                     	;# 
   680     0EB1                     	;# 
   681     0EB2                     	;# 
   682     0EB3                     	;# 
   683     0EB4                     	;# 
   684     0EB5                     	;# 
   685     0EB6                     	;# 
   686     0EB7                     	;# 
   687     0EB8                     	;# 
   688     0EB9                     	;# 
   689     0EBA                     	;# 
   690     0EBB                     	;# 
   691     0EBC                     	;# 
   692     0EBD                     	;# 
   693     0EBE                     	;# 
   694     0EBF                     	;# 
   695     0EC0                     	;# 
   696     0EC1                     	;# 
   697     0EC1                     	;# 
   698     0EC2                     	;# 
   699     0EC3                     	;# 
   700     0EC3                     	;# 
   701     0EC4                     	;# 
   702     0EC5                     	;# 
   703     0EC5                     	;# 
   704     0EC6                     	;# 
   705     0EC7                     	;# 
   706     0EC7                     	;# 
   707     0EC8                     	;# 
   708     0EC9                     	;# 
   709     0ECA                     	;# 
   710     0ECB                     	;# 
   711     0ECC                     	;# 
   712     0ECD                     	;# 
   713     0ECE                     	;# 
   714     0ECF                     	;# 
   715     0ED1                     	;# 
   716     0ED2                     	;# 
   717     0ED3                     	;# 
   718     0ED4                     	;# 
   719     0ED5                     	;# 
   720     0ED6                     	;# 
   721     0ED7                     	;# 
   722     0ED8                     	;# 
   723     0ED9                     	;# 
   724     0EDA                     	;# 
   725     0EDB                     	;# 
   726     0EDC                     	;# 
   727     0EDD                     	;# 
   728     0EDE                     	;# 
   729     0EDF                     	;# 
   730     0EE0                     	;# 
   731     0EE1                     	;# 
   732     0EE1                     	;# 
   733     0EE2                     	;# 
   734     0EE3                     	;# 
   735     0EE3                     	;# 
   736     0EE4                     	;# 
   737     0EE5                     	;# 
   738     0EE5                     	;# 
   739     0EE6                     	;# 
   740     0EE7                     	;# 
   741     0EE7                     	;# 
   742     0EE8                     	;# 
   743     0EE9                     	;# 
   744     0EEA                     	;# 
   745     0EEB                     	;# 
   746     0EEC                     	;# 
   747     0EED                     	;# 
   748     0EEE                     	;# 
   749     0EEF                     	;# 
   750     0F11                     	;# 
   751     0F12                     	;# 
   752     0F13                     	;# 
   753     0F14                     	;# 
   754     0F15                     	;# 
   755     0F16                     	;# 
   756     0F17                     	;# 
   757     0F18                     	;# 
   758     0F19                     	;# 
   759     0F1A                     	;# 
   760     0F1B                     	;# 
   761     0F1C                     	;# 
   762     0F1D                     	;# 
   763     0F1E                     	;# 
   764     0F1F                     	;# 
   765     0F20                     	;# 
   766     0F21                     	;# 
   767     0F21                     	;# 
   768     0F22                     	;# 
   769     0F23                     	;# 
   770     0F23                     	;# 
   771     0F24                     	;# 
   772     0F25                     	;# 
   773     0F25                     	;# 
   774     0F26                     	;# 
   775     0F27                     	;# 
   776     0F27                     	;# 
   777     0F28                     	;# 
   778     0F29                     	;# 
   779     0F2A                     	;# 
   780     0F2B                     	;# 
   781     0F2C                     	;# 
   782     0F2D                     	;# 
   783     0F2E                     	;# 
   784     0F2F                     	;# 
   785     0FE4                     	;# 
   786     0FE5                     	;# 
   787     0FE6                     	;# 
   788     0FE7                     	;# 
   789     0FE8                     	;# 
   790     0FE9                     	;# 
   791     0FEA                     	;# 
   792     0FEB                     	;# 
   793     0FED                     	;# 
   794     0FEE                     	;# 
   795     0FEF                     	;# 
   796     0000                     	;# 
   797     0001                     	;# 
   798     0002                     	;# 
   799     0003                     	;# 
   800     0004                     	;# 
   801     0005                     	;# 
   802     0006                     	;# 
   803     0007                     	;# 
   804     0008                     	;# 
   805     0009                     	;# 
   806     000A                     	;# 
   807     000B                     	;# 
   808     000C                     	;# 
   809     000D                     	;# 
   810     000E                     	;# 
   811     000F                     	;# 
   812     0010                     	;# 
   813     0011                     	;# 
   814     0012                     	;# 
   815     0013                     	;# 
   816     0014                     	;# 
   817     0015                     	;# 
   818     0016                     	;# 
   819     0016                     	;# 
   820     0017                     	;# 
   821     0018                     	;# 
   822     0019                     	;# 
   823     001A                     	;# 
   824     001B                     	;# 
   825     001C                     	;# 
   826     008C                     	;# 
   827     008D                     	;# 
   828     008E                     	;# 
   829     008F                     	;# 
   830     0090                     	;# 
   831     0091                     	;# 
   832     0092                     	;# 
   833     0093                     	;# 
   834     0094                     	;# 
   835     0095                     	;# 
   836     0096                     	;# 
   837     0097                     	;# 
   838     0098                     	;# 
   839     0099                     	;# 
   840     009A                     	;# 
   841     009B                     	;# 
   842     009B                     	;# 
   843     009C                     	;# 
   844     009D                     	;# 
   845     009E                     	;# 
   846     009F                     	;# 
   847     010C                     	;# 
   848     010D                     	;# 
   849     010E                     	;# 
   850     010F                     	;# 
   851     0110                     	;# 
   852     0111                     	;# 
   853     0112                     	;# 
   854     0113                     	;# 
   855     0114                     	;# 
   856     0115                     	;# 
   857     0116                     	;# 
   858     0117                     	;# 
   859     0118                     	;# 
   860     0119                     	;# 
   861     011A                     	;# 
   862     011B                     	;# 
   863     011C                     	;# 
   864     011D                     	;# 
   865     011D                     	;# 
   866     011D                     	;# 
   867     011E                     	;# 
   868     011F                     	;# 
   869     018C                     	;# 
   870     018D                     	;# 
   871     018E                     	;# 
   872     018F                     	;# 
   873     0190                     	;# 
   874     0191                     	;# 
   875     0191                     	;# 
   876     0192                     	;# 
   877     0193                     	;# 
   878     0193                     	;# 
   879     0193                     	;# 
   880     0194                     	;# 
   881     0195                     	;# 
   882     0196                     	;# 
   883     0197                     	;# 
   884     0199                     	;# 
   885     0199                     	;# 
   886     0199                     	;# 
   887     019A                     	;# 
   888     019A                     	;# 
   889     019A                     	;# 
   890     019B                     	;# 
   891     019B                     	;# 
   892     019B                     	;# 
   893     019B                     	;# 
   894     019B                     	;# 
   895     019C                     	;# 
   896     019C                     	;# 
   897     019C                     	;# 
   898     019D                     	;# 
   899     019D                     	;# 
   900     019D                     	;# 
   901     019E                     	;# 
   902     019E                     	;# 
   903     019E                     	;# 
   904     019F                     	;# 
   905     019F                     	;# 
   906     019F                     	;# 
   907     019F                     	;# 
   908     019F                     	;# 
   909     020C                     	;# 
   910     020D                     	;# 
   911     020E                     	;# 
   912     020F                     	;# 
   913     0210                     	;# 
   914     0211                     	;# 
   915     0211                     	;# 
   916     0212                     	;# 
   917     0212                     	;# 
   918     0213                     	;# 
   919     0213                     	;# 
   920     0214                     	;# 
   921     0214                     	;# 
   922     0215                     	;# 
   923     0215                     	;# 
   924     0215                     	;# 
   925     0215                     	;# 
   926     0216                     	;# 
   927     0216                     	;# 
   928     0217                     	;# 
   929     0217                     	;# 
   930     028C                     	;# 
   931     028D                     	;# 
   932     028E                     	;# 
   933     028F                     	;# 
   934     0290                     	;# 
   935     0291                     	;# 
   936     0291                     	;# 
   937     0292                     	;# 
   938     0293                     	;# 
   939     0298                     	;# 
   940     0298                     	;# 
   941     0299                     	;# 
   942     029A                     	;# 
   943     030C                     	;# 
   944     030D                     	;# 
   945     030E                     	;# 
   946     030F                     	;# 
   947     0310                     	;# 
   948     0311                     	;# 
   949     0311                     	;# 
   950     0312                     	;# 
   951     0313                     	;# 
   952     038C                     	;# 
   953     038D                     	;# 
   954     038E                     	;# 
   955     038F                     	;# 
   956     0390                     	;# 
   957     0391                     	;# 
   958     0392                     	;# 
   959     0393                     	;# 
   960     0394                     	;# 
   961     0395                     	;# 
   962     0396                     	;# 
   963     0397                     	;# 
   964     0398                     	;# 
   965     0399                     	;# 
   966     039D                     	;# 
   967     039E                     	;# 
   968     039F                     	;# 
   969     0511                     	;# 
   970     0513                     	;# 
   971     0515                     	;# 
   972     051A                     	;# 
   973     0591                     	;# 
   974     0592                     	;# 
   975     0592                     	;# 
   976     0593                     	;# 
   977     0594                     	;# 
   978     0594                     	;# 
   979     0595                     	;# 
   980     0596                     	;# 
   981     0596                     	;# 
   982     0E91                     	;# 
   983     0E92                     	;# 
   984     0E93                     	;# 
   985     0E94                     	;# 
   986     0E95                     	;# 
   987     0E96                     	;# 
   988     0E97                     	;# 
   989     0E98                     	;# 
   990     0E99                     	;# 
   991     0E9A                     	;# 
   992     0E9B                     	;# 
   993     0E9C                     	;# 
   994     0E9D                     	;# 
   995     0E9E                     	;# 
   996     0E9F                     	;# 
   997     0EA0                     	;# 
   998     0EA1                     	;# 
   999     0EA1                     	;# 
  1000     0EA2                     	;# 
  1001     0EA3                     	;# 
  1002     0EA3                     	;# 
  1003     0EA4                     	;# 
  1004     0EA5                     	;# 
  1005     0EA5                     	;# 
  1006     0EA6                     	;# 
  1007     0EA7                     	;# 
  1008     0EA7                     	;# 
  1009     0EA8                     	;# 
  1010     0EA9                     	;# 
  1011     0EAA                     	;# 
  1012     0EAB                     	;# 
  1013     0EAC                     	;# 
  1014     0EAD                     	;# 
  1015     0EAE                     	;# 
  1016     0EAF                     	;# 
  1017     0EB1                     	;# 
  1018     0EB2                     	;# 
  1019     0EB3                     	;# 
  1020     0EB4                     	;# 
  1021     0EB5                     	;# 
  1022     0EB6                     	;# 
  1023     0EB7                     	;# 
  1024     0EB8                     	;# 
  1025     0EB9                     	;# 
  1026     0EBA                     	;# 
  1027     0EBB                     	;# 
  1028     0EBC                     	;# 
  1029     0EBD                     	;# 
  1030     0EBE                     	;# 
  1031     0EBF                     	;# 
  1032     0EC0                     	;# 
  1033     0EC1                     	;# 
  1034     0EC1                     	;# 
  1035     0EC2                     	;# 
  1036     0EC3                     	;# 
  1037     0EC3                     	;# 
  1038     0EC4                     	;# 
  1039     0EC5                     	;# 
  1040     0EC5                     	;# 
  1041     0EC6                     	;# 
  1042     0EC7                     	;# 
  1043     0EC7                     	;# 
  1044     0EC8                     	;# 
  1045     0EC9                     	;# 
  1046     0ECA                     	;# 
  1047     0ECB                     	;# 
  1048     0ECC                     	;# 
  1049     0ECD                     	;# 
  1050     0ECE                     	;# 
  1051     0ECF                     	;# 
  1052     0ED1                     	;# 
  1053     0ED2                     	;# 
  1054     0ED3                     	;# 
  1055     0ED4                     	;# 
  1056     0ED5                     	;# 
  1057     0ED6                     	;# 
  1058     0ED7                     	;# 
  1059     0ED8                     	;# 
  1060     0ED9                     	;# 
  1061     0EDA                     	;# 
  1062     0EDB                     	;# 
  1063     0EDC                     	;# 
  1064     0EDD                     	;# 
  1065     0EDE                     	;# 
  1066     0EDF                     	;# 
  1067     0EE0                     	;# 
  1068     0EE1                     	;# 
  1069     0EE1                     	;# 
  1070     0EE2                     	;# 
  1071     0EE3                     	;# 
  1072     0EE3                     	;# 
  1073     0EE4                     	;# 
  1074     0EE5                     	;# 
  1075     0EE5                     	;# 
  1076     0EE6                     	;# 
  1077     0EE7                     	;# 
  1078     0EE7                     	;# 
  1079     0EE8                     	;# 
  1080     0EE9                     	;# 
  1081     0EEA                     	;# 
  1082     0EEB                     	;# 
  1083     0EEC                     	;# 
  1084     0EED                     	;# 
  1085     0EEE                     	;# 
  1086     0EEF                     	;# 
  1087     0F11                     	;# 
  1088     0F12                     	;# 
  1089     0F13                     	;# 
  1090     0F14                     	;# 
  1091     0F15                     	;# 
  1092     0F16                     	;# 
  1093     0F17                     	;# 
  1094     0F18                     	;# 
  1095     0F19                     	;# 
  1096     0F1A                     	;# 
  1097     0F1B                     	;# 
  1098     0F1C                     	;# 
  1099     0F1D                     	;# 
  1100     0F1E                     	;# 
  1101     0F1F                     	;# 
  1102     0F20                     	;# 
  1103     0F21                     	;# 
  1104     0F21                     	;# 
  1105     0F22                     	;# 
  1106     0F23                     	;# 
  1107     0F23                     	;# 
  1108     0F24                     	;# 
  1109     0F25                     	;# 
  1110     0F25                     	;# 
  1111     0F26                     	;# 
  1112     0F27                     	;# 
  1113     0F27                     	;# 
  1114     0F28                     	;# 
  1115     0F29                     	;# 
  1116     0F2A                     	;# 
  1117     0F2B                     	;# 
  1118     0F2C                     	;# 
  1119     0F2D                     	;# 
  1120     0F2E                     	;# 
  1121     0F2F                     	;# 
  1122     0FE4                     	;# 
  1123     0FE5                     	;# 
  1124     0FE6                     	;# 
  1125     0FE7                     	;# 
  1126     0FE8                     	;# 
  1127     0FE9                     	;# 
  1128     0FEA                     	;# 
  1129     0FEB                     	;# 
  1130     0FED                     	;# 
  1131     0FEE                     	;# 
  1132     0FEF                     	;_queue
  1133                           
  1134                           	psect	idataBANK0
  1135     0002                     __pidataBANK0:
  1136                           
  1137                           ;initializer for _tail
  1138     0002  34FF               	retlw	255
  1139     0003  3403               	retlw	3
  1140     0011                     _PIR1bits	set	17
  1141     000F                     _PORTD	set	15
  1142     000B                     _INTCONbits	set	11
  1143     000E                     _PORTCbits	set	14
  1144     000C                     _PORTAbits	set	12
  1145     0090                     _TRISE	set	144
  1146     008F                     _TRISD	set	143
  1147     008E                     _TRISCbits	set	142
  1148     008D                     _TRISB	set	141
  1149     008C                     _TRISAbits	set	140
  1150     009D                     _ADCON0bits	set	157
  1151     0091                     _PIE1bits	set	145
  1152     010F                     _LATD	set	271
  1153     010E                     _LATCbits	set	270
  1154     010C                     _LATA	set	268
  1155     010D                     _LATB	set	269
  1156     019B                     _SPBRG	set	411
  1157     019A                     _TXREG	set	410
  1158     0199                     _RCREG	set	409
  1159     019C                     _SPBRGH	set	412
  1160     019E                     _TXSTAbits	set	414
  1161     019D                     _RCSTAbits	set	413
  1162     019F                     _BAUDCONbits	set	415
  1163     0190                     _ANSELE	set	400
  1164     018F                     _ANSELD	set	399
  1165     018E                     _ANSELC	set	398
  1166     018D                     _ANSELB	set	397
  1167     018C                     _ANSELA	set	396
  1168                           
  1169                           	psect	stringtext1
  1170     1000                     __pstringtext1:
  1171     1000                     STR_3:
  1172     1000  3445               	retlw	69	;'E'
  1173     1001  3472               	retlw	114	;'r'
  1174     1002  3461               	retlw	97	;'a'
  1175     1003  3473               	retlw	115	;'s'
  1176     1004  3465               	retlw	101	;'e'
  1177     1005  3420               	retlw	32	;' '
  1178     1006  3463               	retlw	99	;'c'
  1179     1007  3468               	retlw	104	;'h'
  1180     1008  3465               	retlw	101	;'e'
  1181     1009  3463               	retlw	99	;'c'
  1182     100A  346B               	retlw	107	;'k'
  1183     100B  3420               	retlw	32	;' '
  1184     100C  3466               	retlw	102	;'f'
  1185     100D  3461               	retlw	97	;'a'
  1186     100E  3469               	retlw	105	;'i'
  1187     100F  346C               	retlw	108	;'l'
  1188     1010  3420               	retlw	32	;' '
  1189     1011  3461               	retlw	97	;'a'
  1190     1012  3474               	retlw	116	;'t'
  1191     1013  3420               	retlw	32	;' '
  1192     1014  3461               	retlw	97	;'a'
  1193     1015  3464               	retlw	100	;'d'
  1194     1016  3464               	retlw	100	;'d'
  1195     1017  3472               	retlw	114	;'r'
  1196     1018  3465               	retlw	101	;'e'
  1197     1019  3473               	retlw	115	;'s'
  1198     101A  3473               	retlw	115	;'s'
  1199     101B  3420               	retlw	32	;' '
  1200     101C  3400               	retlw	0
  1201                           
  1202                           	psect	stringtext2
  1203     101D                     __pstringtext2:
  1204     101D                     STR_10:
  1205     101D  3457               	retlw	87	;'W'
  1206     101E  3472               	retlw	114	;'r'
  1207     101F  3469               	retlw	105	;'i'
  1208     1020  3474               	retlw	116	;'t'
  1209     1021  3465               	retlw	101	;'e'
  1210     1022  3420               	retlw	32	;' '
  1211     1023  3461               	retlw	97	;'a'
  1212     1024  3462               	retlw	98	;'b'
  1213     1025  346F               	retlw	111	;'o'
  1214     1026  3472               	retlw	114	;'r'
  1215     1027  3474               	retlw	116	;'t'
  1216     1028  3465               	retlw	101	;'e'
  1217     1029  3464               	retlw	100	;'d'
  1218     102A  340A               	retlw	10
  1219     102B  3400               	retlw	0
  1220                           
  1221                           	psect	stringtext3
  1222     102C                     __pstringtext3:
  1223     102C                     STR_2:
  1224     102C  3443               	retlw	67	;'C'
  1225     102D  3468               	retlw	104	;'h'
  1226     102E  3465               	retlw	101	;'e'
  1227     102F  3463               	retlw	99	;'c'
  1228     1030  346B               	retlw	107	;'k'
  1229     1031  3420               	retlw	32	;' '
  1230     1032  3461               	retlw	97	;'a'
  1231     1033  3462               	retlw	98	;'b'
  1232     1034  346F               	retlw	111	;'o'
  1233     1035  3472               	retlw	114	;'r'
  1234     1036  3474               	retlw	116	;'t'
  1235     1037  3465               	retlw	101	;'e'
  1236     1038  3464               	retlw	100	;'d'
  1237     1039  340A               	retlw	10
  1238     103A  3400               	retlw	0
  1239                           
  1240                           	psect	stringtext4
  1241     103B                     __pstringtext4:
  1242     103B                     STR_7:
  1243     103B  3452               	retlw	82	;'R'
  1244     103C  3465               	retlw	101	;'e'
  1245     103D  3461               	retlw	97	;'a'
  1246     103E  3464               	retlw	100	;'d'
  1247     103F  3420               	retlw	32	;' '
  1248     1040  3461               	retlw	97	;'a'
  1249     1041  3462               	retlw	98	;'b'
  1250     1042  346F               	retlw	111	;'o'
  1251     1043  3472               	retlw	114	;'r'
  1252     1044  3474               	retlw	116	;'t'
  1253     1045  3465               	retlw	101	;'e'
  1254     1046  3464               	retlw	100	;'d'
  1255     1047  340A               	retlw	10
  1256     1048  3400               	retlw	0
  1257                           
  1258                           	psect	stringtext5
  1259     1049                     __pstringtext5:
  1260     1049                     STR_12:
  1261     1049  3441               	retlw	65	;'A'
  1262     104A  346C               	retlw	108	;'l'
  1263     104B  3472               	retlw	114	;'r'
  1264     104C  3465               	retlw	101	;'e'
  1265     104D  3461               	retlw	97	;'a'
  1266     104E  3464               	retlw	100	;'d'
  1267     104F  3479               	retlw	121	;'y'
  1268     1050  3420               	retlw	32	;' '
  1269     1051  3469               	retlw	105	;'i'
  1270     1052  346E               	retlw	110	;'n'
  1271     1053  3469               	retlw	105	;'i'
  1272     1054  3474               	retlw	116	;'t'
  1273     1055  3400               	retlw	0
  1274                           
  1275                           	psect	stringtext6
  1276     1056                     __pstringtext6:
  1277     1056                     STR_4:
  1278     1056  3430               	retlw	48	;'0'
  1279     1057  3478               	retlw	120	;'x'
  1280     1058  3425               	retlw	37	;'%'
  1281     1059  3430               	retlw	48	;'0'
  1282     105A  3434               	retlw	52	;'4'
  1283     105B  3478               	retlw	120	;'x'
  1284     105C  3420               	retlw	32	;' '
  1285     105D  343D               	retlw	61	;'='
  1286     105E  3420               	retlw	32	;' '
  1287     105F  3400               	retlw	0
  1288                           
  1289                           	psect	stringtext7
  1290     1060                     __pstringtext7:
  1291     1060                     STR_5:
  1292     1060  3430               	retlw	48	;'0'
  1293     1061  3478               	retlw	120	;'x'
  1294     1062  3425               	retlw	37	;'%'
  1295     1063  3430               	retlw	48	;'0'
  1296     1064  3432               	retlw	50	;'2'
  1297     1065  3478               	retlw	120	;'x'
  1298     1066  340A               	retlw	10
  1299     1067  3400               	retlw	0
  1300                           
  1301                           	psect	stringtext8
  1302     1068                     __pstringtext8:
  1303     1068                     STR_8:
  1304     1068  3425               	retlw	37	;'%'
  1305     1069  3430               	retlw	48	;'0'
  1306     106A  3434               	retlw	52	;'4'
  1307     106B  3478               	retlw	120	;'x'
  1308     106C  343A               	retlw	58	;':'
  1309     106D  3420               	retlw	32	;' '
  1310     106E  3400               	retlw	0
  1311                           
  1312                           	psect	stringtext9
  1313     106F                     __pstringtext9:
  1314     106F                     STR_13:
  1315     106F  3432               	retlw	50	;'2'
  1316     1070  3437               	retlw	55	;'7'
  1317     1071  3431               	retlw	49	;'1'
  1318     1072  3436               	retlw	54	;'6'
  1319     1073  3400               	retlw	0
  1320                           
  1321                           	psect	stringtext10
  1322     1074                     __pstringtext10:
  1323     1074                     STR_9:
  1324     1074  3425               	retlw	37	;'%'
  1325     1075  3430               	retlw	48	;'0'
  1326     1076  3432               	retlw	50	;'2'
  1327     1077  3478               	retlw	120	;'x'
  1328     1078  3400               	retlw	0
  1329                           
  1330                           	psect	stringtext11
  1331     1079                     __pstringtext11:
  1332     1079                     STR_1:
  1333     1079  3425               	retlw	37	;'%'
  1334     107A  3464               	retlw	100	;'d'
  1335     107B  340A               	retlw	10
  1336     107C  3400               	retlw	0
  1337                           
  1338                           	psect	stringtext12
  1339     107D                     __pstringtext12:
  1340     107D                     STR_6:
  1341     107D  344F               	retlw	79	;'O'
  1342     107E  344B               	retlw	75	;'K'
  1343     107F  3400               	retlw	0
  1344                           
  1345                           	psect	stringtext13
  1346     0000                     __pstringtext13:
  1347     107D                     
  1348                           	psect	cinit
  1349     0042                     start_initialization:	
  1350                           ; #config settings
  1351                           
  1352     0042                     __initialization:	;BIGRAM
  1353                           
  1354                           ; Initialize objects allocated to BANK0
  1355     0042  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  1356     0045  00E6               	movwf	__pdataBANK0& (0+127)
  1357     0046  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1358     0049  00E7               	movwf	(__pdataBANK0+1)& (0+127)
  1359                           
  1360                           ; Clear objects allocated to BIGRAM
  1361     004A  30F0               	movlw	low (0+9200)
  1362     004B  0084               	movwf	4
  1363     004C  3023               	movlw	high (0+9200)
  1364     004D  0085               	movwf	5
  1365     004E  3000               	movlw	0
  1366     004F  00FE               	movwf	btemp
  1367     0050  3004               	movlw	4
  1368     0051  00FF               	movwf	btemp+1
  1369     0052  318D  255D  3180   	fcall	clear_ram0
  1370                           
  1371                           ; Clear objects allocated to COMMON
  1372     0055  01FC               	clrf	__pbssCOMMON& (0+127)
  1373     0056  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1374                           
  1375                           ; Clear objects allocated to BANK0
  1376     0057  01E3               	clrf	__pbssBANK0& (0+127)
  1377     0058  01E4               	clrf	(__pbssBANK0+1)& (0+127)
  1378     0059  01E5               	clrf	(__pbssBANK0+2)& (0+127)
  1379                           
  1380                           ; Clear objects allocated to BANK1
  1381     005A  0021               	movlb	1	; select bank1
  1382     005B  01D1               	clrf	__pbssBANK1& (0+127)
  1383     005C  01D2               	clrf	(__pbssBANK1+1)& (0+127)
  1384     005D  01D3               	clrf	(__pbssBANK1+2)& (0+127)
  1385     005E  01D4               	clrf	(__pbssBANK1+3)& (0+127)
  1386     005F  01D5               	clrf	(__pbssBANK1+4)& (0+127)
  1387     0060  01D6               	clrf	(__pbssBANK1+5)& (0+127)
  1388     0061  01D7               	clrf	(__pbssBANK1+6)& (0+127)
  1389     0062  01D8               	clrf	(__pbssBANK1+7)& (0+127)
  1390                           
  1391                           ; Clear objects allocated to BANK2
  1392     0063  3020               	movlw	low __pbssBANK2
  1393     0064  0084               	movwf	4
  1394     0065  3001               	movlw	high __pbssBANK2
  1395     0066  0085               	movwf	5
  1396     0067  3020               	movlw	32
  1397     0068  00FE               	movwf	btemp
  1398     0069  3000               	movlw	0
  1399     006A  00FF               	movwf	btemp+1
  1400     006B  318D  255D  3180   	fcall	clear_ram0
  1401     006E                     end_of_initialization:	
  1402                           ;End of C runtime variable initialization code
  1403                           
  1404     006E                     __end_of__initialization:
  1405     006E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1406     006F  0020               	movlb	0
  1407     0070  3184  2CC2         	ljmp	_main	;jump to C main() function
  1408                           
  1409                           	psect	bssCOMMON
  1410     007C                     __pbssCOMMON:
  1411     007C                     _head:
  1412     007C                     	ds	2
  1413                           
  1414                           	psect	bssBANK0
  1415     0063                     __pbssBANK0:
  1416     0063                     _width:
  1417     0063                     	ds	2
  1418     0065                     _flags:
  1419     0065                     	ds	1
  1420                           
  1421                           	psect	dataBANK0
  1422     0066                     __pdataBANK0:
  1423     0066                     _tail:
  1424     0066                     	ds	2
  1425                           
  1426                           	psect	bssBANK1
  1427     00D1                     __pbssBANK1:
  1428     00D1                     _prec:
  1429     00D1                     	ds	2
  1430     00D3                     _bytes_popped:
  1431     00D3                     	ds	2
  1432     00D5                     _bytes_pushed:
  1433     00D5                     	ds	2
  1434     00D7                     _queue_empty:
  1435     00D7                     	ds	1
  1436     00D8                     _cmd_active:
  1437     00D8                     	ds	1
  1438                           
  1439                           	psect	bssBANK2
  1440     0120                     __pbssBANK2:
  1441     0120                     _dbuf:
  1442     0120                     	ds	32
  1443                           
  1444                           	psect	clrtext
  1445     0D5D                     clear_ram0:	
  1446                           ;	Called with FSR0 containing the base address, and
  1447                           ;	btemp/btemp+1 has the size to clear
  1448                           
  1449     0D5D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1450     0D5E                     clrloop0:
  1451     0D5E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1452     0D5F  3101               	addfsr 0,1
  1453     0D60  3001               	movlw	1
  1454     0D61  02FE               	subwf	btemp,f
  1455     0D62  3000               	movlw	0
  1456     0D63  3BFF               	subwfb	btemp+1,f
  1457     0D64  087F               	movf	btemp+1,w
  1458     0D65  047E               	iorwf	btemp,w
  1459     0D66  1D03               	skipz
  1460     0D67  2D5E               	goto	clrloop0	;have we reached the end yet?
  1461     0D68  3400               	retlw	0	;all done for this memory range, return
  1462                           
  1463                           	psect	cstackBANK1
  1464     00A0                     __pcstackBANK1:
  1465     00A0                     sprintf@ap:
  1466                           
  1467                           ; 1 bytes @ 0x0
  1468     00A0                     	ds	1
  1469     00A1                     sprintf@s:
  1470                           
  1471                           ; 1 bytes @ 0x1
  1472     00A1                     	ds	1
  1473     00A2                     sprintf@f:
  1474                           
  1475                           ; 11 bytes @ 0x2
  1476     00A2                     	ds	11
  1477     00AD                     do_init@s:
  1478     00AD                     do_read@ads:	
  1479                           ; 8 bytes @ 0xD
  1480                           
  1481     00AD                     do_blank@ads:	
  1482                           ; 16 bytes @ 0xD
  1483                           
  1484                           
  1485                           ; 32 bytes @ 0xD
  1486     00AD                     	ds	8
  1487     00B5                     do_init@rate:
  1488                           
  1489                           ; 2 bytes @ 0x15
  1490     00B5                     	ds	8
  1491     00BD                     do_read@data:
  1492                           
  1493                           ; 1 bytes @ 0x1D
  1494     00BD                     	ds	1
  1495     00BE                     do_read@col:
  1496                           
  1497                           ; 1 bytes @ 0x1E
  1498     00BE                     	ds	1
  1499     00BF                     do_read@addr:
  1500                           
  1501                           ; 2 bytes @ 0x1F
  1502     00BF                     	ds	14
  1503     00CD                     do_blank@ok:
  1504                           
  1505                           ; 1 bytes @ 0x2D
  1506     00CD                     	ds	1
  1507     00CE                     do_blank@data:
  1508                           
  1509                           ; 1 bytes @ 0x2E
  1510     00CE                     	ds	1
  1511     00CF                     do_blank@addr:
  1512                           
  1513                           ; 2 bytes @ 0x2F
  1514     00CF                     	ds	2
  1515                           
  1516                           	psect	cstackCOMMON
  1517     0070                     __pcstackCOMMON:
  1518     0070                     ?_uart_getc:
  1519     0070                     ??_uart_getc:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522     0070                     ?_uart_putc:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525     0070                     ?_putch:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528     0070                     ?_setCTS:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531     0070                     ??_setCTS:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534     0070                     ?_clear:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537     0070                     ?_empty:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540     0070                     ?_push:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543     0070                     ?_pop:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546     0070                     ?_first:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549     0070                     ??_first:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552     0070                     ?_charToHexDigit:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555     0070                     ?_ports_init:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558     0070                     ?_isr:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561     0070                     ?_read_port:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564     0070                     ?_do_init:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567     0070                     ?_do_blank:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570     0070                     ?_do_read:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573     0070                     ?_write_port:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576     0070                     ?_do_write:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579     0070                     ?_main:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582     0070                     ?i1_addone:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585     0070                     setCTS@b:	
  1586                           ; 2 bytes @ 0x0
  1587                           
  1588     0070                     uart_getc@c:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591     0070                     putch@c:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594     0070                     i1addone@i:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597                           
  1598                           ; 2 bytes @ 0x0
  1599     0070                     	ds	1
  1600     0071                     uart_getc@ok:
  1601                           
  1602                           ; 1 bytes @ 0x1
  1603     0071                     	ds	1
  1604     0072                     ??_push:
  1605     0072                     ??i1_addone:	
  1606                           ; 1 bytes @ 0x2
  1607                           
  1608     0072                     ?_size:	
  1609                           ; 1 bytes @ 0x2
  1610                           
  1611                           
  1612                           ; 2 bytes @ 0x2
  1613     0072                     	ds	2
  1614     0074                     ??_size:
  1615                           
  1616                           ; 1 bytes @ 0x4
  1617     0074                     	ds	1
  1618     0075                     size@s:
  1619                           
  1620                           ; 2 bytes @ 0x5
  1621     0075                     	ds	1
  1622     0076                     push@s:
  1623                           
  1624                           ; 2 bytes @ 0x6
  1625     0076                     	ds	2
  1626     0078                     _push$1484:
  1627                           
  1628                           ; 2 bytes @ 0x8
  1629     0078                     	ds	2
  1630     007A                     push@c:
  1631                           
  1632                           ; 1 bytes @ 0xA
  1633     007A                     	ds	1
  1634     007B                     ??_isr:
  1635                           
  1636                           ; 1 bytes @ 0xB
  1637     007B                     	ds	1
  1638                           
  1639                           	psect	cstackBANK0
  1640     0020                     __pcstackBANK0:
  1641     0020                     isr@n:
  1642                           
  1643                           ; 2 bytes @ 0x0
  1644     0020                     	ds	2
  1645     0022                     isr@ok:
  1646                           
  1647                           ; 1 bytes @ 0x2
  1648     0022                     	ds	1
  1649     0023                     isr@c:
  1650                           
  1651                           ; 1 bytes @ 0x3
  1652     0023                     	ds	1
  1653     0024                     ?_uart_puts:
  1654     0024                     ??_uart_putc:	
  1655                           ; 1 bytes @ 0x4
  1656                           
  1657     0024                     ??_putch:	
  1658                           ; 1 bytes @ 0x4
  1659                           
  1660     0024                     ??_charToHexDigit:	
  1661                           ; 1 bytes @ 0x4
  1662                           
  1663     0024                     ??_ports_init:	
  1664                           ; 1 bytes @ 0x4
  1665                           
  1666     0024                     ?_setup_address:	
  1667                           ; 1 bytes @ 0x4
  1668                           
  1669     0024                     ??_read_port:	
  1670                           ; 1 bytes @ 0x4
  1671                           
  1672     0024                     ??_write_port:	
  1673                           ; 1 bytes @ 0x4
  1674                           
  1675     0024                     ?_memset:	
  1676                           ; 1 bytes @ 0x4
  1677                           
  1678     0024                     ?_uart_init_brg:	
  1679                           ; 2 bytes @ 0x4
  1680                           
  1681     0024                     ?_fputc:	
  1682                           ; 2 bytes @ 0x4
  1683                           
  1684     0024                     ?_addone:	
  1685                           ; 2 bytes @ 0x4
  1686                           
  1687     0024                     ?___wmul:	
  1688                           ; 2 bytes @ 0x4
  1689                           
  1690     0024                     ?___awdiv:	
  1691                           ; 2 bytes @ 0x4
  1692                           
  1693     0024                     ?___awmod:	
  1694                           ; 2 bytes @ 0x4
  1695                           
  1696     0024                     ?___lmul:	
  1697                           ; 2 bytes @ 0x4
  1698                           
  1699     0024                     charToHexDigit@c:	
  1700                           ; 4 bytes @ 0x4
  1701                           
  1702     0024                     read_port@data:	
  1703                           ; 1 bytes @ 0x4
  1704                           
  1705     0024                     uart_putc@c:	
  1706                           ; 1 bytes @ 0x4
  1707                           
  1708     0024                     addone@i:	
  1709                           ; 1 bytes @ 0x4
  1710                           
  1711     0024                     setup_address@addr:	
  1712                           ; 2 bytes @ 0x4
  1713                           
  1714     0024                     uart_puts@s:	
  1715                           ; 2 bytes @ 0x4
  1716                           
  1717     0024                     ___wmul@multiplier:	
  1718                           ; 2 bytes @ 0x4
  1719                           
  1720     0024                     ___awdiv@divisor:	
  1721                           ; 2 bytes @ 0x4
  1722                           
  1723     0024                     ___awmod@divisor:	
  1724                           ; 2 bytes @ 0x4
  1725                           
  1726     0024                     memset@dest:	
  1727                           ; 2 bytes @ 0x4
  1728                           
  1729     0024                     fputc@c:	
  1730                           ; 2 bytes @ 0x4
  1731                           
  1732     0024                     ___lmul@multiplier:	
  1733                           ; 2 bytes @ 0x4
  1734                           
  1735                           
  1736                           ; 4 bytes @ 0x4
  1737     0024                     	ds	1
  1738     0025                     write_port@data:
  1739                           
  1740                           ; 1 bytes @ 0x5
  1741     0025                     	ds	1
  1742     0026                     ??_uart_init_brg:
  1743     0026                     ??_uart_puts:	
  1744                           ; 1 bytes @ 0x6
  1745                           
  1746     0026                     ??_addone:	
  1747                           ; 1 bytes @ 0x6
  1748                           
  1749     0026                     ??_empty:	
  1750                           ; 1 bytes @ 0x6
  1751                           
  1752     0026                     ??_pop:	
  1753                           ; 1 bytes @ 0x6
  1754                           
  1755     0026                     ??_setup_address:	
  1756                           ; 1 bytes @ 0x6
  1757                           
  1758     0026                     setup_address@hi:	
  1759                           ; 1 bytes @ 0x6
  1760                           
  1761     0026                     fputc@fp:	
  1762                           ; 1 bytes @ 0x6
  1763                           
  1764     0026                     ___wmul@multiplicand:	
  1765                           ; 1 bytes @ 0x6
  1766                           
  1767     0026                     ___awdiv@dividend:	
  1768                           ; 2 bytes @ 0x6
  1769                           
  1770     0026                     ___awmod@dividend:	
  1771                           ; 2 bytes @ 0x6
  1772                           
  1773     0026                     memset@c:	
  1774                           ; 2 bytes @ 0x6
  1775                           
  1776                           
  1777                           ; 2 bytes @ 0x6
  1778     0026                     	ds	1
  1779     0027                     ??_fputc:
  1780     0027                     uart_puts@p:	
  1781                           ; 1 bytes @ 0x7
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x7
  1785     0027                     	ds	1
  1786     0028                     ??___wmul:
  1787     0028                     ??___awdiv:	
  1788                           ; 1 bytes @ 0x8
  1789                           
  1790     0028                     ??___awmod:	
  1791                           ; 1 bytes @ 0x8
  1792                           
  1793     0028                     pop@c:	
  1794                           ; 1 bytes @ 0x8
  1795                           
  1796     0028                     ___wmul@product:	
  1797                           ; 1 bytes @ 0x8
  1798                           
  1799     0028                     memset@n:	
  1800                           ; 2 bytes @ 0x8
  1801                           
  1802     0028                     ___lmul@multiplicand:	
  1803                           ; 2 bytes @ 0x8
  1804                           
  1805                           
  1806                           ; 4 bytes @ 0x8
  1807     0028                     	ds	1
  1808     0029                     ??_do_write:
  1809     0029                     ___awdiv@counter:	
  1810                           ; 1 bytes @ 0x9
  1811                           
  1812     0029                     ___awmod@counter:	
  1813                           ; 1 bytes @ 0x9
  1814                           
  1815                           
  1816                           ; 1 bytes @ 0x9
  1817     0029                     	ds	1
  1818     002A                     ??_memset:
  1819     002A                     ?_read_prec_or_width:	
  1820                           ; 1 bytes @ 0xA
  1821                           
  1822     002A                     do_write@hi:	
  1823                           ; 2 bytes @ 0xA
  1824                           
  1825     002A                     ___awdiv@sign:	
  1826                           ; 1 bytes @ 0xA
  1827                           
  1828     002A                     ___awmod@sign:	
  1829                           ; 1 bytes @ 0xA
  1830                           
  1831     002A                     read_prec_or_width@ap:	
  1832                           ; 1 bytes @ 0xA
  1833                           
  1834     002A                     memset@p:	
  1835                           ; 1 bytes @ 0xA
  1836                           
  1837                           
  1838                           ; 2 bytes @ 0xA
  1839     002A                     	ds	1
  1840     002B                     ?_abs:
  1841     002B                     do_write@lo:	
  1842                           ; 2 bytes @ 0xB
  1843                           
  1844     002B                     uart_init_brg@rate:	
  1845                           ; 1 bytes @ 0xB
  1846                           
  1847     002B                     ___awdiv@quotient:	
  1848                           ; 2 bytes @ 0xB
  1849                           
  1850     002B                     abs@a:	
  1851                           ; 2 bytes @ 0xB
  1852                           
  1853                           
  1854                           ; 2 bytes @ 0xB
  1855     002B                     	ds	1
  1856     002C                     ??_clear:
  1857     002C                     ??___lmul:	
  1858                           ; 1 bytes @ 0xC
  1859                           
  1860     002C                     ??_read_prec_or_width:	
  1861                           ; 1 bytes @ 0xC
  1862                           
  1863     002C                     ?_fputs:	
  1864                           ; 1 bytes @ 0xC
  1865                           
  1866     002C                     do_write@data:	
  1867                           ; 2 bytes @ 0xC
  1868                           
  1869     002C                     fputs@fp:	
  1870                           ; 1 bytes @ 0xC
  1871                           
  1872     002C                     ___lmul@product:	
  1873                           ; 1 bytes @ 0xC
  1874                           
  1875                           
  1876                           ; 4 bytes @ 0xC
  1877     002C                     	ds	1
  1878     002D                     ??_fputs:
  1879     002D                     ??_abs:	
  1880                           ; 1 bytes @ 0xD
  1881                           
  1882     002D                     do_write@c:	
  1883                           ; 1 bytes @ 0xD
  1884                           
  1885                           
  1886                           ; 1 bytes @ 0xD
  1887     002D                     	ds	1
  1888     002E                     do_write@addr:
  1889                           
  1890                           ; 2 bytes @ 0xE
  1891     002E                     	ds	1
  1892     002F                     read_prec_or_width@c:
  1893     002F                     fputs@c:	
  1894                           ; 1 bytes @ 0xF
  1895                           
  1896                           
  1897                           ; 1 bytes @ 0xF
  1898     002F                     	ds	1
  1899     0030                     ?___lldiv:
  1900     0030                     read_prec_or_width@n:	
  1901                           ; 4 bytes @ 0x10
  1902                           
  1903     0030                     fputs@i:	
  1904                           ; 2 bytes @ 0x10
  1905                           
  1906     0030                     ___lldiv@divisor:	
  1907                           ; 2 bytes @ 0x10
  1908                           
  1909                           
  1910                           ; 4 bytes @ 0x10
  1911     0030                     	ds	2
  1912     0032                     read_prec_or_width@fmt:
  1913     0032                     fputs@s:	
  1914                           ; 1 bytes @ 0x12
  1915                           
  1916                           
  1917                           ; 1 bytes @ 0x12
  1918     0032                     	ds	1
  1919     0033                     ?_pad:
  1920     0033                     pad@buf:	
  1921                           ; 1 bytes @ 0x13
  1922                           
  1923                           
  1924                           ; 1 bytes @ 0x13
  1925     0033                     	ds	1
  1926     0034                     pad@p:
  1927     0034                     ___lldiv@dividend:	
  1928                           ; 2 bytes @ 0x14
  1929                           
  1930                           
  1931                           ; 4 bytes @ 0x14
  1932     0034                     	ds	2
  1933     0036                     ??_pad:
  1934                           
  1935                           ; 1 bytes @ 0x16
  1936     0036                     	ds	1
  1937     0037                     pad@i:
  1938                           
  1939                           ; 2 bytes @ 0x17
  1940     0037                     	ds	1
  1941     0038                     ??___lldiv:
  1942                           
  1943                           ; 1 bytes @ 0x18
  1944     0038                     	ds	1
  1945     0039                     pad@fp:
  1946     0039                     ___lldiv@quotient:	
  1947                           ; 1 bytes @ 0x19
  1948                           
  1949                           
  1950                           ; 4 bytes @ 0x19
  1951     0039                     	ds	1
  1952     003A                     ?_dtoa:
  1953     003A                     ?_xtoa:	
  1954                           ; 1 bytes @ 0x1A
  1955                           
  1956     003A                     dtoa@d:	
  1957                           ; 1 bytes @ 0x1A
  1958                           
  1959     003A                     xtoa@d:	
  1960                           ; 2 bytes @ 0x1A
  1961                           
  1962                           
  1963                           ; 2 bytes @ 0x1A
  1964     003A                     	ds	2
  1965     003C                     ??_dtoa:
  1966     003C                     ??_xtoa:	
  1967                           ; 1 bytes @ 0x1C
  1968                           
  1969                           
  1970                           ; 1 bytes @ 0x1C
  1971     003C                     	ds	1
  1972     003D                     ___lldiv@counter:
  1973     003D                     dtoa@fp:	
  1974                           ; 1 bytes @ 0x1D
  1975                           
  1976     003D                     xtoa@fp:	
  1977                           ; 1 bytes @ 0x1D
  1978                           
  1979                           
  1980                           ; 1 bytes @ 0x1D
  1981     003D                     	ds	1
  1982     003E                     ?_uart_init:
  1983     003E                     xtoa@p:	
  1984                           ; 1 bytes @ 0x1E
  1985                           
  1986     003E                     _dtoa$1192:	
  1987                           ; 1 bytes @ 0x1E
  1988                           
  1989     003E                     uart_init@baud_rate:	
  1990                           ; 2 bytes @ 0x1E
  1991                           
  1992                           
  1993                           ; 4 bytes @ 0x1E
  1994     003E                     	ds	1
  1995     003F                     xtoa@w:
  1996                           
  1997                           ; 2 bytes @ 0x1F
  1998     003F                     	ds	1
  1999     0040                     dtoa@p:
  2000                           
  2001                           ; 1 bytes @ 0x20
  2002     0040                     	ds	1
  2003     0041                     xtoa@c:
  2004     0041                     dtoa@w:	
  2005                           ; 1 bytes @ 0x21
  2006                           
  2007                           
  2008                           ; 2 bytes @ 0x21
  2009     0041                     	ds	1
  2010     0042                     ??_uart_init:
  2011     0042                     xtoa@i:	
  2012                           ; 1 bytes @ 0x22
  2013                           
  2014                           
  2015                           ; 2 bytes @ 0x22
  2016     0042                     	ds	1
  2017     0043                     dtoa@s:
  2018                           
  2019                           ; 1 bytes @ 0x23
  2020     0043                     	ds	1
  2021     0044                     dtoa@i:
  2022                           
  2023                           ; 2 bytes @ 0x24
  2024     0044                     	ds	2
  2025     0046                     ?_vfpfcnvrt:
  2026     0046                     vfpfcnvrt@fmt:	
  2027                           ; 1 bytes @ 0x26
  2028                           
  2029     0046                     uart_init@n:	
  2030                           ; 1 bytes @ 0x26
  2031                           
  2032                           
  2033                           ; 4 bytes @ 0x26
  2034     0046                     	ds	1
  2035     0047                     vfpfcnvrt@ap:
  2036                           
  2037                           ; 1 bytes @ 0x27
  2038     0047                     	ds	1
  2039     0048                     ??_vfpfcnvrt:
  2040                           
  2041                           ; 1 bytes @ 0x28
  2042     0048                     	ds	2
  2043     004A                     uart_init@factor:
  2044                           
  2045                           ; 1 bytes @ 0x2A
  2046     004A                     	ds	2
  2047     004C                     vfpfcnvrt@done:
  2048                           
  2049                           ; 1 bytes @ 0x2C
  2050     004C                     	ds	1
  2051     004D                     vfpfcnvrt@convarg:
  2052                           
  2053                           ; 4 bytes @ 0x2D
  2054     004D                     	ds	4
  2055     0051                     vfpfcnvrt@fp:
  2056                           
  2057                           ; 1 bytes @ 0x31
  2058     0051                     	ds	1
  2059     0052                     vfpfcnvrt@cp:
  2060                           
  2061                           ; 2 bytes @ 0x32
  2062     0052                     	ds	2
  2063     0054                     ?_vfprintf:
  2064     0054                     vfprintf@fmt:	
  2065                           ; 2 bytes @ 0x34
  2066                           
  2067                           
  2068                           ; 2 bytes @ 0x34
  2069     0054                     	ds	2
  2070     0056                     vfprintf@ap:
  2071                           
  2072                           ; 1 bytes @ 0x36
  2073     0056                     	ds	1
  2074     0057                     ??_vfprintf:
  2075                           
  2076                           ; 1 bytes @ 0x37
  2077     0057                     	ds	1
  2078     0058                     vfprintf@fp:
  2079                           
  2080                           ; 1 bytes @ 0x38
  2081     0058                     	ds	1
  2082     0059                     vfprintf@cfmt:
  2083                           
  2084                           ; 2 bytes @ 0x39
  2085     0059                     	ds	2
  2086     005B                     ?_sprintf:
  2087     005B                     sprintf@fmt:	
  2088                           ; 2 bytes @ 0x3B
  2089                           
  2090                           
  2091                           ; 2 bytes @ 0x3B
  2092     005B                     	ds	4
  2093     005F                     ??_sprintf:
  2094                           
  2095                           ; 1 bytes @ 0x3F
  2096     005F                     	ds	1
  2097     0060                     ??_do_init:
  2098     0060                     ??_do_blank:	
  2099                           ; 1 bytes @ 0x40
  2100                           
  2101     0060                     ??_do_read:	
  2102                           ; 1 bytes @ 0x40
  2103                           
  2104                           
  2105                           ; 1 bytes @ 0x40
  2106     0060                     	ds	2
  2107     0062                     ??_main:
  2108     0062                     main@cmd:	
  2109                           ; 1 bytes @ 0x42
  2110                           
  2111                           
  2112                           ; 1 bytes @ 0x42
  2113     0062                     	ds	1
  2114                           
  2115                           	psect	maintext
  2116     04C2                     __pmaintext:	
  2117 ;;
  2118 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2119 ;;
  2120 ;; *************** function _main *****************
  2121 ;; Defined at:
  2122 ;;		line 486 in file "main.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  cmd             1   66[BANK0 ] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : B1F/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2140 ;;Total ram usage:        1 bytes
  2141 ;; Hardware stack levels required when called: 12
  2142 ;; This function calls:
  2143 ;;		_clear
  2144 ;;		_do_blank
  2145 ;;		_do_init
  2146 ;;		_do_read
  2147 ;;		_do_write
  2148 ;;		_pop
  2149 ;;		_ports_init
  2150 ;;		_uart_init
  2151 ;;		_uart_puts
  2152 ;; This function is called by:
  2153 ;;		Startup code after reset
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157     04C2                     _main:	
  2158                           ;psect for function _main
  2159                           
  2160     04C2                     l3180:	
  2161                           ;incstack = 0
  2162                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2163                           
  2164                           
  2165                           ;main.c: 489:     uart_init(0);
  2166     04C2  3000               	movlw	0
  2167     04C3  0020               	movlb	0	; select bank0
  2168     04C4  00C1               	movwf	uart_init@baud_rate+3
  2169     04C5  3000               	movlw	0
  2170     04C6  00C0               	movwf	uart_init@baud_rate+2
  2171     04C7  3000               	movlw	0
  2172     04C8  00BF               	movwf	uart_init@baud_rate+1
  2173     04C9  3000               	movlw	0
  2174     04CA  00BE               	movwf	uart_init@baud_rate
  2175     04CB  3181  2169  3184   	fcall	_uart_init
  2176                           
  2177                           ;main.c: 492:     ports_init();
  2178     04CE  318F  2707  3184   	fcall	_ports_init
  2179     04D1                     l3182:
  2180                           
  2181                           ;main.c: 495:     do_init();
  2182     04D1  318E  26E2  3184   	fcall	_do_init
  2183     04D4                     l3184:
  2184                           
  2185                           ;main.c: 498:     PIE1bits.RCIE=1;
  2186     04D4  0021               	movlb	1	; select bank1
  2187     04D5  1691               	bsf	17,5	;volatile
  2188     04D6                     l3186:
  2189                           
  2190                           ;main.c: 499:     INTCONbits.GIE = 1;
  2191     04D6  178B               	bsf	11,7	;volatile
  2192     04D7                     l3188:
  2193                           
  2194                           ;main.c: 504:         if (cmd_active) {
  2195     04D7  0021               	movlb	1	; select bank1
  2196     04D8  0858               	movf	_cmd_active^(0+128),w
  2197     04D9  1903               	btfsc	3,2
  2198     04DA  2CDC               	goto	u3171
  2199     04DB  2CDD               	goto	u3170
  2200     04DC                     u3171:
  2201     04DC  2D26               	goto	l163
  2202     04DD                     u3170:
  2203     04DD                     l3190:
  2204                           
  2205                           ;main.c: 506:             PORTCbits.RC3 = 0;
  2206     04DD  0020               	movlb	0	; select bank0
  2207     04DE  118E               	bcf	14,3	;volatile
  2208                           
  2209                           ;main.c: 507:             PORTCbits.RC4 = 1;
  2210     04DF  160E               	bsf	14,4	;volatile
  2211     04E0                     l3192:
  2212                           
  2213                           ;main.c: 510:             pop();
  2214     04E0  3187  279F  3184   	fcall	_pop
  2215                           
  2216                           ;main.c: 512:             char cmd = pop();
  2217     04E3  3187  279F  3184   	fcall	_pop
  2218     04E6  0020               	movlb	0	; select bank0
  2219     04E7  00E2               	movwf	main@cmd
  2220     04E8                     l3194:
  2221                           
  2222                           ;main.c: 515:             if (cmd == '1') {
  2223     04E8  3031               	movlw	49
  2224     04E9  0662               	xorwf	main@cmd,w
  2225     04EA  1D03               	btfss	3,2
  2226     04EB  2CED               	goto	u3181
  2227     04EC  2CEE               	goto	u3180
  2228     04ED                     u3181:
  2229     04ED  2CF2               	goto	l3198
  2230     04EE                     u3180:
  2231     04EE                     l3196:
  2232                           
  2233                           ;main.c: 516:                 do_read();
  2234     04EE  3183  234A  3184   	fcall	_do_read
  2235                           
  2236                           ;main.c: 517:             }
  2237     04F1  2D22               	goto	l3214
  2238     04F2                     l3198:
  2239     04F2  3032               	movlw	50
  2240     04F3  0662               	xorwf	main@cmd,w
  2241     04F4  1D03               	btfss	3,2
  2242     04F5  2CF7               	goto	u3191
  2243     04F6  2CF8               	goto	u3190
  2244     04F7                     u3191:
  2245     04F7  2CFC               	goto	l3202
  2246     04F8                     u3190:
  2247     04F8                     l3200:
  2248                           
  2249                           ;main.c: 519:                 do_write();
  2250     04F8  3185  2530  3184   	fcall	_do_write
  2251                           
  2252                           ;main.c: 520:             }
  2253     04FB  2D22               	goto	l3214
  2254     04FC                     l3202:
  2255     04FC  3033               	movlw	51
  2256     04FD  0662               	xorwf	main@cmd,w
  2257     04FE  1D03               	btfss	3,2
  2258     04FF  2D01               	goto	u3201
  2259     0500  2D02               	goto	u3200
  2260     0501                     u3201:
  2261     0501  2D06               	goto	l3206
  2262     0502                     u3200:
  2263     0502                     l3204:
  2264                           
  2265                           ;main.c: 522:                 do_blank();
  2266     0502  3182  22C3  3184   	fcall	_do_blank
  2267                           
  2268                           ;main.c: 523:             }
  2269     0505  2D22               	goto	l3214
  2270     0506                     l3206:
  2271     0506  3055               	movlw	85
  2272     0507  0662               	xorwf	main@cmd,w
  2273     0508  1D03               	btfss	3,2
  2274     0509  2D0B               	goto	u3211
  2275     050A  2D0C               	goto	u3210
  2276     050B                     u3211:
  2277     050B  2D14               	goto	l3210
  2278     050C                     u3210:
  2279     050C                     l3208:
  2280                           
  2281                           ;main.c: 525:                 uart_puts("Already init");
  2282     050C  3049               	movlw	low (STR_12| (0+32768))
  2283     050D  00A4               	movwf	uart_puts@s
  2284     050E  3090               	movlw	high (STR_12| (0+32768))
  2285     050F  00A5               	movwf	uart_puts@s+1
  2286     0510  318F  272E  3184   	fcall	_uart_puts
  2287                           
  2288                           ;main.c: 526:             }
  2289     0513  2D22               	goto	l3214
  2290     0514                     l3210:
  2291     0514  3034               	movlw	52
  2292     0515  0662               	xorwf	main@cmd,w
  2293     0516  1D03               	btfss	3,2
  2294     0517  2D19               	goto	u3221
  2295     0518  2D1A               	goto	u3220
  2296     0519                     u3221:
  2297     0519  2D22               	goto	l167
  2298     051A                     u3220:
  2299     051A                     l3212:
  2300                           
  2301                           ;main.c: 528:                 uart_puts("2716");
  2302     051A  306F               	movlw	low (STR_13| (0+32768))
  2303     051B  00A4               	movwf	uart_puts@s
  2304     051C  3090               	movlw	high (STR_13| (0+32768))
  2305     051D  00A5               	movwf	uart_puts@s+1
  2306     051E  318F  272E  3184   	fcall	_uart_puts
  2307     0521  2D22               	goto	l3214
  2308     0522                     l167:
  2309     0522                     l3214:
  2310                           
  2311                           ;main.c: 532:             clear();
  2312     0522  318D  25EF  3184   	fcall	_clear
  2313                           
  2314                           ;main.c: 533:         }
  2315     0525  2D29               	goto	l3216
  2316     0526                     l163:	
  2317                           ;main.c: 534:         else {
  2318                           
  2319                           
  2320                           ;main.c: 536:             PORTCbits.RC3 = 1;
  2321     0526  0020               	movlb	0	; select bank0
  2322     0527  158E               	bsf	14,3	;volatile
  2323                           
  2324                           ;main.c: 537:             PORTCbits.RC4 = 0;
  2325     0528  120E               	bcf	14,4	;volatile
  2326     0529                     l3216:
  2327                           
  2328                           ;main.c: 541:         _delay((unsigned long)((10)*(20000000/4000000.0)));
  2329     0529  3010               	movlw	16
  2330     052A                     u3237:
  2331     052A  0B89               	decfsz	9,f
  2332     052B  2D2A               	goto	u3237
  2333     052C  3200               	nop2
  2334     052D  2CD7               	goto	l3188
  2335     052E  3180  2840         	ljmp	start
  2336     0530                     __end_of_main:
  2337                           
  2338                           	psect	text1
  2339     0169                     __ptext1:	
  2340 ;; *************** function _uart_init *****************
  2341 ;; Defined at:
  2342 ;;		line 23 in file "uart.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  baud_rate       4   30[BANK0 ] const unsigned long 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  n               4   38[BANK0 ] unsigned long 
  2347 ;;  factor          1   42[BANK0 ] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, pclath, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2357 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2358 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2359 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2360 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2361 ;;Total ram usage:       13 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 4
  2364 ;; This function calls:
  2365 ;;		___lldiv
  2366 ;;		___lmul
  2367 ;; This function is called by:
  2368 ;;		_main
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372     0169                     _uart_init:	
  2373                           ;psect for function _uart_init
  2374                           
  2375     0169                     l2594:	
  2376                           ;incstack = 0
  2377                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
  2378                           
  2379                           
  2380                           ;uart.c: 23: void uart_init(const uint32_t baud_rate);uart.c: 24: {;uart.c: 26:     INTC
      +                          ONbits.GIE = 0;
  2381     0169  138B               	bcf	11,7	;volatile
  2382                           
  2383                           ;uart.c: 28:     PIE1bits.TXIE = 1;
  2384     016A  0021               	movlb	1	; select bank1
  2385     016B  1611               	bsf	17,4	;volatile
  2386                           
  2387                           ;uart.c: 29:     PIE1bits.RCIE = 1;
  2388     016C  1691               	bsf	17,5	;volatile
  2389                           
  2390                           ;uart.c: 32:     TRISCbits.TRISC6=1;
  2391     016D  170E               	bsf	14,6	;volatile
  2392                           
  2393                           ;uart.c: 33:     TRISCbits.TRISC7=1;
  2394     016E  178E               	bsf	14,7	;volatile
  2395                           
  2396                           ;uart.c: 35:     BAUDCONbits.BRG16 = 1;
  2397     016F  0023               	movlb	3	; select bank3
  2398     0170  159F               	bsf	31,3	;volatile
  2399                           
  2400                           ;uart.c: 36:     BAUDCONbits.WUE = 0;
  2401     0171  109F               	bcf	31,1	;volatile
  2402                           
  2403                           ;uart.c: 38:     RCSTAbits.CREN = 1;
  2404     0172  161D               	bsf	29,4	;volatile
  2405                           
  2406                           ;uart.c: 39:     RCSTAbits.SPEN = 1;
  2407     0173  179D               	bsf	29,7	;volatile
  2408                           
  2409                           ;uart.c: 41:     TXSTAbits.SYNC = 0;
  2410     0174  121E               	bcf	30,4	;volatile
  2411                           
  2412                           ;uart.c: 42:     TXSTAbits.BRGH = 1;
  2413     0175  151E               	bsf	30,2	;volatile
  2414                           
  2415                           ;uart.c: 43:     TXSTAbits.TXEN = 1;
  2416     0176  169E               	bsf	30,5	;volatile
  2417     0177                     l2596:
  2418                           
  2419                           ;uart.c: 46:     if (baud_rate != 0) {
  2420     0177  0020               	movlb	0	; select bank0
  2421     0178  0841               	movf	uart_init@baud_rate+3,w
  2422     0179  0440               	iorwf	uart_init@baud_rate+2,w
  2423     017A  043F               	iorwf	uart_init@baud_rate+1,w
  2424     017B  043E               	iorwf	uart_init@baud_rate,w
  2425     017C  1903               	skipnz
  2426     017D  297F               	goto	u2231
  2427     017E  2980               	goto	u2230
  2428     017F                     u2231:
  2429     017F  2A10               	goto	l2626
  2430     0180                     u2230:
  2431     0180                     l2598:
  2432                           
  2433                           ;uart.c: 48:         uint8_t factor;;uart.c: 49:         if (BAUDCONbits.BRG16 && TXSTAb
      +                          its.BRGH)
  2434     0180  0023               	movlb	3	; select bank3
  2435     0181  1D9F               	btfss	31,3	;volatile
  2436     0182  2984               	goto	u2241
  2437     0183  2985               	goto	u2240
  2438     0184                     u2241:
  2439     0184  298D               	goto	l208
  2440     0185                     u2240:
  2441     0185                     l2600:
  2442     0185  1D1E               	btfss	30,2	;volatile
  2443     0186  2988               	goto	u2251
  2444     0187  2989               	goto	u2250
  2445     0188                     u2251:
  2446     0188  298D               	goto	l208
  2447     0189                     u2250:
  2448     0189                     l2602:
  2449                           
  2450                           ;uart.c: 50:             factor = 4;
  2451     0189  3004               	movlw	4
  2452     018A  0020               	movlb	0	; select bank0
  2453     018B  00CA               	movwf	uart_init@factor
  2454     018C  29AE               	goto	l2616
  2455     018D                     l208:	
  2456                           ;uart.c: 51:         else if (BAUDCONbits.BRG16 && !TXSTAbits.BRGH)
  2457                           
  2458     018D  1D9F               	btfss	31,3	;volatile
  2459     018E  2990               	goto	u2261
  2460     018F  2991               	goto	u2260
  2461     0190                     u2261:
  2462     0190  2999               	goto	l210
  2463     0191                     u2260:
  2464     0191                     l2604:
  2465     0191  191E               	btfsc	30,2	;volatile
  2466     0192  2994               	goto	u2271
  2467     0193  2995               	goto	u2270
  2468     0194                     u2271:
  2469     0194  2999               	goto	l210
  2470     0195                     u2270:
  2471     0195                     l2606:
  2472                           
  2473                           ;uart.c: 52:             factor = 16;
  2474     0195  3010               	movlw	16
  2475     0196  0020               	movlb	0	; select bank0
  2476     0197  00CA               	movwf	uart_init@factor
  2477     0198  29AE               	goto	l2616
  2478     0199                     l210:	
  2479                           ;uart.c: 53:         else if (!BAUDCONbits.BRG16 && TXSTAbits.BRGH)
  2480                           
  2481     0199  199F               	btfsc	31,3	;volatile
  2482     019A  299C               	goto	u2281
  2483     019B  299D               	goto	u2280
  2484     019C                     u2281:
  2485     019C  29A2               	goto	l212
  2486     019D                     u2280:
  2487     019D                     l2608:
  2488     019D  1D1E               	btfss	30,2	;volatile
  2489     019E  29A0               	goto	u2291
  2490     019F  29A1               	goto	u2290
  2491     01A0                     u2291:
  2492     01A0  29A2               	goto	l212
  2493     01A1                     u2290:
  2494     01A1  2995               	goto	l2606
  2495     01A2                     l212:	
  2496                           ;uart.c: 55:         else if (!BAUDCONbits.BRG16 && !TXSTAbits.BRGH)
  2497                           
  2498     01A2  199F               	btfsc	31,3	;volatile
  2499     01A3  29A5               	goto	u2301
  2500     01A4  29A6               	goto	u2300
  2501     01A5                     u2301:
  2502     01A5  29AE               	goto	l211
  2503     01A6                     u2300:
  2504     01A6                     l2612:
  2505     01A6  191E               	btfsc	30,2	;volatile
  2506     01A7  29A9               	goto	u2311
  2507     01A8  29AA               	goto	u2310
  2508     01A9                     u2311:
  2509     01A9  29AE               	goto	l211
  2510     01AA                     u2310:
  2511     01AA                     l2614:
  2512                           
  2513                           ;uart.c: 56:             factor = 64;
  2514     01AA  3040               	movlw	64
  2515     01AB  0020               	movlb	0	; select bank0
  2516     01AC  00CA               	movwf	uart_init@factor
  2517     01AD  29AE               	goto	l2616
  2518     01AE                     l211:
  2519     01AE                     l2616:
  2520                           
  2521                           ;uart.c: 57:         if (TXSTAbits.SYNC)
  2522     01AE  0023               	movlb	3	; select bank3
  2523     01AF  1E1E               	btfss	30,4	;volatile
  2524     01B0  29B2               	goto	u2321
  2525     01B1  29B3               	goto	u2320
  2526     01B2                     u2321:
  2527     01B2  29B6               	goto	l2620
  2528     01B3                     u2320:
  2529     01B3                     l2618:
  2530                           
  2531                           ;uart.c: 58:             factor = 64;
  2532     01B3  3040               	movlw	64
  2533     01B4  0020               	movlb	0	; select bank0
  2534     01B5  00CA               	movwf	uart_init@factor
  2535     01B6                     l2620:
  2536                           
  2537                           ;uart.c: 61:         uint32_t n = (int32_t) 20000000 / (factor * baud_rate) - 1u ;
  2538     01B6  0020               	movlb	0	; select bank0
  2539     01B7  084A               	movf	uart_init@factor,w
  2540     01B8  00C2               	movwf	??_uart_init
  2541     01B9  01C3               	clrf	??_uart_init+1
  2542     01BA  01C4               	clrf	??_uart_init+2
  2543     01BB  01C5               	clrf	??_uart_init+3
  2544     01BC  0845               	movf	??_uart_init+3,w
  2545     01BD  00A7               	movwf	___lmul@multiplier+3
  2546     01BE  0844               	movf	??_uart_init+2,w
  2547     01BF  00A6               	movwf	___lmul@multiplier+2
  2548     01C0  0843               	movf	??_uart_init+1,w
  2549     01C1  00A5               	movwf	___lmul@multiplier+1
  2550     01C2  0842               	movf	??_uart_init,w
  2551     01C3  00A4               	movwf	___lmul@multiplier
  2552     01C4  0841               	movf	uart_init@baud_rate+3,w
  2553     01C5  00AB               	movwf	___lmul@multiplicand+3
  2554     01C6  0840               	movf	uart_init@baud_rate+2,w
  2555     01C7  00AA               	movwf	___lmul@multiplicand+2
  2556     01C8  083F               	movf	uart_init@baud_rate+1,w
  2557     01C9  00A9               	movwf	___lmul@multiplicand+1
  2558     01CA  083E               	movf	uart_init@baud_rate,w
  2559     01CB  00A8               	movwf	___lmul@multiplicand
  2560     01CC  318F  2758  3181   	fcall	___lmul
  2561     01CF  0020               	movlb	0	; select bank0
  2562     01D0  0827               	movf	?___lmul+3,w
  2563     01D1  00B3               	movwf	___lldiv@divisor+3
  2564     01D2  0826               	movf	?___lmul+2,w
  2565     01D3  00B2               	movwf	___lldiv@divisor+2
  2566     01D4  0825               	movf	?___lmul+1,w
  2567     01D5  00B1               	movwf	___lldiv@divisor+1
  2568     01D6  0824               	movf	?___lmul,w
  2569     01D7  00B0               	movwf	___lldiv@divisor
  2570     01D8  3001               	movlw	1
  2571     01D9  00B7               	movwf	___lldiv@dividend+3
  2572     01DA  3031               	movlw	49
  2573     01DB  00B6               	movwf	___lldiv@dividend+2
  2574     01DC  302D               	movlw	45
  2575     01DD  00B5               	movwf	___lldiv@dividend+1
  2576     01DE  3000               	movlw	0
  2577     01DF  00B4               	movwf	___lldiv@dividend
  2578     01E0  3186  2650  3181   	fcall	___lldiv
  2579     01E3  30FF               	movlw	255
  2580     01E4  0020               	movlb	0	; select bank0
  2581     01E5  0730               	addwf	?___lldiv,w
  2582     01E6  00C6               	movwf	uart_init@n
  2583     01E7  30FF               	movlw	255
  2584     01E8  3D31               	addwfc	?___lldiv+1,w
  2585     01E9  00C7               	movwf	uart_init@n+1
  2586     01EA  30FF               	movlw	255
  2587     01EB  3D32               	addwfc	?___lldiv+2,w
  2588     01EC  00C8               	movwf	uart_init@n+2
  2589     01ED  30FF               	movlw	255
  2590     01EE  3D33               	addwfc	?___lldiv+3,w
  2591     01EF  00C9               	movwf	uart_init@n+3
  2592     01F0                     l2622:
  2593                           
  2594                           ;uart.c: 62:         SPBRGH = (n & 0xFF00) >> 8;
  2595     01F0  0846               	movf	uart_init@n,w
  2596     01F1  00C2               	movwf	??_uart_init
  2597     01F2  0847               	movf	uart_init@n+1,w
  2598     01F3  00C3               	movwf	??_uart_init+1
  2599     01F4  0848               	movf	uart_init@n+2,w
  2600     01F5  00C4               	movwf	??_uart_init+2
  2601     01F6  0849               	movf	uart_init@n+3,w
  2602     01F7  00C5               	movwf	??_uart_init+3
  2603     01F8  3008               	movlw	8
  2604     01F9                     u2335:
  2605     01F9  36C5               	lsrf	??_uart_init+3,f
  2606     01FA  0CC4               	rrf	??_uart_init+2,f
  2607     01FB  0CC3               	rrf	??_uart_init+1,f
  2608     01FC  0CC2               	rrf	??_uart_init,f
  2609     01FD                     u2330:
  2610     01FD  0B89               	decfsz	9,f
  2611     01FE  29F9               	goto	u2335
  2612     01FF  0842               	movf	??_uart_init,w
  2613     0200  0023               	movlb	3	; select bank3
  2614     0201  009C               	movwf	28	;volatile
  2615     0202                     l2624:
  2616                           
  2617                           ;uart.c: 63:         SPBRG = n & 0x00FF;
  2618     0202  30FF               	movlw	255
  2619     0203  0020               	movlb	0	; select bank0
  2620     0204  0546               	andwf	uart_init@n,w
  2621     0205  00C2               	movwf	??_uart_init
  2622     0206  3000               	movlw	0
  2623     0207  0547               	andwf	uart_init@n+1,w
  2624     0208  00C3               	movwf	??_uart_init+1
  2625     0209  0842               	movf	??_uart_init,w
  2626     020A  0023               	movlb	3	; select bank3
  2627     020B  009B               	movwf	27	;volatile
  2628     020C  0020               	movlb	0	; select bank0
  2629     020D  0843               	movf	??_uart_init+1,w
  2630     020E  0023               	movlb	3	; select bank3
  2631     020F  009C               	movwf	28	;volatile
  2632     0210                     l2626:
  2633                           
  2634                           ;uart.c: 67:     INTCONbits.PEIE = 1;
  2635     0210  170B               	bsf	11,6	;volatile
  2636     0211                     l2628:
  2637                           
  2638                           ;uart.c: 71:     PIE1bits.RCIE=1;
  2639     0211  0021               	movlb	1	; select bank1
  2640     0212  1691               	bsf	17,5	;volatile
  2641     0213                     l2630:
  2642                           
  2643                           ;uart.c: 74:     PIE1bits.TXIE=0;
  2644     0213  1211               	bcf	17,4	;volatile
  2645     0214                     l2632:
  2646                           
  2647                           ;uart.c: 77:     INTCONbits.GIE = 1;
  2648     0214  178B               	bsf	11,7	;volatile
  2649     0215                     l216:
  2650     0215  0008               	return
  2651     0216                     __end_of_uart_init:
  2652                           
  2653                           	psect	text2
  2654     0F58                     __ptext2:	
  2655 ;; *************** function ___lmul *****************
  2656 ;; Defined at:
  2657 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul32.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  multiplier      4    4[BANK0 ] unsigned long 
  2660 ;;  multiplicand    4    8[BANK0 ] unsigned long 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  product         4   12[BANK0 ] unsigned long 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  4    4[BANK0 ] unsigned long 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2672 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2673 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2675 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2676 ;;Total ram usage:       12 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; Hardware stack levels required when called: 3
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_uart_init
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686     0F58                     ___lmul:	
  2687                           ;psect for function ___lmul
  2688                           
  2689     0F58                     l2314:	
  2690                           ;incstack = 0
  2691                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2692                           
  2693     0F58  3000               	movlw	0
  2694     0F59  0020               	movlb	0	; select bank0
  2695     0F5A  00AF               	movwf	___lmul@product+3
  2696     0F5B  3000               	movlw	0
  2697     0F5C  00AE               	movwf	___lmul@product+2
  2698     0F5D  3000               	movlw	0
  2699     0F5E  00AD               	movwf	___lmul@product+1
  2700     0F5F  3000               	movlw	0
  2701     0F60  00AC               	movwf	___lmul@product
  2702     0F61                     l2316:
  2703     0F61  1C24               	btfss	___lmul@multiplier,0
  2704     0F62  2F64               	goto	u1931
  2705     0F63  2F65               	goto	u1930
  2706     0F64                     u1931:
  2707     0F64  2F6D               	goto	l2320
  2708     0F65                     u1930:
  2709     0F65                     l2318:
  2710     0F65  0828               	movf	___lmul@multiplicand,w
  2711     0F66  07AC               	addwf	___lmul@product,f
  2712     0F67  0829               	movf	___lmul@multiplicand+1,w
  2713     0F68  3DAD               	addwfc	___lmul@product+1,f
  2714     0F69  082A               	movf	___lmul@multiplicand+2,w
  2715     0F6A  3DAE               	addwfc	___lmul@product+2,f
  2716     0F6B  082B               	movf	___lmul@multiplicand+3,w
  2717     0F6C  3DAF               	addwfc	___lmul@product+3,f
  2718     0F6D                     l2320:
  2719     0F6D  3001               	movlw	1
  2720     0F6E                     u1945:
  2721     0F6E  35A8               	lslf	___lmul@multiplicand,f
  2722     0F6F  0DA9               	rlf	___lmul@multiplicand+1,f
  2723     0F70  0DAA               	rlf	___lmul@multiplicand+2,f
  2724     0F71  0DAB               	rlf	___lmul@multiplicand+3,f
  2725     0F72  0B89               	decfsz	9,f
  2726     0F73  2F6E               	goto	u1945
  2727     0F74                     l2322:
  2728     0F74  3001               	movlw	1
  2729     0F75                     u1955:
  2730     0F75  36A7               	lsrf	___lmul@multiplier+3,f
  2731     0F76  0CA6               	rrf	___lmul@multiplier+2,f
  2732     0F77  0CA5               	rrf	___lmul@multiplier+1,f
  2733     0F78  0CA4               	rrf	___lmul@multiplier,f
  2734     0F79  0B89               	decfsz	9,f
  2735     0F7A  2F75               	goto	u1955
  2736     0F7B  0827               	movf	___lmul@multiplier+3,w
  2737     0F7C  0426               	iorwf	___lmul@multiplier+2,w
  2738     0F7D  0425               	iorwf	___lmul@multiplier+1,w
  2739     0F7E  0424               	iorwf	___lmul@multiplier,w
  2740     0F7F  1D03               	skipz
  2741     0F80  2F82               	goto	u1961
  2742     0F81  2F83               	goto	u1960
  2743     0F82                     u1961:
  2744     0F82  2F61               	goto	l2316
  2745     0F83                     u1960:
  2746     0F83                     l2324:
  2747     0F83  082F               	movf	___lmul@product+3,w
  2748     0F84  00A7               	movwf	?___lmul+3
  2749     0F85  082E               	movf	___lmul@product+2,w
  2750     0F86  00A6               	movwf	?___lmul+2
  2751     0F87  082D               	movf	___lmul@product+1,w
  2752     0F88  00A5               	movwf	?___lmul+1
  2753     0F89  082C               	movf	___lmul@product,w
  2754     0F8A  00A4               	movwf	?___lmul
  2755     0F8B                     l417:
  2756     0F8B  0008               	return
  2757     0F8C                     __end_of___lmul:
  2758                           
  2759                           	psect	text3
  2760     0650                     __ptext3:	
  2761 ;; *************** function ___lldiv *****************
  2762 ;; Defined at:
  2763 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/__lldiv.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  divisor         4   16[BANK0 ] unsigned long 
  2766 ;;  dividend        4   20[BANK0 ] unsigned long 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  quotient        4   25[BANK0 ] unsigned long 
  2769 ;;  counter         1   29[BANK0 ] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  4   16[BANK0 ] unsigned long 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2779 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2780 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2781 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2782 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2783 ;;Total ram usage:       14 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 3
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_uart_init
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793     0650                     ___lldiv:	
  2794                           ;psect for function ___lldiv
  2795                           
  2796     0650                     l2328:	
  2797                           ;incstack = 0
  2798                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2799                           
  2800     0650  3000               	movlw	0
  2801     0651  0020               	movlb	0	; select bank0
  2802     0652  00BC               	movwf	___lldiv@quotient+3
  2803     0653  3000               	movlw	0
  2804     0654  00BB               	movwf	___lldiv@quotient+2
  2805     0655  3000               	movlw	0
  2806     0656  00BA               	movwf	___lldiv@quotient+1
  2807     0657  3000               	movlw	0
  2808     0658  00B9               	movwf	___lldiv@quotient
  2809     0659  0833               	movf	___lldiv@divisor+3,w
  2810     065A  0432               	iorwf	___lldiv@divisor+2,w
  2811     065B  0431               	iorwf	___lldiv@divisor+1,w
  2812     065C  0430               	iorwf	___lldiv@divisor,w
  2813     065D  1903               	skipnz
  2814     065E  2E60               	goto	u1971
  2815     065F  2E61               	goto	u1970
  2816     0660                     u1971:
  2817     0660  2EA2               	goto	l2348
  2818     0661                     u1970:
  2819     0661                     l2330:
  2820     0661  01BD               	clrf	___lldiv@counter
  2821     0662  0ABD               	incf	___lldiv@counter,f
  2822     0663  2E6F               	goto	l2334
  2823     0664                     l2332:
  2824     0664  3001               	movlw	1
  2825     0665                     u1985:
  2826     0665  35B0               	lslf	___lldiv@divisor,f
  2827     0666  0DB1               	rlf	___lldiv@divisor+1,f
  2828     0667  0DB2               	rlf	___lldiv@divisor+2,f
  2829     0668  0DB3               	rlf	___lldiv@divisor+3,f
  2830     0669  0B89               	decfsz	9,f
  2831     066A  2E65               	goto	u1985
  2832     066B  3001               	movlw	1
  2833     066C  00B8               	movwf	??___lldiv
  2834     066D  0838               	movf	??___lldiv,w
  2835     066E  07BD               	addwf	___lldiv@counter,f
  2836     066F                     l2334:
  2837     066F  1FB3               	btfss	___lldiv@divisor+3,7
  2838     0670  2E72               	goto	u1991
  2839     0671  2E73               	goto	u1990
  2840     0672                     u1991:
  2841     0672  2E64               	goto	l2332
  2842     0673                     u1990:
  2843     0673                     l2336:
  2844     0673  3001               	movlw	1
  2845     0674                     u2005:
  2846     0674  35B9               	lslf	___lldiv@quotient,f
  2847     0675  0DBA               	rlf	___lldiv@quotient+1,f
  2848     0676  0DBB               	rlf	___lldiv@quotient+2,f
  2849     0677  0DBC               	rlf	___lldiv@quotient+3,f
  2850     0678  0B89               	decfsz	9,f
  2851     0679  2E74               	goto	u2005
  2852     067A                     l2338:
  2853     067A  0833               	movf	___lldiv@divisor+3,w
  2854     067B  0237               	subwf	___lldiv@dividend+3,w
  2855     067C  1D03               	skipz
  2856     067D  2E88               	goto	u2015
  2857     067E  0832               	movf	___lldiv@divisor+2,w
  2858     067F  0236               	subwf	___lldiv@dividend+2,w
  2859     0680  1D03               	skipz
  2860     0681  2E88               	goto	u2015
  2861     0682  0831               	movf	___lldiv@divisor+1,w
  2862     0683  0235               	subwf	___lldiv@dividend+1,w
  2863     0684  1D03               	skipz
  2864     0685  2E88               	goto	u2015
  2865     0686  0830               	movf	___lldiv@divisor,w
  2866     0687  0234               	subwf	___lldiv@dividend,w
  2867     0688                     u2015:
  2868     0688  1C03               	skipc
  2869     0689  2E8B               	goto	u2011
  2870     068A  2E8C               	goto	u2010
  2871     068B                     u2011:
  2872     068B  2E95               	goto	l2344
  2873     068C                     u2010:
  2874     068C                     l2340:
  2875     068C  0830               	movf	___lldiv@divisor,w
  2876     068D  02B4               	subwf	___lldiv@dividend,f
  2877     068E  0831               	movf	___lldiv@divisor+1,w
  2878     068F  3BB5               	subwfb	___lldiv@dividend+1,f
  2879     0690  0832               	movf	___lldiv@divisor+2,w
  2880     0691  3BB6               	subwfb	___lldiv@dividend+2,f
  2881     0692  0833               	movf	___lldiv@divisor+3,w
  2882     0693  3BB7               	subwfb	___lldiv@dividend+3,f
  2883     0694                     l2342:
  2884     0694  1439               	bsf	___lldiv@quotient,0
  2885     0695                     l2344:
  2886     0695  3001               	movlw	1
  2887     0696                     u2025:
  2888     0696  36B3               	lsrf	___lldiv@divisor+3,f
  2889     0697  0CB2               	rrf	___lldiv@divisor+2,f
  2890     0698  0CB1               	rrf	___lldiv@divisor+1,f
  2891     0699  0CB0               	rrf	___lldiv@divisor,f
  2892     069A  0B89               	decfsz	9,f
  2893     069B  2E96               	goto	u2025
  2894     069C                     l2346:
  2895     069C  3001               	movlw	1
  2896     069D  02BD               	subwf	___lldiv@counter,f
  2897     069E  1D03               	btfss	3,2
  2898     069F  2EA1               	goto	u2031
  2899     06A0  2EA2               	goto	u2030
  2900     06A1                     u2031:
  2901     06A1  2E73               	goto	l2336
  2902     06A2                     u2030:
  2903     06A2                     l2348:
  2904     06A2  083C               	movf	___lldiv@quotient+3,w
  2905     06A3  00B3               	movwf	?___lldiv+3
  2906     06A4  083B               	movf	___lldiv@quotient+2,w
  2907     06A5  00B2               	movwf	?___lldiv+2
  2908     06A6  083A               	movf	___lldiv@quotient+1,w
  2909     06A7  00B1               	movwf	?___lldiv+1
  2910     06A8  0839               	movf	___lldiv@quotient,w
  2911     06A9  00B0               	movwf	?___lldiv
  2912     06AA                     l439:
  2913     06AA  0008               	return
  2914     06AB                     __end_of___lldiv:
  2915                           
  2916                           	psect	text4
  2917     0F07                     __ptext4:	
  2918 ;; *************** function _ports_init *****************
  2919 ;; Defined at:
  2920 ;;		line 197 in file "main.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 3
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_main
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948     0F07                     _ports_init:	
  2949                           ;psect for function _ports_init
  2950                           
  2951     0F07                     l2408:	
  2952                           ;incstack = 0
  2953                           ; Regs used in _ports_init: [wreg+status,2]
  2954                           
  2955                           
  2956                           ;main.c: 200:     ADCON0bits.ADON = 0;
  2957     0F07  0021               	movlb	1	; select bank1
  2958     0F08  101D               	bcf	29,0	;volatile
  2959     0F09                     l2410:
  2960                           
  2961                           ;main.c: 201:     ANSELA = 0;
  2962     0F09  0023               	movlb	3	; select bank3
  2963     0F0A  018C               	clrf	12	;volatile
  2964                           
  2965                           ;main.c: 202:     ANSELB = 0;
  2966     0F0B  018D               	clrf	13	;volatile
  2967                           
  2968                           ;main.c: 203:     ANSELC = 0;
  2969     0F0C  018E               	clrf	14	;volatile
  2970                           
  2971                           ;main.c: 204:     ANSELD = 0;
  2972     0F0D  018F               	clrf	15	;volatile
  2973                           
  2974                           ;main.c: 205:     ANSELE = 0;
  2975     0F0E  0190               	clrf	16	;volatile
  2976     0F0F                     l2412:
  2977                           
  2978                           ;main.c: 209:     TRISAbits.TRISA0 = 0;
  2979     0F0F  0021               	movlb	1	; select bank1
  2980     0F10  100C               	bcf	12,0	;volatile
  2981     0F11                     l2414:
  2982                           
  2983                           ;main.c: 210:     TRISAbits.TRISA1 = 0;
  2984     0F11  108C               	bcf	12,1	;volatile
  2985     0F12                     l2416:
  2986                           
  2987                           ;main.c: 211:     TRISAbits.TRISA2 = 0;
  2988     0F12  110C               	bcf	12,2	;volatile
  2989     0F13                     l2418:
  2990                           
  2991                           ;main.c: 212:     TRISAbits.TRISA3 = 1;
  2992     0F13  158C               	bsf	12,3	;volatile
  2993     0F14                     l2420:
  2994                           
  2995                           ;main.c: 213:     TRISAbits.TRISA4 = 0;
  2996     0F14  120C               	bcf	12,4	;volatile
  2997     0F15                     l2422:
  2998                           
  2999                           ;main.c: 214:     TRISAbits.TRISA5 = 1;
  3000     0F15  168C               	bsf	12,5	;volatile
  3001     0F16                     l2424:
  3002                           
  3003                           ;main.c: 216:     PORTAbits.RA4 = 0;
  3004     0F16  0020               	movlb	0	; select bank0
  3005     0F17  120C               	bcf	12,4	;volatile
  3006                           
  3007                           ;main.c: 219:     TRISB = 0x00;
  3008     0F18  0021               	movlb	1	; select bank1
  3009     0F19  018D               	clrf	13	;volatile
  3010     0F1A                     l2426:
  3011                           
  3012                           ;main.c: 223:     TRISCbits.TRISC0 = 0;
  3013     0F1A  100E               	bcf	14,0	;volatile
  3014     0F1B                     l2428:
  3015                           
  3016                           ;main.c: 224:     TRISCbits.TRISC1 = 0;
  3017     0F1B  108E               	bcf	14,1	;volatile
  3018     0F1C                     l2430:
  3019                           
  3020                           ;main.c: 225:     TRISCbits.TRISC2 = 0;
  3021     0F1C  110E               	bcf	14,2	;volatile
  3022     0F1D                     l2432:
  3023                           
  3024                           ;main.c: 227:     TRISCbits.TRISC3 = 0;
  3025     0F1D  118E               	bcf	14,3	;volatile
  3026     0F1E                     l2434:
  3027                           
  3028                           ;main.c: 228:     TRISCbits.TRISC4 = 0;
  3029     0F1E  120E               	bcf	14,4	;volatile
  3030     0F1F                     l2436:
  3031                           
  3032                           ;main.c: 229:     TRISCbits.TRISC5 = 0;
  3033     0F1F  128E               	bcf	14,5	;volatile
  3034     0F20                     l2438:
  3035                           
  3036                           ;main.c: 231:     TRISCbits.TRISC6 = 1;
  3037     0F20  170E               	bsf	14,6	;volatile
  3038     0F21                     l2440:
  3039                           
  3040                           ;main.c: 232:     TRISCbits.TRISC7 = 1;
  3041     0F21  178E               	bsf	14,7	;volatile
  3042     0F22                     l2442:
  3043                           
  3044                           ;main.c: 234:     PORTCbits.RC0 = 1;
  3045     0F22  0020               	movlb	0	; select bank0
  3046     0F23  140E               	bsf	14,0	;volatile
  3047     0F24                     l2444:
  3048                           
  3049                           ;main.c: 235:     PORTCbits.RC1 = 1;
  3050     0F24  148E               	bsf	14,1	;volatile
  3051     0F25                     l2446:
  3052                           
  3053                           ;main.c: 236:     PORTCbits.RC2 = 1;
  3054     0F25  150E               	bsf	14,2	;volatile
  3055     0F26                     l2448:
  3056                           
  3057                           ;main.c: 237:     PORTCbits.RC3 = 0;
  3058     0F26  118E               	bcf	14,3	;volatile
  3059     0F27                     l2450:
  3060                           
  3061                           ;main.c: 238:     PORTCbits.RC4 = 0;
  3062     0F27  120E               	bcf	14,4	;volatile
  3063     0F28                     l2452:
  3064                           
  3065                           ;main.c: 239:     PORTCbits.RC5 = 0;
  3066     0F28  128E               	bcf	14,5	;volatile
  3067     0F29                     l2454:
  3068                           
  3069                           ;main.c: 242:     TRISD = 0xFF;
  3070     0F29  30FF               	movlw	255
  3071     0F2A  0021               	movlb	1	; select bank1
  3072     0F2B  008F               	movwf	15	;volatile
  3073     0F2C                     l2456:
  3074                           
  3075                           ;main.c: 245:     TRISE = 0;
  3076     0F2C  0190               	clrf	16	;volatile
  3077     0F2D                     l115:
  3078     0F2D  0008               	return
  3079     0F2E                     __end_of_ports_init:
  3080                           
  3081                           	psect	text5
  3082     0530                     __ptext5:	
  3083 ;; *************** function _do_write *****************
  3084 ;; Defined at:
  3085 ;;		line 443 in file "main.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  data            1   12[BANK0 ] unsigned char 
  3090 ;;  lo              1   11[BANK0 ] unsigned char 
  3091 ;;  hi              1   10[BANK0 ] unsigned char 
  3092 ;;  addr            2   14[BANK0 ] unsigned short 
  3093 ;;  c               1   13[BANK0 ] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3104 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3106 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3107 ;;Total ram usage:        7 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 6
  3110 ;; This function calls:
  3111 ;;		_charToHexDigit
  3112 ;;		_pop
  3113 ;;		_setup_address
  3114 ;;		_uart_puts
  3115 ;;		_write_port
  3116 ;; This function is called by:
  3117 ;;		_main
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121     0530                     _do_write:	
  3122                           ;psect for function _do_write
  3123                           
  3124     0530                     l3144:	
  3125                           ;incstack = 0
  3126                           ; Regs used in _do_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3127                           
  3128                           
  3129                           ;main.c: 445:     uint16_t addr;;main.c: 446:     char c;;main.c: 449:     TRISD = 0x00;
  3130     0530  0021               	movlb	1	; select bank1
  3131     0531  018F               	clrf	15	;volatile
  3132     0532                     l3146:
  3133                           
  3134                           ;main.c: 452:     LATCbits.LATC0 = 1;
  3135     0532  0022               	movlb	2	; select bank2
  3136     0533  140E               	bsf	14,0	;volatile
  3137     0534                     l3148:
  3138                           
  3139                           ;main.c: 453:     LATCbits.LATC2 = 0;
  3140     0534  110E               	bcf	14,2	;volatile
  3141                           
  3142                           ;main.c: 455:     for (addr = 0; addr < 2048; addr++) {
  3143     0535  0020               	movlb	0	; select bank0
  3144     0536  01AE               	clrf	do_write@addr
  3145     0537  01AF               	clrf	do_write@addr+1
  3146     0538                     l3154:
  3147                           
  3148                           ;main.c: 456:         if (cmd_active == 0) {
  3149     0538  0021               	movlb	1	; select bank1
  3150     0539  0858               	movf	_cmd_active^(0+128),w
  3151     053A  1D03               	btfss	3,2
  3152     053B  2D3D               	goto	u3141
  3153     053C  2D3E               	goto	u3140
  3154     053D                     u3141:
  3155     053D  2D47               	goto	l3160
  3156     053E                     u3140:
  3157     053E                     l3156:
  3158                           
  3159                           ;main.c: 457:             uart_puts("Write aborted\n");
  3160     053E  301D               	movlw	low (STR_10| (0+32768))
  3161     053F  0020               	movlb	0	; select bank0
  3162     0540  00A4               	movwf	uart_puts@s
  3163     0541  3090               	movlw	high (STR_10| (0+32768))
  3164     0542  00A5               	movwf	uart_puts@s+1
  3165     0543  318F  272E  3185   	fcall	_uart_puts
  3166     0546  2D8F               	goto	l157
  3167     0547                     l3160:
  3168                           
  3169                           ;main.c: 462:         c = pop();
  3170     0547  3187  279F  3185   	fcall	_pop
  3171     054A  0020               	movlb	0	; select bank0
  3172     054B  00AD               	movwf	do_write@c
  3173     054C                     l3162:
  3174                           
  3175                           ;main.c: 463:         uint8_t hi = charToHexDigit(c);
  3176     054C  082D               	movf	do_write@c,w
  3177     054D  318D  25C1  3185   	fcall	_charToHexDigit
  3178     0550  0020               	movlb	0	; select bank0
  3179     0551  00AA               	movwf	do_write@hi
  3180     0552                     l3164:
  3181                           
  3182                           ;main.c: 464:         c = pop();
  3183     0552  3187  279F  3185   	fcall	_pop
  3184     0555  0020               	movlb	0	; select bank0
  3185     0556  00AD               	movwf	do_write@c
  3186                           
  3187                           ;main.c: 465:         uint8_t lo = charToHexDigit(c);
  3188     0557  082D               	movf	do_write@c,w
  3189     0558  318D  25C1  3185   	fcall	_charToHexDigit
  3190     055B  0020               	movlb	0	; select bank0
  3191     055C  00AB               	movwf	do_write@lo
  3192     055D                     l3166:
  3193                           
  3194                           ;main.c: 466:         uint8_t data = hi*16+lo;
  3195     055D  082A               	movf	do_write@hi,w
  3196     055E  00A9               	movwf	??_do_write
  3197     055F  3003               	movlw	3
  3198     0560                     u3155:
  3199     0560  35A9               	lslf	??_do_write,f
  3200     0561  3EFF               	addlw	-1
  3201     0562  1D03               	skipz
  3202     0563  2D60               	goto	u3155
  3203     0564  3529               	lslf	??_do_write,w
  3204     0565  072B               	addwf	do_write@lo,w
  3205     0566  00AC               	movwf	do_write@data
  3206     0567                     l3168:
  3207                           
  3208                           ;main.c: 469:         setup_address(addr);
  3209     0567  082F               	movf	do_write@addr+1,w
  3210     0568  00A5               	movwf	setup_address@addr+1
  3211     0569  082E               	movf	do_write@addr,w
  3212     056A  00A4               	movwf	setup_address@addr
  3213     056B  318D  2569  3185   	fcall	_setup_address
  3214     056E                     l3170:
  3215                           
  3216                           ;main.c: 472:         write_port(data);
  3217     056E  0020               	movlb	0	; select bank0
  3218     056F  082C               	movf	do_write@data,w
  3219     0570  318E  2641  3185   	fcall	_write_port
  3220     0573                     l3172:
  3221                           
  3222                           ;main.c: 473:     }
  3223     0573  3001               	movlw	1
  3224     0574  0020               	movlb	0	; select bank0
  3225     0575  07AE               	addwf	do_write@addr,f
  3226     0576  3000               	movlw	0
  3227     0577  3DAF               	addwfc	do_write@addr+1,f
  3228     0578                     l3174:
  3229     0578  3008               	movlw	8
  3230     0579  022F               	subwf	do_write@addr+1,w
  3231     057A  3000               	movlw	0
  3232     057B  1903               	skipnz
  3233     057C  022E               	subwf	do_write@addr,w
  3234     057D  1C03               	skipc
  3235     057E  2D80               	goto	u3161
  3236     057F  2D81               	goto	u3160
  3237     0580                     u3161:
  3238     0580  2D38               	goto	l3154
  3239     0581                     u3160:
  3240     0581                     l155:
  3241                           
  3242                           ;main.c: 475:     LATCbits.LATC0 = 0;
  3243     0581  0022               	movlb	2	; select bank2
  3244     0582  100E               	bcf	14,0	;volatile
  3245                           
  3246                           ;main.c: 476:     LATCbits.LATC2 = 0;
  3247     0583  110E               	bcf	14,2	;volatile
  3248     0584                     l3176:
  3249                           
  3250                           ;main.c: 479:     TRISD = 0xFF;
  3251     0584  30FF               	movlw	255
  3252     0585  0021               	movlb	1	; select bank1
  3253     0586  008F               	movwf	15	;volatile
  3254     0587                     l3178:
  3255                           
  3256                           ;main.c: 481:     uart_puts("OK");
  3257     0587  307D               	movlw	low (STR_6| (0+32768))
  3258     0588  0020               	movlb	0	; select bank0
  3259     0589  00A4               	movwf	uart_puts@s
  3260     058A  3090               	movlw	high (STR_6| (0+32768))
  3261     058B  00A5               	movwf	uart_puts@s+1
  3262     058C  318F  272E  3185   	fcall	_uart_puts
  3263     058F                     l157:
  3264     058F  0008               	return
  3265     0590                     __end_of_do_write:
  3266                           
  3267                           	psect	text6
  3268     0E41                     __ptext6:	
  3269 ;; *************** function _write_port *****************
  3270 ;; Defined at:
  3271 ;;		line 423 in file "main.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  data            1    wreg     unsigned char 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  data            1    5[BANK0 ] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3287 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3288 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3289 ;;Total ram usage:        2 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 3
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_do_write
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299     0E41                     _write_port:	
  3300                           ;psect for function _write_port
  3301                           
  3302                           
  3303                           ;incstack = 0
  3304                           ; Regs used in _write_port: [wreg]
  3305                           ;write_port@data stored from wreg
  3306     0E41  0020               	movlb	0	; select bank0
  3307     0E42  00A5               	movwf	write_port@data
  3308     0E43                     l2304:
  3309                           
  3310                           ;main.c: 423: void write_port(uint8_t data);main.c: 424: {;main.c: 426:      _delay((uns
      +                          igned long)((1)*(20000000/4000000.0)));
  3311     0E43  3200               	nop2	;2 cycle nop
  3312     0E44  3200               	nop2	;2 cycle nop
  3313     0E45  0000               	nop
  3314     0E46                     l2306:
  3315                           
  3316                           ;main.c: 427:     LATD = data;
  3317     0E46  0020               	movlb	0	; select bank0
  3318     0E47  0825               	movf	write_port@data,w
  3319     0E48  0022               	movlb	2	; select bank2
  3320     0E49  008F               	movwf	15	;volatile
  3321                           
  3322                           ;main.c: 430:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  3323     0E4A  3010               	movlw	16
  3324     0E4B                     u3247:
  3325     0E4B  0B89               	decfsz	9,f
  3326     0E4C  2E4B               	goto	u3247
  3327     0E4D  3200               	nop2
  3328     0E4E                     l2308:
  3329                           
  3330                           ;main.c: 431:     LATCbits.LATC2 = 1;
  3331     0E4E  0022               	movlb	2	; select bank2
  3332     0E4F  150E               	bsf	14,2	;volatile
  3333                           
  3334                           ;main.c: 432:     _delay((unsigned long)((1)*(20000000/4000.0)));
  3335     0E50  3007               	movlw	7
  3336     0E51  0020               	movlb	0	; select bank0
  3337     0E52  00A4               	movwf	??_write_port
  3338     0E53  307D               	movlw	125
  3339     0E54                     u3257:
  3340     0E54  0B89               	decfsz	9,f
  3341     0E55  2E54               	goto	u3257
  3342     0E56  0BA4               	decfsz	??_write_port,f
  3343     0E57  2E54               	goto	u3257
  3344     0E58                     l2310:
  3345                           
  3346                           ;main.c: 435:     LATCbits.LATC2 = 0;
  3347     0E58  0022               	movlb	2	; select bank2
  3348     0E59  110E               	bcf	14,2	;volatile
  3349     0E5A                     l2312:
  3350                           
  3351                           ;main.c: 436:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3352     0E5A  3200               	nop2	;2 cycle nop
  3353     0E5B  3200               	nop2	;2 cycle nop
  3354     0E5C  0000               	nop
  3355     0E5D                     l151:
  3356     0E5D  0008               	return
  3357     0E5E                     __end_of_write_port:
  3358                           
  3359                           	psect	text7
  3360     079F                     __ptext7:	
  3361 ;; *************** function _pop *****************
  3362 ;; Defined at:
  3363 ;;		line 146 in file "main.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  c               1    8[BANK0 ] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      unsigned char 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3379 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3380 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3381 ;;Total ram usage:        3 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 5
  3384 ;; This function calls:
  3385 ;;		_addone
  3386 ;;		_empty
  3387 ;; This function is called by:
  3388 ;;		_do_write
  3389 ;;		_main
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393     079F                     _pop:	
  3394                           ;psect for function _pop
  3395                           
  3396     079F                     l2192:	
  3397                           ;incstack = 0
  3398                           ; Regs used in _pop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3399                           
  3400                           
  3401                           ;main.c: 150:     while (empty()) {
  3402     079F  2FBE               	goto	l2198
  3403     07A0                     l100:
  3404                           
  3405                           ;main.c: 152:         PORTCbits.RC5 = 1;
  3406     07A0  0020               	movlb	0	; select bank0
  3407     07A1  168E               	bsf	14,5	;volatile
  3408     07A2                     l2194:
  3409                           
  3410                           ;main.c: 153:         _delay((unsigned long)((100)*(20000000/4000.0)));
  3411     07A2  3003               	movlw	3
  3412     07A3  0020               	movlb	0	; select bank0
  3413     07A4  00A7               	movwf	??_pop+1
  3414     07A5  308A               	movlw	138
  3415     07A6  00A6               	movwf	??_pop
  3416     07A7  3055               	movlw	85
  3417     07A8                     u3267:
  3418     07A8  0B89               	decfsz	9,f
  3419     07A9  2FA8               	goto	u3267
  3420     07AA  0BA6               	decfsz	??_pop,f
  3421     07AB  2FA8               	goto	u3267
  3422     07AC  0BA7               	decfsz	??_pop+1,f
  3423     07AD  2FA8               	goto	u3267
  3424     07AE  3200               	nop2
  3425     07AF                     l2196:
  3426                           
  3427                           ;main.c: 154:         PORTCbits.RC5 = 0;
  3428     07AF  0020               	movlb	0	; select bank0
  3429     07B0  128E               	bcf	14,5	;volatile
  3430                           
  3431                           ;main.c: 155:         _delay((unsigned long)((100)*(20000000/4000.0)));
  3432     07B1  3003               	movlw	3
  3433     07B2  0020               	movlb	0	; select bank0
  3434     07B3  00A7               	movwf	??_pop+1
  3435     07B4  308A               	movlw	138
  3436     07B5  00A6               	movwf	??_pop
  3437     07B6  3055               	movlw	85
  3438     07B7                     u3277:
  3439     07B7  0B89               	decfsz	9,f
  3440     07B8  2FB7               	goto	u3277
  3441     07B9  0BA6               	decfsz	??_pop,f
  3442     07BA  2FB7               	goto	u3277
  3443     07BB  0BA7               	decfsz	??_pop+1,f
  3444     07BC  2FB7               	goto	u3277
  3445     07BD  3200               	nop2
  3446     07BE                     l2198:
  3447                           
  3448                           ;main.c: 150:     while (empty()) {
  3449     07BE  318D  25D8  3187   	fcall	_empty
  3450     07C1  3A00               	xorlw	0
  3451     07C2  1D03               	skipz
  3452     07C3  2FC5               	goto	u1831
  3453     07C4  2FC6               	goto	u1830
  3454     07C5                     u1831:
  3455     07C5  2FA0               	goto	l100
  3456     07C6                     u1830:
  3457     07C6                     l101:
  3458                           
  3459                           ;main.c: 159:     INTCONbits.GIE = 0;
  3460     07C6  138B               	bcf	11,7	;volatile
  3461                           
  3462                           ;main.c: 160:     PIE1bits.RCIE=0;
  3463     07C7  0021               	movlb	1	; select bank1
  3464     07C8  1291               	bcf	17,5	;volatile
  3465     07C9                     l2200:
  3466                           
  3467                           ;main.c: 163:     char c = queue[head];
  3468     07C9  30F0               	movlw	240
  3469     07CA  0020               	movlb	0	; select bank0
  3470     07CB  00A6               	movwf	??_pop
  3471     07CC  3023               	movlw	35
  3472     07CD  00A7               	movwf	??_pop+1
  3473     07CE  087C               	movf	_head,w
  3474     07CF  0726               	addwf	??_pop,w
  3475     07D0  0086               	movwf	6
  3476     07D1  087D               	movf	_head+1,w
  3477     07D2  3D27               	addwfc	??_pop+1,w
  3478     07D3  0087               	movwf	7
  3479     07D4  0801               	movf	1,w
  3480     07D5  00A8               	movwf	pop@c
  3481     07D6                     l2202:
  3482                           
  3483                           ;main.c: 164:     head = addone(head);
  3484     07D6  087D               	movf	_head+1,w
  3485     07D7  00A5               	movwf	addone@i+1
  3486     07D8  087C               	movf	_head,w
  3487     07D9  00A4               	movwf	addone@i
  3488     07DA  318D  25AE  3187   	fcall	_addone
  3489     07DD  0020               	movlb	0	; select bank0
  3490     07DE  0825               	movf	?_addone+1,w
  3491     07DF  00FD               	movwf	_head+1
  3492     07E0  0824               	movf	?_addone,w
  3493     07E1  00FC               	movwf	_head
  3494     07E2                     l2204:
  3495                           
  3496                           ;main.c: 165:     bytes_popped++;
  3497     07E2  3001               	movlw	1
  3498     07E3  0021               	movlb	1	; select bank1
  3499     07E4  07D3               	addwf	_bytes_popped^(0+128),f
  3500     07E5  3000               	movlw	0
  3501     07E6  3DD4               	addwfc	(_bytes_popped+1)^(0+128),f
  3502     07E7                     l2206:
  3503                           
  3504                           ;main.c: 168:     INTCONbits.GIE = 1;
  3505     07E7  178B               	bsf	11,7	;volatile
  3506     07E8                     l2208:
  3507                           
  3508                           ;main.c: 169:     PIE1bits.RCIE=1;
  3509     07E8  1691               	bsf	17,5	;volatile
  3510     07E9                     l2210:
  3511                           
  3512                           ;main.c: 171:     return c;
  3513     07E9  0020               	movlb	0	; select bank0
  3514     07EA  0828               	movf	pop@c,w
  3515     07EB                     l102:
  3516     07EB  0008               	return
  3517     07EC                     __end_of_pop:
  3518                           
  3519                           	psect	text8
  3520     0DD8                     __ptext8:	
  3521 ;; *************** function _empty *****************
  3522 ;; Defined at:
  3523 ;;		line 99 in file "main.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      _Bool 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0, pclath, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used: 1
  3543 ;; Hardware stack levels required when called: 4
  3544 ;; This function calls:
  3545 ;;		_addone
  3546 ;; This function is called by:
  3547 ;;		_pop
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551     0DD8                     _empty:	
  3552                           ;psect for function _empty
  3553                           
  3554     0DD8                     l2162:	
  3555                           ;incstack = 0
  3556                           ; Regs used in _empty: [wreg+status,2+status,0+pclath+cstack]
  3557                           
  3558                           
  3559                           ;main.c: 101:     if (addone(tail) == head)
  3560     0DD8  0020               	movlb	0	; select bank0
  3561     0DD9  0867               	movf	_tail+1,w
  3562     0DDA  00A5               	movwf	addone@i+1
  3563     0DDB  0866               	movf	_tail,w
  3564     0DDC  00A4               	movwf	addone@i
  3565     0DDD  318D  25AE  318D   	fcall	_addone
  3566     0DE0  087D               	movf	_head+1,w
  3567     0DE1  0020               	movlb	0	; select bank0
  3568     0DE2  0625               	xorwf	?_addone+1,w
  3569     0DE3  1D03               	skipz
  3570     0DE4  2DE7               	goto	u1805
  3571     0DE5  087C               	movf	_head,w
  3572     0DE6  0624               	xorwf	?_addone,w
  3573     0DE7                     u1805:
  3574     0DE7  1D03               	skipz
  3575     0DE8  2DEA               	goto	u1801
  3576     0DE9  2DEB               	goto	u1800
  3577     0DEA                     u1801:
  3578     0DEA  2DED               	goto	l2168
  3579     0DEB                     u1800:
  3580     0DEB                     l2164:
  3581                           
  3582                           ;main.c: 102:         return 1;
  3583     0DEB  3001               	movlw	1
  3584     0DEC  2DEE               	goto	l89
  3585     0DED                     l2168:
  3586                           
  3587                           ;main.c: 103:     return 0;
  3588     0DED  3000               	movlw	0
  3589     0DEE                     l89:
  3590     0DEE  0008               	return
  3591     0DEF                     __end_of_empty:
  3592                           
  3593                           	psect	text9
  3594     0DAE                     __ptext9:	
  3595 ;; *************** function _addone *****************
  3596 ;; Defined at:
  3597 ;;		line 73 in file "main.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  i               2    4[BANK0 ] short 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  2    4[BANK0 ] short 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3614 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3615 ;;Total ram usage:        2 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 3
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_empty
  3622 ;;		_pop
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626     0DAE                     _addone:	
  3627                           ;psect for function _addone
  3628                           
  3629     0DAE                     l2088:	
  3630                           ;incstack = 0
  3631                           ; Regs used in _addone: [wreg+status,2+status,0]
  3632                           
  3633                           
  3634                           ;main.c: 73: int16_t addone(int16_t i);main.c: 74: {;main.c: 75:     if (i == 1024 -1)
  3635     0DAE  0020               	movlb	0	; select bank0
  3636     0DAF  0A24               	incf	addone@i,w
  3637     0DB0  3003               	movlw	3
  3638     0DB1  1903               	skipnz
  3639     0DB2  0625               	xorwf	addone@i+1,w
  3640     0DB3  1D03               	btfss	3,2
  3641     0DB4  2DB6               	goto	u1731
  3642     0DB5  2DB7               	goto	u1730
  3643     0DB6                     u1731:
  3644     0DB6  2DBA               	goto	l2094
  3645     0DB7                     u1730:
  3646     0DB7                     l2090:
  3647                           
  3648                           ;main.c: 76:         return 0;
  3649     0DB7  01A4               	clrf	?_addone
  3650     0DB8  01A5               	clrf	?_addone+1
  3651     0DB9  2DC0               	goto	l80
  3652     0DBA                     l2094:
  3653                           
  3654                           ;main.c: 77:     return i+1;
  3655     0DBA  0824               	movf	addone@i,w
  3656     0DBB  3E01               	addlw	1
  3657     0DBC  00A4               	movwf	?_addone
  3658     0DBD  3000               	movlw	0
  3659     0DBE  3D25               	addwfc	addone@i+1,w
  3660     0DBF  00A5               	movwf	?_addone+1
  3661     0DC0                     l80:
  3662     0DC0  0008               	return
  3663     0DC1                     __end_of_addone:
  3664                           
  3665                           	psect	text10
  3666     0DC1                     __ptext10:	
  3667 ;; *************** function _charToHexDigit *****************
  3668 ;; Defined at:
  3669 ;;		line 184 in file "main.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  c               1    wreg     unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  c               1    4[BANK0 ] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      unsigned char 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3686 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3687 ;;Total ram usage:        1 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 3
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_do_write
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697     0DC1                     _charToHexDigit:	
  3698                           ;psect for function _charToHexDigit
  3699                           
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _charToHexDigit: [wreg+status,2+status,0]
  3703                           ;charToHexDigit@c stored from wreg
  3704     0DC1  0020               	movlb	0	; select bank0
  3705     0DC2  00A4               	movwf	charToHexDigit@c
  3706     0DC3                     l2214:
  3707                           
  3708                           ;main.c: 184: uint8_t charToHexDigit(char c);main.c: 185: {;main.c: 186:   if (c >= 'a')
  3709     0DC3  3061               	movlw	97
  3710     0DC4  0224               	subwf	charToHexDigit@c,w
  3711     0DC5  1C03               	skipc
  3712     0DC6  2DC8               	goto	u1841
  3713     0DC7  2DC9               	goto	u1840
  3714     0DC8                     u1841:
  3715     0DC8  2DCC               	goto	l2222
  3716     0DC9                     u1840:
  3717     0DC9                     l2216:
  3718                           
  3719                           ;main.c: 187:     return c - 'a' + 10;
  3720     0DC9  0824               	movf	charToHexDigit@c,w
  3721     0DCA  3EA9               	addlw	169
  3722     0DCB  2DD7               	goto	l109
  3723     0DCC                     l2222:
  3724     0DCC  3041               	movlw	65
  3725     0DCD  0224               	subwf	charToHexDigit@c,w
  3726     0DCE  1C03               	skipc
  3727     0DCF  2DD1               	goto	u1851
  3728     0DD0  2DD2               	goto	u1850
  3729     0DD1                     u1851:
  3730     0DD1  2DD5               	goto	l2230
  3731     0DD2                     u1850:
  3732     0DD2                     l2224:
  3733                           
  3734                           ;main.c: 189:     return c - 'A' + 10;
  3735     0DD2  0824               	movf	charToHexDigit@c,w
  3736     0DD3  3EC9               	addlw	201
  3737     0DD4  2DD7               	goto	l109
  3738     0DD5                     l2230:
  3739                           
  3740                           ;main.c: 191:     return c - '0';
  3741     0DD5  0824               	movf	charToHexDigit@c,w
  3742     0DD6  3ED0               	addlw	208
  3743     0DD7                     l109:
  3744     0DD7  0008               	return
  3745     0DD8                     __end_of_charToHexDigit:
  3746                           
  3747                           	psect	text11
  3748     034A                     __ptext11:	
  3749 ;; *************** function _do_read *****************
  3750 ;; Defined at:
  3751 ;;		line 377 in file "main.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  data            1   29[BANK1 ] unsigned char 
  3756 ;;  ads            16   13[BANK1 ] unsigned char [16]
  3757 ;;  addr            2   31[BANK1 ] unsigned short 
  3758 ;;  col             1   30[BANK1 ] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3769 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3770 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3771 ;;      Totals:         0       2      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3772 ;;Total ram usage:       22 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 11
  3775 ;; This function calls:
  3776 ;;		_read_port
  3777 ;;		_setup_address
  3778 ;;		_sprintf
  3779 ;;		_uart_putc
  3780 ;;		_uart_puts
  3781 ;; This function is called by:
  3782 ;;		_main
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786     034A                     _do_read:	
  3787                           ;psect for function _do_read
  3788                           
  3789     034A                     l3102:	
  3790                           ;incstack = 0
  3791                           ; Regs used in _do_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3792                           
  3793                           
  3794                           ;main.c: 379:     uint16_t addr;;main.c: 380:     char ads[16];;main.c: 381:     uint8_t
      +                           col=0;
  3795     034A  0021               	movlb	1	; select bank1
  3796     034B  01BE               	clrf	do_read@col^(0+128)
  3797     034C                     l3104:
  3798                           
  3799                           ;main.c: 384:     LATCbits.LATC0 = 0;
  3800     034C  0022               	movlb	2	; select bank2
  3801     034D  100E               	bcf	14,0	;volatile
  3802     034E                     l3106:
  3803                           
  3804                           ;main.c: 385:     LATCbits.LATC2 = 0;
  3805     034E  110E               	bcf	14,2	;volatile
  3806                           
  3807                           ;main.c: 387:     for (addr = 0; addr < 2048; ++addr) {
  3808     034F  0021               	movlb	1	; select bank1
  3809     0350  01BF               	clrf	do_read@addr^(0+128)
  3810     0351  01C0               	clrf	(do_read@addr+1)^(0+128)
  3811     0352                     l3112:
  3812                           
  3813                           ;main.c: 388:         if (cmd_active == 0) {
  3814     0352  0858               	movf	_cmd_active^(0+128),w
  3815     0353  1D03               	btfss	3,2
  3816     0354  2B56               	goto	u3101
  3817     0355  2B57               	goto	u3100
  3818     0356                     u3101:
  3819     0356  2B60               	goto	l3118
  3820     0357                     u3100:
  3821     0357                     l3114:
  3822                           
  3823                           ;main.c: 389:             uart_puts("Read aborted\n");
  3824     0357  303B               	movlw	low (STR_7| (0+32768))
  3825     0358  0020               	movlb	0	; select bank0
  3826     0359  00A4               	movwf	uart_puts@s
  3827     035A  3090               	movlw	high (STR_7| (0+32768))
  3828     035B  00A5               	movwf	uart_puts@s+1
  3829     035C  318F  272E  3183   	fcall	_uart_puts
  3830     035F  2BCE               	goto	l145
  3831     0360                     l3118:
  3832                           
  3833                           ;main.c: 394:         setup_address(addr);
  3834     0360  0840               	movf	(do_read@addr+1)^(0+128),w
  3835     0361  0020               	movlb	0	; select bank0
  3836     0362  00A5               	movwf	setup_address@addr+1
  3837     0363  0021               	movlb	1	; select bank1
  3838     0364  083F               	movf	do_read@addr^(0+128),w
  3839     0365  0020               	movlb	0	; select bank0
  3840     0366  00A4               	movwf	setup_address@addr
  3841     0367  318D  2569  3183   	fcall	_setup_address
  3842     036A                     l3120:
  3843                           
  3844                           ;main.c: 397:         uint8_t data = read_port();
  3845     036A  318D  2579  3183   	fcall	_read_port
  3846     036D  0021               	movlb	1	; select bank1
  3847     036E  00BD               	movwf	do_read@data^(0+128)
  3848     036F                     l3122:
  3849                           
  3850                           ;main.c: 400:         if (col == 0) {
  3851     036F  083E               	movf	do_read@col^(0+128),w
  3852     0370  1D03               	btfss	3,2
  3853     0371  2B73               	goto	u3111
  3854     0372  2B74               	goto	u3110
  3855     0373                     u3111:
  3856     0373  2B8D               	goto	l3128
  3857     0374                     u3110:
  3858     0374                     l3124:
  3859                           
  3860                           ;main.c: 401:             sprintf(ads, "%04x: ", addr);
  3861     0374  3068               	movlw	low (STR_8| (0+32768))
  3862     0375  0020               	movlb	0	; select bank0
  3863     0376  00DB               	movwf	sprintf@fmt
  3864     0377  3090               	movlw	high (STR_8| (0+32768))
  3865     0378  00DC               	movwf	sprintf@fmt+1
  3866     0379  0021               	movlb	1	; select bank1
  3867     037A  0840               	movf	(do_read@addr+1)^(0+128),w
  3868     037B  0020               	movlb	0	; select bank0
  3869     037C  00DE               	movwf	?_sprintf+3
  3870     037D  0021               	movlb	1	; select bank1
  3871     037E  083F               	movf	do_read@addr^(0+128),w
  3872     037F  0020               	movlb	0	; select bank0
  3873     0380  00DD               	movwf	?_sprintf+2
  3874     0381  30AD               	movlw	(low (do_read@ads| 0))& (0+255)
  3875     0382  318E  265E  3183   	fcall	_sprintf
  3876     0385                     l3126:
  3877                           
  3878                           ;main.c: 402:             uart_puts(ads);
  3879     0385  30AD               	movlw	low do_read@ads
  3880     0386  0020               	movlb	0	; select bank0
  3881     0387  00A4               	movwf	uart_puts@s
  3882     0388  3000               	movlw	high do_read@ads
  3883     0389  00A5               	movwf	uart_puts@s+1
  3884     038A  318F  272E  3183   	fcall	_uart_puts
  3885     038D                     l3128:
  3886                           
  3887                           ;main.c: 405:         sprintf(ads, "%02x", data);
  3888     038D  3074               	movlw	low (STR_9| (0+32768))
  3889     038E  0020               	movlb	0	; select bank0
  3890     038F  00DB               	movwf	sprintf@fmt
  3891     0390  3090               	movlw	high (STR_9| (0+32768))
  3892     0391  00DC               	movwf	sprintf@fmt+1
  3893     0392  0021               	movlb	1	; select bank1
  3894     0393  083D               	movf	do_read@data^(0+128),w
  3895     0394  0020               	movlb	0	; select bank0
  3896     0395  00E0               	movwf	??_do_read
  3897     0396  01E1               	clrf	??_do_read+1
  3898     0397  0860               	movf	??_do_read,w
  3899     0398  00DD               	movwf	?_sprintf+2
  3900     0399  0861               	movf	??_do_read+1,w
  3901     039A  00DE               	movwf	?_sprintf+3
  3902     039B  30AD               	movlw	(low (do_read@ads| 0))& (0+255)
  3903     039C  318E  265E  3183   	fcall	_sprintf
  3904                           
  3905                           ;main.c: 406:         uart_puts(ads);
  3906     039F  30AD               	movlw	low do_read@ads
  3907     03A0  0020               	movlb	0	; select bank0
  3908     03A1  00A4               	movwf	uart_puts@s
  3909     03A2  3000               	movlw	high do_read@ads
  3910     03A3  00A5               	movwf	uart_puts@s+1
  3911     03A4  318F  272E  3183   	fcall	_uart_puts
  3912     03A7                     l3130:
  3913                           
  3914                           ;main.c: 407:         if (col == 15) {
  3915     03A7  300F               	movlw	15
  3916     03A8  0021               	movlb	1	; select bank1
  3917     03A9  063E               	xorwf	do_read@col^(0+128),w
  3918     03AA  1D03               	btfss	3,2
  3919     03AB  2BAD               	goto	u3121
  3920     03AC  2BAE               	goto	u3120
  3921     03AD                     u3121:
  3922     03AD  2BB4               	goto	l3136
  3923     03AE                     u3120:
  3924     03AE                     l3132:
  3925                           
  3926                           ;main.c: 408:             col = 0;
  3927     03AE  01BE               	clrf	do_read@col^(0+128)
  3928     03AF                     l3134:
  3929                           
  3930                           ;main.c: 409:             uart_putc('\n');
  3931     03AF  300A               	movlw	10
  3932     03B0  3187  27EC  3183   	fcall	_uart_putc
  3933                           
  3934                           ;main.c: 410:         } else {
  3935     03B3  2BBE               	goto	l3140
  3936     03B4                     l3136:
  3937                           
  3938                           ;main.c: 411:             uart_putc(' ');
  3939     03B4  3020               	movlw	32
  3940     03B5  3187  27EC  3183   	fcall	_uart_putc
  3941     03B8                     l3138:
  3942                           
  3943                           ;main.c: 412:             col++;
  3944     03B8  3001               	movlw	1
  3945     03B9  0020               	movlb	0	; select bank0
  3946     03BA  00E0               	movwf	??_do_read
  3947     03BB  0860               	movf	??_do_read,w
  3948     03BC  0021               	movlb	1	; select bank1
  3949     03BD  07BE               	addwf	do_read@col^(0+128),f
  3950     03BE                     l3140:
  3951                           
  3952                           ;main.c: 414:     }
  3953     03BE  3001               	movlw	1
  3954     03BF  0021               	movlb	1	; select bank1
  3955     03C0  07BF               	addwf	do_read@addr^(0+128),f
  3956     03C1  3000               	movlw	0
  3957     03C2  3DC0               	addwfc	(do_read@addr+1)^(0+128),f
  3958     03C3                     l3142:
  3959     03C3  3008               	movlw	8
  3960     03C4  0240               	subwf	(do_read@addr+1)^(0+128),w
  3961     03C5  3000               	movlw	0
  3962     03C6  1903               	skipnz
  3963     03C7  023F               	subwf	do_read@addr^(0+128),w
  3964     03C8  1C03               	skipc
  3965     03C9  2BCB               	goto	u3131
  3966     03CA  2BCC               	goto	u3130
  3967     03CB                     u3131:
  3968     03CB  2B52               	goto	l3112
  3969     03CC                     u3130:
  3970     03CC                     l143:
  3971                           
  3972                           ;main.c: 417:     LATCbits.LATC0 = 1;
  3973     03CC  0022               	movlb	2	; select bank2
  3974     03CD  140E               	bsf	14,0	;volatile
  3975     03CE                     l145:
  3976     03CE  0008               	return
  3977     03CF                     __end_of_do_read:
  3978                           
  3979                           	psect	text12
  3980     07EC                     __ptext12:	
  3981 ;; *************** function _uart_putc *****************
  3982 ;; Defined at:
  3983 ;;		line 155 in file "uart.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  c               1    wreg     unsigned char 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  c               1    4[BANK0 ] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		wreg
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3998 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4000 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4001 ;;Total ram usage:        1 bytes
  4002 ;; Hardware stack levels used: 1
  4003 ;; Hardware stack levels required when called: 3
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_do_read
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011     07EC                     _uart_putc:	
  4012                           ;psect for function _uart_putc
  4013                           
  4014                           
  4015                           ;incstack = 0
  4016                           ; Regs used in _uart_putc: [wreg]
  4017                           ;uart_putc@c stored from wreg
  4018     07EC  0020               	movlb	0	; select bank0
  4019     07ED  00A4               	movwf	uart_putc@c
  4020     07EE                     l2300:
  4021                           
  4022                           ;uart.c: 155: void uart_putc(char c);uart.c: 156: {;uart.c: 158:     while (PIR1bits.TXI
      +                          F == 0) {
  4023     07EE  2FF0               	goto	l235
  4024     07EF                     l236:
  4025                           
  4026                           ;uart.c: 159:         __nop();
  4027     07EF  0000               	nop
  4028     07F0                     l235:	
  4029                           ;uart.c: 160:     }
  4030                           
  4031                           
  4032                           ;uart.c: 158:     while (PIR1bits.TXIF == 0) {
  4033     07F0  0020               	movlb	0	; select bank0
  4034     07F1  1E11               	btfss	17,4	;volatile
  4035     07F2  2FF4               	goto	u1911
  4036     07F3  2FF5               	goto	u1910
  4037     07F4                     u1911:
  4038     07F4  2FEF               	goto	l236
  4039     07F5                     u1910:
  4040     07F5                     l2302:
  4041                           
  4042                           ;uart.c: 163:     TXREG = c;
  4043     07F5  0824               	movf	uart_putc@c,w
  4044     07F6  0023               	movlb	3	; select bank3
  4045     07F7  009A               	movwf	26	;volatile
  4046                           
  4047                           ;uart.c: 166:     while(TXSTAbits.TRMT == 0) {
  4048     07F8  2FFA               	goto	l238
  4049     07F9                     l239:
  4050                           
  4051                           ;uart.c: 167:         __nop();
  4052     07F9  0000               	nop
  4053     07FA                     l238:	
  4054                           ;uart.c: 168:     }
  4055                           
  4056                           
  4057                           ;uart.c: 166:     while(TXSTAbits.TRMT == 0) {
  4058     07FA  0023               	movlb	3	; select bank3
  4059     07FB  1C9E               	btfss	30,1	;volatile
  4060     07FC  2FFE               	goto	u1921
  4061     07FD  2FFF               	goto	u1920
  4062     07FE                     u1921:
  4063     07FE  2FF9               	goto	l239
  4064     07FF                     u1920:
  4065     07FF                     l241:
  4066     07FF  0008               	return
  4067     0800                     __end_of_uart_putc:
  4068                           
  4069                           	psect	text13
  4070     0EE2                     __ptext13:	
  4071 ;; *************** function _do_init *****************
  4072 ;; Defined at:
  4073 ;;		line 317 in file "main.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  s               8   13[BANK1 ] unsigned char [8]
  4078 ;;  rate            2   21[BANK1 ] unsigned short 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4089 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4091 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4092 ;;Total ram usage:       10 bytes
  4093 ;; Hardware stack levels used: 1
  4094 ;; Hardware stack levels required when called: 11
  4095 ;; This function calls:
  4096 ;;		_sprintf
  4097 ;;		_uart_init_brg
  4098 ;;		_uart_puts
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104     0EE2                     _do_init:	
  4105                           ;psect for function _do_init
  4106                           
  4107     0EE2                     l3060:	
  4108                           ;incstack = 0
  4109                           ; Regs used in _do_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4110                           
  4111                           
  4112                           ;main.c: 319:     uint16_t rate;;main.c: 320:     char s[8];;main.c: 322:     rate = uar
      +                          t_init_brg();
  4113     0EE2  3187  2751  318E   	fcall	_uart_init_brg
  4114     0EE5  0020               	movlb	0	; select bank0
  4115     0EE6  0825               	movf	?_uart_init_brg+1,w
  4116     0EE7  0021               	movlb	1	; select bank1
  4117     0EE8  00B6               	movwf	(do_init@rate+1)^(0+128)
  4118     0EE9  0020               	movlb	0	; select bank0
  4119     0EEA  0824               	movf	?_uart_init_brg,w
  4120     0EEB  0021               	movlb	1	; select bank1
  4121     0EEC  00B5               	movwf	do_init@rate^(0+128)
  4122     0EED                     l3062:
  4123                           
  4124                           ;main.c: 324:     sprintf(s, "%d\n", rate);
  4125     0EED  3079               	movlw	low (STR_1| (0+32768))
  4126     0EEE  0020               	movlb	0	; select bank0
  4127     0EEF  00DB               	movwf	sprintf@fmt
  4128     0EF0  3090               	movlw	high (STR_1| (0+32768))
  4129     0EF1  00DC               	movwf	sprintf@fmt+1
  4130     0EF2  0021               	movlb	1	; select bank1
  4131     0EF3  0836               	movf	(do_init@rate+1)^(0+128),w
  4132     0EF4  0020               	movlb	0	; select bank0
  4133     0EF5  00DE               	movwf	?_sprintf+3
  4134     0EF6  0021               	movlb	1	; select bank1
  4135     0EF7  0835               	movf	do_init@rate^(0+128),w
  4136     0EF8  0020               	movlb	0	; select bank0
  4137     0EF9  00DD               	movwf	?_sprintf+2
  4138     0EFA  30AD               	movlw	(low (do_init@s| 0))& (0+255)
  4139     0EFB  318E  265E  318E   	fcall	_sprintf
  4140     0EFE                     l3064:
  4141                           
  4142                           ;main.c: 325:     uart_puts(s);
  4143     0EFE  30AD               	movlw	low do_init@s
  4144     0EFF  0020               	movlb	0	; select bank0
  4145     0F00  00A4               	movwf	uart_puts@s
  4146     0F01  3000               	movlw	high do_init@s
  4147     0F02  00A5               	movwf	uart_puts@s+1
  4148     0F03  318F  272E  318E   	fcall	_uart_puts
  4149     0F06                     l131:
  4150     0F06  0008               	return
  4151     0F07                     __end_of_do_init:
  4152                           
  4153                           	psect	text14
  4154     0751                     __ptext14:	
  4155 ;; *************** function _uart_init_brg *****************
  4156 ;; Defined at:
  4157 ;;		line 84 in file "uart.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  c               1    0        unsigned char 
  4162 ;;  rate            2   11[BANK0 ] unsigned short 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  2    4[BANK0 ] unsigned short 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4173 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4174 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4175 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4176 ;;Total ram usage:        9 bytes
  4177 ;; Hardware stack levels used: 1
  4178 ;; Hardware stack levels required when called: 3
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_do_init
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186     0751                     _uart_init_brg:	
  4187                           ;psect for function _uart_init_brg
  4188                           
  4189     0751                     l3012:	
  4190                           ;incstack = 0
  4191                           ; Regs used in _uart_init_brg: [wreg+status,2]
  4192                           
  4193     0751                     l3014:
  4194                           
  4195                           ;uart.c: 88:     PIE1bits.RCIE=0;
  4196     0751  0021               	movlb	1	; select bank1
  4197     0752  1291               	bcf	17,5	;volatile
  4198     0753                     l3016:
  4199                           
  4200                           ;uart.c: 91:     BAUDCONbits.ABDEN = 1;
  4201     0753  0023               	movlb	3	; select bank3
  4202     0754  141F               	bsf	31,0	;volatile
  4203     0755                     l3018:
  4204                           
  4205                           ;uart.c: 97:         if (PIR1bits.RCIF) {
  4206     0755  0020               	movlb	0	; select bank0
  4207     0756  1E91               	btfss	17,5	;volatile
  4208     0757  2F59               	goto	u3011
  4209     0758  2F5A               	goto	u3010
  4210     0759                     u3011:
  4211     0759  2F5D               	goto	l220
  4212     075A                     u3010:
  4213     075A                     l3020:
  4214     075A  0023               	movlb	3	; select bank3
  4215     075B  0819               	movf	25,w	;volatile
  4216                           
  4217                           ;uart.c: 99:             break;
  4218     075C  2F81               	goto	l3030
  4219     075D                     l220:	
  4220                           ;uart.c: 100:         }
  4221                           
  4222                           
  4223                           ;uart.c: 103:         PORTCbits.RC4 = 1;
  4224     075D  160E               	bsf	14,4	;volatile
  4225     075E                     l3022:
  4226                           
  4227                           ;uart.c: 104:         _delay((unsigned long)((250)*(20000000/4000.0)));
  4228     075E  3007               	movlw	7
  4229     075F  0020               	movlb	0	; select bank0
  4230     0760  00A7               	movwf	??_uart_init_brg+1
  4231     0761  3058               	movlw	88
  4232     0762  00A6               	movwf	??_uart_init_brg
  4233     0763  3059               	movlw	89
  4234     0764                     u3287:
  4235     0764  0B89               	decfsz	9,f
  4236     0765  2F64               	goto	u3287
  4237     0766  0BA6               	decfsz	??_uart_init_brg,f
  4238     0767  2F64               	goto	u3287
  4239     0768  0BA7               	decfsz	??_uart_init_brg+1,f
  4240     0769  2F64               	goto	u3287
  4241     076A  3200               	nop2
  4242     076B                     l3024:
  4243                           
  4244                           ;uart.c: 105:         PORTCbits.RC4 = 0;
  4245     076B  0020               	movlb	0	; select bank0
  4246     076C  120E               	bcf	14,4	;volatile
  4247                           
  4248                           ;uart.c: 106:         _delay((unsigned long)((250)*(20000000/4000.0)));
  4249     076D  3007               	movlw	7
  4250     076E  0020               	movlb	0	; select bank0
  4251     076F  00A7               	movwf	??_uart_init_brg+1
  4252     0770  3058               	movlw	88
  4253     0771  00A6               	movwf	??_uart_init_brg
  4254     0772  3059               	movlw	89
  4255     0773                     u3297:
  4256     0773  0B89               	decfsz	9,f
  4257     0774  2F73               	goto	u3297
  4258     0775  0BA6               	decfsz	??_uart_init_brg,f
  4259     0776  2F73               	goto	u3297
  4260     0777  0BA7               	decfsz	??_uart_init_brg+1,f
  4261     0778  2F73               	goto	u3297
  4262     0779  3200               	nop2
  4263     077A                     l3026:
  4264                           
  4265                           ;uart.c: 108:         if ( BAUDCONbits.ABDOVF ) {
  4266     077A  0023               	movlb	3	; select bank3
  4267     077B  1F9F               	btfss	31,7	;volatile
  4268     077C  2F7E               	goto	u3021
  4269     077D  2F7F               	goto	u3020
  4270     077E                     u3021:
  4271     077E  2F55               	goto	l3018
  4272     077F                     u3020:
  4273     077F                     l3028:
  4274                           
  4275                           ;uart.c: 109:             BAUDCONbits.ABDOVF = 0;
  4276     077F  139F               	bcf	31,7	;volatile
  4277     0780  2F55               	goto	l3018
  4278     0781                     l3030:
  4279                           
  4280                           ;uart.c: 114:     rate = (SPBRGH << 8) | SPBRG;
  4281     0781  081C               	movf	28,w	;volatile
  4282     0782  0020               	movlb	0	; select bank0
  4283     0783  00A6               	movwf	??_uart_init_brg
  4284     0784  01A7               	clrf	??_uart_init_brg+1
  4285     0785  0826               	movf	??_uart_init_brg,w
  4286     0786  00A7               	movwf	??_uart_init_brg+1
  4287     0787  01A6               	clrf	??_uart_init_brg
  4288     0788  0023               	movlb	3	; select bank3
  4289     0789  081B               	movf	27,w	;volatile
  4290     078A  0020               	movlb	0	; select bank0
  4291     078B  0426               	iorwf	??_uart_init_brg,w
  4292     078C  00A9               	movwf	??_uart_init_brg+3
  4293     078D  0023               	movlb	3	; select bank3
  4294     078E  081C               	movf	28,w	;volatile
  4295     078F  0020               	movlb	0	; select bank0
  4296     0790  0427               	iorwf	??_uart_init_brg+1,w
  4297     0791  00AA               	movwf	??_uart_init_brg+4
  4298     0792  0829               	movf	??_uart_init_brg+3,w
  4299     0793  00AB               	movwf	uart_init_brg@rate
  4300     0794  082A               	movf	??_uart_init_brg+4,w
  4301     0795  00AC               	movwf	uart_init_brg@rate+1
  4302     0796                     l3032:
  4303                           
  4304                           ;uart.c: 117:     PORTCbits.RC4 = 0;
  4305     0796  120E               	bcf	14,4	;volatile
  4306     0797                     l3034:
  4307                           
  4308                           ;uart.c: 120:     PIE1bits.RCIE=1;
  4309     0797  0021               	movlb	1	; select bank1
  4310     0798  1691               	bsf	17,5	;volatile
  4311                           
  4312                           ;uart.c: 122:     return rate;
  4313     0799  0020               	movlb	0	; select bank0
  4314     079A  082C               	movf	uart_init_brg@rate+1,w
  4315     079B  00A5               	movwf	?_uart_init_brg+1
  4316     079C  082B               	movf	uart_init_brg@rate,w
  4317     079D  00A4               	movwf	?_uart_init_brg
  4318     079E                     l224:
  4319     079E  0008               	return
  4320     079F                     __end_of_uart_init_brg:
  4321                           
  4322                           	psect	text15
  4323     02C3                     __ptext15:	
  4324 ;; *************** function _do_blank *****************
  4325 ;; Defined at:
  4326 ;;		line 332 in file "main.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  data            1   46[BANK1 ] unsigned char 
  4331 ;;  ads            32   13[BANK1 ] unsigned char [32]
  4332 ;;  addr            2   47[BANK1 ] unsigned short 
  4333 ;;  ok              1   45[BANK1 ] _Bool 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4344 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4345 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4346 ;;      Totals:         0       2      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4347 ;;Total ram usage:       38 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 11
  4350 ;; This function calls:
  4351 ;;		_read_port
  4352 ;;		_setup_address
  4353 ;;		_sprintf
  4354 ;;		_uart_puts
  4355 ;; This function is called by:
  4356 ;;		_main
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360     02C3                     _do_blank:	
  4361                           ;psect for function _do_blank
  4362                           
  4363     02C3                     l3066:	
  4364                           ;incstack = 0
  4365                           ; Regs used in _do_blank: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4366                           
  4367                           
  4368                           ;main.c: 334:     uint16_t addr;;main.c: 335:     char ads[32];;main.c: 336:     _Bool o
      +                          k = 1;
  4369     02C3  0021               	movlb	1	; select bank1
  4370     02C4  01CD               	clrf	do_blank@ok^(0+128)
  4371     02C5  0ACD               	incf	do_blank@ok^(0+128),f
  4372                           
  4373                           ;main.c: 339:     LATCbits.LATC0 = 0;
  4374     02C6  0022               	movlb	2	; select bank2
  4375     02C7  100E               	bcf	14,0	;volatile
  4376                           
  4377                           ;main.c: 340:     LATCbits.LATC2 = 0;
  4378     02C8  110E               	bcf	14,2	;volatile
  4379     02C9                     l3068:
  4380                           
  4381                           ;main.c: 342:     for (addr = 0; addr < 2048; ++addr) {
  4382     02C9  0021               	movlb	1	; select bank1
  4383     02CA  01CF               	clrf	do_blank@addr^(0+128)
  4384     02CB  01D0               	clrf	(do_blank@addr+1)^(0+128)
  4385     02CC                     l3074:
  4386                           
  4387                           ;main.c: 343:         if (cmd_active == 0) {
  4388     02CC  0858               	movf	_cmd_active^(0+128),w
  4389     02CD  1D03               	btfss	3,2
  4390     02CE  2AD0               	goto	u3061
  4391     02CF  2AD1               	goto	u3060
  4392     02D0                     u3061:
  4393     02D0  2ADA               	goto	l3080
  4394     02D1                     u3060:
  4395     02D1                     l3076:
  4396                           
  4397                           ;main.c: 344:             uart_puts("Check aborted\n");
  4398     02D1  302C               	movlw	low (STR_2| (0+32768))
  4399     02D2  0020               	movlb	0	; select bank0
  4400     02D3  00A4               	movwf	uart_puts@s
  4401     02D4  3090               	movlw	high (STR_2| (0+32768))
  4402     02D5  00A5               	movwf	uart_puts@s+1
  4403     02D6  318F  272E  3182   	fcall	_uart_puts
  4404     02D9  2B49               	goto	l137
  4405     02DA                     l3080:
  4406                           
  4407                           ;main.c: 349:         setup_address(addr);
  4408     02DA  0850               	movf	(do_blank@addr+1)^(0+128),w
  4409     02DB  0020               	movlb	0	; select bank0
  4410     02DC  00A5               	movwf	setup_address@addr+1
  4411     02DD  0021               	movlb	1	; select bank1
  4412     02DE  084F               	movf	do_blank@addr^(0+128),w
  4413     02DF  0020               	movlb	0	; select bank0
  4414     02E0  00A4               	movwf	setup_address@addr
  4415     02E1  318D  2569  3182   	fcall	_setup_address
  4416     02E4                     l3082:
  4417                           
  4418                           ;main.c: 352:         uint8_t data = read_port();
  4419     02E4  318D  2579  3182   	fcall	_read_port
  4420     02E7  0021               	movlb	1	; select bank1
  4421     02E8  00CE               	movwf	do_blank@data^(0+128)
  4422     02E9                     l3084:
  4423                           
  4424                           ;main.c: 354:         if (data != 0xff) {
  4425     02E9  0A4E               	incf	do_blank@data^(0+128),w
  4426     02EA  1903               	btfsc	3,2
  4427     02EB  2AED               	goto	u3071
  4428     02EC  2AEE               	goto	u3070
  4429     02ED                     u3071:
  4430     02ED  2B2C               	goto	l3096
  4431     02EE                     u3070:
  4432     02EE                     l3086:
  4433                           
  4434                           ;main.c: 355:             uart_puts("Erase check fail at address ");
  4435     02EE  3000               	movlw	low (STR_3| (0+32768))
  4436     02EF  0020               	movlb	0	; select bank0
  4437     02F0  00A4               	movwf	uart_puts@s
  4438     02F1  3090               	movlw	high (STR_3| (0+32768))
  4439     02F2  00A5               	movwf	uart_puts@s+1
  4440     02F3  318F  272E  3182   	fcall	_uart_puts
  4441     02F6                     l3088:
  4442                           
  4443                           ;main.c: 356:             sprintf(ads, "0x%04x = ", addr);
  4444     02F6  3056               	movlw	low (STR_4| (0+32768))
  4445     02F7  0020               	movlb	0	; select bank0
  4446     02F8  00DB               	movwf	sprintf@fmt
  4447     02F9  3090               	movlw	high (STR_4| (0+32768))
  4448     02FA  00DC               	movwf	sprintf@fmt+1
  4449     02FB  0021               	movlb	1	; select bank1
  4450     02FC  0850               	movf	(do_blank@addr+1)^(0+128),w
  4451     02FD  0020               	movlb	0	; select bank0
  4452     02FE  00DE               	movwf	?_sprintf+3
  4453     02FF  0021               	movlb	1	; select bank1
  4454     0300  084F               	movf	do_blank@addr^(0+128),w
  4455     0301  0020               	movlb	0	; select bank0
  4456     0302  00DD               	movwf	?_sprintf+2
  4457     0303  30AD               	movlw	(low (do_blank@ads| 0))& (0+255)
  4458     0304  318E  265E  3182   	fcall	_sprintf
  4459     0307                     l3090:
  4460                           
  4461                           ;main.c: 357:             uart_puts(ads);
  4462     0307  30AD               	movlw	low do_blank@ads
  4463     0308  0020               	movlb	0	; select bank0
  4464     0309  00A4               	movwf	uart_puts@s
  4465     030A  3000               	movlw	high do_blank@ads
  4466     030B  00A5               	movwf	uart_puts@s+1
  4467     030C  318F  272E  3182   	fcall	_uart_puts
  4468                           
  4469                           ;main.c: 358:             sprintf(ads, "0x%02x\n", data);
  4470     030F  3060               	movlw	low (STR_5| (0+32768))
  4471     0310  0020               	movlb	0	; select bank0
  4472     0311  00DB               	movwf	sprintf@fmt
  4473     0312  3090               	movlw	high (STR_5| (0+32768))
  4474     0313  00DC               	movwf	sprintf@fmt+1
  4475     0314  0021               	movlb	1	; select bank1
  4476     0315  084E               	movf	do_blank@data^(0+128),w
  4477     0316  0020               	movlb	0	; select bank0
  4478     0317  00E0               	movwf	??_do_blank
  4479     0318  01E1               	clrf	??_do_blank+1
  4480     0319  0860               	movf	??_do_blank,w
  4481     031A  00DD               	movwf	?_sprintf+2
  4482     031B  0861               	movf	??_do_blank+1,w
  4483     031C  00DE               	movwf	?_sprintf+3
  4484     031D  30AD               	movlw	(low (do_blank@ads| 0))& (0+255)
  4485     031E  318E  265E  3182   	fcall	_sprintf
  4486     0321                     l3092:
  4487                           
  4488                           ;main.c: 359:             uart_puts(ads);
  4489     0321  30AD               	movlw	low do_blank@ads
  4490     0322  0020               	movlb	0	; select bank0
  4491     0323  00A4               	movwf	uart_puts@s
  4492     0324  3000               	movlw	high do_blank@ads
  4493     0325  00A5               	movwf	uart_puts@s+1
  4494     0326  318F  272E  3182   	fcall	_uart_puts
  4495     0329                     l3094:
  4496                           
  4497                           ;main.c: 360:             ok = 0;
  4498     0329  0021               	movlb	1	; select bank1
  4499     032A  01CD               	clrf	do_blank@ok^(0+128)
  4500                           
  4501                           ;main.c: 361:             break;
  4502     032B  2B39               	goto	l135
  4503     032C                     l3096:
  4504                           
  4505                           ;main.c: 363:     }
  4506     032C  3001               	movlw	1
  4507     032D  07CF               	addwf	do_blank@addr^(0+128),f
  4508     032E  3000               	movlw	0
  4509     032F  3DD0               	addwfc	(do_blank@addr+1)^(0+128),f
  4510     0330  3008               	movlw	8
  4511     0331  0250               	subwf	(do_blank@addr+1)^(0+128),w
  4512     0332  3000               	movlw	0
  4513     0333  1903               	skipnz
  4514     0334  024F               	subwf	do_blank@addr^(0+128),w
  4515     0335  1C03               	skipc
  4516     0336  2B38               	goto	u3081
  4517     0337  2B39               	goto	u3080
  4518     0338                     u3081:
  4519     0338  2ACC               	goto	l3074
  4520     0339                     u3080:
  4521     0339                     l135:
  4522                           
  4523                           ;main.c: 366:     LATCbits.LATC0 = 1;
  4524     0339  0022               	movlb	2	; select bank2
  4525     033A  140E               	bsf	14,0	;volatile
  4526     033B                     l3098:
  4527                           
  4528                           ;main.c: 368:     if (ok) {
  4529     033B  0021               	movlb	1	; select bank1
  4530     033C  084D               	movf	do_blank@ok^(0+128),w
  4531     033D  1903               	btfsc	3,2
  4532     033E  2B40               	goto	u3091
  4533     033F  2B41               	goto	u3090
  4534     0340                     u3091:
  4535     0340  2B49               	goto	l137
  4536     0341                     u3090:
  4537     0341                     l3100:
  4538                           
  4539                           ;main.c: 369:         uart_puts("OK");
  4540     0341  307D               	movlw	low (STR_6| (0+32768))
  4541     0342  0020               	movlb	0	; select bank0
  4542     0343  00A4               	movwf	uart_puts@s
  4543     0344  3090               	movlw	high (STR_6| (0+32768))
  4544     0345  00A5               	movwf	uart_puts@s+1
  4545     0346  318F  272E  3182   	fcall	_uart_puts
  4546     0349                     l137:
  4547     0349  0008               	return
  4548     034A                     __end_of_do_blank:
  4549                           
  4550                           	psect	text16
  4551     0F2E                     __ptext16:	
  4552 ;; *************** function _uart_puts *****************
  4553 ;; Defined at:
  4554 ;;		line 175 in file "uart.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  s               2    4[BANK0 ] PTR unsigned char 
  4557 ;;		 -> STR_13(5), STR_12(13), STR_11(3), STR_10(15), 
  4558 ;;		 -> do_read@ads(16), STR_7(14), STR_6(3), do_blank@ads(32), 
  4559 ;;		 -> STR_3(29), STR_2(15), do_init@s(8), 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  p               2    7[BANK0 ] PTR unsigned char 
  4562 ;;		 -> STR_13(5), STR_12(13), STR_11(3), STR_10(15), 
  4563 ;;		 -> do_read@ads(16), STR_7(14), STR_6(3), do_blank@ads(32), 
  4564 ;;		 -> STR_3(29), STR_2(15), do_init@s(8), 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4575 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4577 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4578 ;;Total ram usage:        5 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 3
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_do_init
  4585 ;;		_do_blank
  4586 ;;		_do_read
  4587 ;;		_do_write
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592     0F2E                     _uart_puts:	
  4593                           ;psect for function _uart_puts
  4594                           
  4595     0F2E                     l3050:	
  4596                           ;incstack = 0
  4597                           ; Regs used in _uart_puts: [wreg-fsr0h+status,2+status,0+pclath]
  4598                           
  4599                           
  4600                           ;uart.c: 175: void uart_puts(char *s);uart.c: 176: {;uart.c: 178:     while (PIR1bits.TX
      +                          IF == 0) {
  4601     0F2E  2F30               	goto	l244
  4602     0F2F                     l245:
  4603                           
  4604                           ;uart.c: 179:         __nop();
  4605     0F2F  0000               	nop
  4606     0F30                     l244:	
  4607                           ;uart.c: 180:     }
  4608                           
  4609                           
  4610                           ;uart.c: 178:     while (PIR1bits.TXIF == 0) {
  4611     0F30  0020               	movlb	0	; select bank0
  4612     0F31  1E11               	btfss	17,4	;volatile
  4613     0F32  2F34               	goto	u3031
  4614     0F33  2F35               	goto	u3030
  4615     0F34                     u3031:
  4616     0F34  2F2F               	goto	l245
  4617     0F35                     u3030:
  4618     0F35                     l3052:
  4619                           
  4620                           ;uart.c: 183:     char *p = s;
  4621     0F35  0825               	movf	uart_puts@s+1,w
  4622     0F36  00A8               	movwf	uart_puts@p+1
  4623     0F37  0824               	movf	uart_puts@s,w
  4624     0F38  00A7               	movwf	uart_puts@p
  4625                           
  4626                           ;uart.c: 184:     while (*p) {
  4627     0F39  2F4D               	goto	l3058
  4628     0F3A                     l3054:
  4629                           
  4630                           ;uart.c: 185:         TXREG = *p++;
  4631     0F3A  0827               	movf	uart_puts@p,w
  4632     0F3B  0084               	movwf	4
  4633     0F3C  0828               	movf	uart_puts@p+1,w
  4634     0F3D  0085               	movwf	5
  4635     0F3E  0800               	movf	0,w	;code access
  4636     0F3F  0023               	movlb	3	; select bank3
  4637     0F40  009A               	movwf	26	;volatile
  4638     0F41                     l3056:
  4639     0F41  3001               	movlw	1
  4640     0F42  0020               	movlb	0	; select bank0
  4641     0F43  07A7               	addwf	uart_puts@p,f
  4642     0F44  3000               	movlw	0
  4643     0F45  3DA8               	addwfc	uart_puts@p+1,f
  4644                           
  4645                           ;uart.c: 186:         while(TXSTAbits.TRMT == 0) {
  4646     0F46  2F48               	goto	l249
  4647     0F47                     l250:
  4648                           
  4649                           ;uart.c: 187:             __nop();
  4650     0F47  0000               	nop
  4651     0F48                     l249:	
  4652                           ;uart.c: 188:         }
  4653                           
  4654                           
  4655                           ;uart.c: 186:         while(TXSTAbits.TRMT == 0) {
  4656     0F48  0023               	movlb	3	; select bank3
  4657     0F49  1C9E               	btfss	30,1	;volatile
  4658     0F4A  2F4C               	goto	u3041
  4659     0F4B  2F4D               	goto	u3040
  4660     0F4C                     u3041:
  4661     0F4C  2F47               	goto	l250
  4662     0F4D                     u3040:
  4663     0F4D                     l3058:
  4664                           
  4665                           ;uart.c: 184:     while (*p) {
  4666     0F4D  0020               	movlb	0	; select bank0
  4667     0F4E  0827               	movf	uart_puts@p,w
  4668     0F4F  0084               	movwf	4
  4669     0F50  0828               	movf	uart_puts@p+1,w
  4670     0F51  0085               	movwf	5
  4671     0F52  0012               	moviw fsr0++
  4672     0F53  1D03               	btfss	3,2
  4673     0F54  2F56               	goto	u3051
  4674     0F55  2F57               	goto	u3050
  4675     0F56                     u3051:
  4676     0F56  2F3A               	goto	l3054
  4677     0F57                     u3050:
  4678     0F57                     l253:
  4679     0F57  0008               	return
  4680     0F58                     __end_of_uart_puts:
  4681                           
  4682                           	psect	text17
  4683     0E5E                     __ptext17:	
  4684 ;; *************** function _sprintf *****************
  4685 ;; Defined at:
  4686 ;;		line 9 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_sprintf.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  s               1    wreg     PTR unsigned char 
  4689 ;;		 -> do_read@ads(16), do_blank@ads(32), do_init@s(8), 
  4690 ;;  fmt             2   59[BANK0 ] PTR const unsigned char 
  4691 ;;		 -> STR_9(5), STR_8(7), STR_5(8), STR_4(10), 
  4692 ;;		 -> STR_1(4), 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  s               1    1[BANK1 ] PTR unsigned char 
  4695 ;;		 -> do_read@ads(16), do_blank@ads(32), do_init@s(8), 
  4696 ;;  f              11    2[BANK1 ] struct _IO_FILE
  4697 ;;  ret             2    0        int 
  4698 ;;  ap              1    0[BANK1 ] PTR void [1]
  4699 ;;		 -> ?_sprintf(2), 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  2   59[BANK0 ] int 
  4702 ;; Registers used:
  4703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4709 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4710 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4711 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4712 ;;      Totals:         0       5      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4713 ;;Total ram usage:       18 bytes
  4714 ;; Hardware stack levels used: 1
  4715 ;; Hardware stack levels required when called: 10
  4716 ;; This function calls:
  4717 ;;		_vfprintf
  4718 ;; This function is called by:
  4719 ;;		_do_init
  4720 ;;		_do_blank
  4721 ;;		_do_read
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725     0E5E                     _sprintf:	
  4726                           ;psect for function _sprintf
  4727                           
  4728                           
  4729                           ;incstack = 0
  4730                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4731                           ;sprintf@s stored from wreg
  4732     0E5E  0021               	movlb	1	; select bank1
  4733     0E5F  00A1               	movwf	sprintf@s^(0+128)
  4734     0E60                     l3038:
  4735     0E60  305D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4736     0E61  00A0               	movwf	sprintf@ap^(0+128)
  4737     0E62  0821               	movf	sprintf@s^(0+128),w
  4738     0E63  00A2               	movwf	sprintf@f^(0+128)
  4739     0E64                     l3040:
  4740     0E64  01A4               	clrf	(sprintf@f^(0+128)+2)
  4741     0E65  01A5               	clrf	((sprintf@f+1)^(0+128)+2)
  4742     0E66                     l3042:
  4743     0E66  01AB               	clrf	(sprintf@f^(0+128)+9)
  4744     0E67  01AC               	clrf	((sprintf@f+1)^(0+128)+9)
  4745     0E68                     l3044:
  4746     0E68  0020               	movlb	0	; select bank0
  4747     0E69  085C               	movf	sprintf@fmt+1,w
  4748     0E6A  00D5               	movwf	vfprintf@fmt+1
  4749     0E6B  085B               	movf	sprintf@fmt,w
  4750     0E6C  00D4               	movwf	vfprintf@fmt
  4751     0E6D  30A0               	movlw	(low (sprintf@ap| 0))& (0+255)
  4752     0E6E  00D6               	movwf	vfprintf@ap
  4753     0E6F  30A2               	movlw	(low (sprintf@f| 0))& (0+255)
  4754     0E70  318E  2608  318E   	fcall	_vfprintf
  4755     0E73                     l3046:
  4756     0E73  0021               	movlb	1	; select bank1
  4757     0E74  0824               	movf	(sprintf@f^(0+128)+2),w
  4758     0E75  0721               	addwf	sprintf@s^(0+128),w
  4759     0E76  0020               	movlb	0	; select bank0
  4760     0E77  00DF               	movwf	??_sprintf
  4761     0E78  085F               	movf	??_sprintf,w
  4762     0E79  0086               	movwf	6
  4763     0E7A  0187               	clrf	7
  4764     0E7B  0181               	clrf	1
  4765     0E7C                     l872:
  4766     0E7C  0008               	return
  4767     0E7D                     __end_of_sprintf:
  4768                           
  4769                           	psect	text18
  4770     0E08                     __ptext18:	
  4771 ;; *************** function _vfprintf *****************
  4772 ;; Defined at:
  4773 ;;		line 1817 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  fp              1    wreg     PTR struct _IO_FILE
  4776 ;;		 -> sprintf@f(11), 
  4777 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  4778 ;;		 -> STR_9(5), STR_8(7), STR_5(8), STR_4(10), 
  4779 ;;		 -> STR_1(4), 
  4780 ;;  ap              1   54[BANK0 ] PTR PTR void 
  4781 ;;		 -> sprintf@ap(1), 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  fp              1   56[BANK0 ] PTR struct _IO_FILE
  4784 ;;		 -> sprintf@f(11), 
  4785 ;;  cfmt            2   57[BANK0 ] PTR unsigned char 
  4786 ;;		 -> STR_9(5), STR_8(7), STR_5(8), STR_4(10), 
  4787 ;;		 -> STR_1(4), 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  2   52[BANK0 ] int 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4797 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4798 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4800 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4801 ;;Total ram usage:        7 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; Hardware stack levels required when called: 9
  4804 ;; This function calls:
  4805 ;;		_vfpfcnvrt
  4806 ;; This function is called by:
  4807 ;;		_sprintf
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811     0E08                     _vfprintf:	
  4812                           ;psect for function _vfprintf
  4813                           
  4814                           
  4815                           ;incstack = 0
  4816                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4817                           ;vfprintf@fp stored from wreg
  4818     0E08  0020               	movlb	0	; select bank0
  4819     0E09  00D8               	movwf	vfprintf@fp
  4820     0E0A                     l3002:
  4821                           
  4822                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  4823     0E0A  0855               	movf	vfprintf@fmt+1,w
  4824     0E0B  00DA               	movwf	vfprintf@cfmt+1
  4825     0E0C  0854               	movf	vfprintf@fmt,w
  4826     0E0D  00D9               	movwf	vfprintf@cfmt
  4827                           
  4828                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4829     0E0E  2E17               	goto	l3006
  4830     0E0F                     l3004:
  4831                           
  4832                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(f
      +                          p, &cfmt, ap);
  4833     0E0F  3059               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4834     0E10  00C6               	movwf	vfpfcnvrt@fmt
  4835     0E11  0856               	movf	vfprintf@ap,w
  4836     0E12  00C7               	movwf	vfpfcnvrt@ap
  4837     0E13  0858               	movf	vfprintf@fp,w
  4838     0E14  3180  2072  318E   	fcall	_vfpfcnvrt
  4839     0E17                     l3006:
  4840                           
  4841                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4842     0E17  0020               	movlb	0	; select bank0
  4843     0E18  0859               	movf	vfprintf@cfmt,w
  4844     0E19  0084               	movwf	4
  4845     0E1A  085A               	movf	vfprintf@cfmt+1,w
  4846     0E1B  0085               	movwf	5
  4847     0E1C  0012               	moviw fsr0++
  4848     0E1D  1D03               	btfss	3,2
  4849     0E1E  2E20               	goto	u3001
  4850     0E1F  2E21               	goto	u3000
  4851     0E20                     u3001:
  4852     0E20  2E0F               	goto	l3004
  4853     0E21                     u3000:
  4854     0E21                     l3008:
  4855                           
  4856                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  4857     0E21  01D4               	clrf	?_vfprintf
  4858     0E22  01D5               	clrf	?_vfprintf+1
  4859     0E23                     l960:
  4860     0E23  0008               	return
  4861     0E24                     __end_of_vfprintf:
  4862                           
  4863                           	psect	text19
  4864     0072                     __ptext19:	
  4865 ;; *************** function _vfpfcnvrt *****************
  4866 ;; Defined at:
  4867 ;;		line 1177 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  fp              1    wreg     PTR struct _IO_FILE
  4870 ;;		 -> sprintf@f(11), 
  4871 ;;  fmt             1   38[BANK0 ] PTR PTR unsigned char 
  4872 ;;		 -> vfprintf@cfmt(2), 
  4873 ;;  ap              1   39[BANK0 ] PTR PTR void 
  4874 ;;		 -> sprintf@ap(1), 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
  4877 ;;		 -> sprintf@f(11), 
  4878 ;;  convarg         4   45[BANK0 ] struct .
  4879 ;;  cp              2   50[BANK0 ] PTR unsigned char 
  4880 ;;		 -> STR_9(5), STR_8(7), STR_5(8), STR_4(10), 
  4881 ;;		 -> STR_1(4), 
  4882 ;;  done            1   44[BANK0 ] _Bool 
  4883 ;;  c               1    0        unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      void 
  4886 ;; Registers used:
  4887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4894 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4896 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4897 ;;Total ram usage:       14 bytes
  4898 ;; Hardware stack levels used: 1
  4899 ;; Hardware stack levels required when called: 8
  4900 ;; This function calls:
  4901 ;;		_dtoa
  4902 ;;		_fputc
  4903 ;;		_read_prec_or_width
  4904 ;;		_xtoa
  4905 ;; This function is called by:
  4906 ;;		_vfprintf
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910     0072                     _vfpfcnvrt:	
  4911                           ;psect for function _vfpfcnvrt
  4912                           
  4913                           
  4914                           ;incstack = 0
  4915                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4916                           ;vfpfcnvrt@fp stored from wreg
  4917     0072  0020               	movlb	0	; select bank0
  4918     0073  00D1               	movwf	vfpfcnvrt@fp
  4919     0074                     l2938:
  4920                           
  4921                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 120
      +                          1:     if ((*fmt)[0] == '%') {
  4922     0074  0846               	movf	vfpfcnvrt@fmt,w
  4923     0075  0086               	movwf	6
  4924     0076  0187               	clrf	7
  4925     0077  3F40               	moviw [0]fsr1
  4926     0078  00C8               	movwf	??_vfpfcnvrt
  4927     0079  3F41               	moviw [1]fsr1
  4928     007A  00C9               	movwf	??_vfpfcnvrt+1
  4929     007B  0848               	movf	??_vfpfcnvrt,w
  4930     007C  0084               	movwf	4
  4931     007D  0849               	movf	??_vfpfcnvrt+1,w
  4932     007E  0085               	movwf	5
  4933     007F  0012               	moviw fsr0++
  4934     0080  3A25               	xorlw	37
  4935     0081  1D03               	btfss	3,2
  4936     0082  2884               	goto	u2941
  4937     0083  2885               	goto	u2940
  4938     0084                     u2941:
  4939     0084  2950               	goto	l2996
  4940     0085                     u2940:
  4941     0085                     l2940:
  4942                           
  4943                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  4944     0085  0846               	movf	vfpfcnvrt@fmt,w
  4945     0086  0086               	movwf	6
  4946     0087  0187               	clrf	7
  4947     0088  3001               	movlw	1
  4948     0089  0781               	addwf	1,f
  4949     008A  3141               	addfsr 1,1
  4950     008B  1803               	skipnc
  4951     008C  0A81               	incf	1,f
  4952     008D                     l2942:
  4953                           
  4954                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  4955     008D  01E3               	clrf	_width
  4956     008E  01E4               	clrf	_width+1
  4957     008F  1003               	clrc
  4958     0090  3000               	movlw	0
  4959     0091  1803               	btfsc	3,0
  4960     0092  3001               	movlw	1
  4961     0093  00E5               	movwf	_flags
  4962     0094                     l2944:
  4963                           
  4964                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  4965     0094  30FF               	movlw	255
  4966     0095  0021               	movlb	1	; select bank1
  4967     0096  00D1               	movwf	_prec^(0+128)
  4968     0097  30FF               	movlw	255
  4969     0098  00D2               	movwf	(_prec^(0+128)+1)
  4970     0099                     l2946:
  4971                           
  4972                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1209:         done =
      +                           0;
  4973     0099  0020               	movlb	0	; select bank0
  4974     009A  01CC               	clrf	vfpfcnvrt@done
  4975                           
  4976                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  4977     009B  28B9               	goto	l2954
  4978     009C                     l940:	
  4979                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1219:               
      +                            case '0' :
  4980                           
  4981                           
  4982                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1220:               
      +                                flags |= (1 << 1);
  4983     009C  14E5               	bsf	_flags,1
  4984     009D                     l2948:
  4985                           
  4986                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1221:               
      +                                ++*fmt;
  4987     009D  0846               	movf	vfpfcnvrt@fmt,w
  4988     009E  0086               	movwf	6
  4989     009F  0187               	clrf	7
  4990     00A0  3001               	movlw	1
  4991     00A1  0781               	addwf	1,f
  4992     00A2  3141               	addfsr 1,1
  4993     00A3  1803               	skipnc
  4994     00A4  0A81               	incf	1,f
  4995                           
  4996                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1222:               
      +                                break;
  4997     00A5  28B9               	goto	l2954
  4998     00A6                     l942:	
  4999                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1242:               
      +                            default:
  5000                           
  5001                           
  5002                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1243:               
      +                                done = 1;
  5003     00A6  01CC               	clrf	vfpfcnvrt@done
  5004     00A7  0ACC               	incf	vfpfcnvrt@done,f
  5005                           
  5006                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1244:               
      +                                break;
  5007     00A8  28B9               	goto	l2954
  5008     00A9                     l2952:
  5009     00A9  0846               	movf	vfpfcnvrt@fmt,w
  5010     00AA  0086               	movwf	6
  5011     00AB  0187               	clrf	7
  5012     00AC  3F40               	moviw [0]fsr1
  5013     00AD  00C8               	movwf	??_vfpfcnvrt
  5014     00AE  3F41               	moviw [1]fsr1
  5015     00AF  00C9               	movwf	??_vfpfcnvrt+1
  5016     00B0  0848               	movf	??_vfpfcnvrt,w
  5017     00B1  0084               	movwf	4
  5018     00B2  0849               	movf	??_vfpfcnvrt+1,w
  5019     00B3  0085               	movwf	5
  5020     00B4  0800               	movf	0,w	;code access
  5021                           
  5022                           ; Switch size 1, requested type "simple"
  5023                           ; Number of cases is 1, Range of values is 48 to 48
  5024                           ; switch strategies available:
  5025                           ; Name         Instructions Cycles
  5026                           ; simple_byte            4     3 (average)
  5027                           ; direct_byte           11     9 (fixed)
  5028                           ; jumptable            263     9 (fixed)
  5029                           ;	Chosen strategy is simple_byte
  5030     00B5  3A30               	xorlw	48	; case 48
  5031     00B6  1903               	skipnz
  5032     00B7  289C               	goto	l940
  5033     00B8  28A6               	goto	l942
  5034     00B9                     l2954:
  5035                           
  5036                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  5037     00B9  084C               	movf	vfpfcnvrt@done,w
  5038     00BA  1903               	btfsc	3,2
  5039     00BB  28BD               	goto	u2951
  5040     00BC  28BE               	goto	u2950
  5041     00BD                     u2951:
  5042     00BD  28A9               	goto	l2952
  5043     00BE                     u2950:
  5044     00BE                     l2956:
  5045                           
  5046                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1256:   width = read
      +                          _prec_or_width(fmt, ap);
  5047     00BE  0847               	movf	vfpfcnvrt@ap,w
  5048     00BF  00AA               	movwf	read_prec_or_width@ap
  5049     00C0  0846               	movf	vfpfcnvrt@fmt,w
  5050     00C1  3185  2590  3180   	fcall	_read_prec_or_width
  5051     00C4  0020               	movlb	0	; select bank0
  5052     00C5  082B               	movf	?_read_prec_or_width+1,w
  5053     00C6  00E4               	movwf	_width+1
  5054     00C7  082A               	movf	?_read_prec_or_width,w
  5055     00C8  00E3               	movwf	_width
  5056     00C9                     l2958:
  5057                           
  5058                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1257:   if (width < 
      +                          0) {
  5059     00C9  1FE4               	btfss	_width+1,7
  5060     00CA  28CC               	goto	u2961
  5061     00CB  28CD               	goto	u2960
  5062     00CC                     u2961:
  5063     00CC  28D3               	goto	l2964
  5064     00CD                     u2960:
  5065     00CD                     l2960:
  5066                           
  5067                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1
      +                           << 0);
  5068     00CD  1465               	bsf	_flags,0
  5069     00CE                     l2962:
  5070                           
  5071                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1259:    width = -wi
      +                          dth;
  5072     00CE  09E3               	comf	_width,f
  5073     00CF  09E4               	comf	_width+1,f
  5074     00D0  0AE3               	incf	_width,f
  5075     00D1  1903               	skipnz
  5076     00D2  0AE4               	incf	_width+1,f
  5077     00D3                     l2964:
  5078                           
  5079                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  5080     00D3  0846               	movf	vfpfcnvrt@fmt,w
  5081     00D4  0086               	movwf	6
  5082     00D5  0187               	clrf	7
  5083     00D6  3F40               	moviw [0]fsr1
  5084     00D7  00D2               	movwf	vfpfcnvrt@cp
  5085     00D8  3F41               	moviw [1]fsr1
  5086     00D9  00D3               	movwf	vfpfcnvrt@cp+1
  5087     00DA                     l2966:
  5088                           
  5089                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == '
      +                          d' || *cp == 'i') {
  5090     00DA  0852               	movf	vfpfcnvrt@cp,w
  5091     00DB  0084               	movwf	4
  5092     00DC  0853               	movf	vfpfcnvrt@cp+1,w
  5093     00DD  0085               	movwf	5
  5094     00DE  0012               	moviw fsr0++
  5095     00DF  3A64               	xorlw	100
  5096     00E0  1903               	btfsc	3,2
  5097     00E1  28E3               	goto	u2971
  5098     00E2  28E4               	goto	u2970
  5099     00E3                     u2971:
  5100     00E3  28EE               	goto	l2970
  5101     00E4                     u2970:
  5102     00E4                     l2968:
  5103     00E4  0852               	movf	vfpfcnvrt@cp,w
  5104     00E5  0084               	movwf	4
  5105     00E6  0853               	movf	vfpfcnvrt@cp+1,w
  5106     00E7  0085               	movwf	5
  5107     00E8  0012               	moviw fsr0++
  5108     00E9  3A69               	xorlw	105
  5109     00EA  1D03               	btfss	3,2
  5110     00EB  28ED               	goto	u2981
  5111     00EC  28EE               	goto	u2980
  5112     00ED                     u2981:
  5113     00ED  2910               	goto	l2978
  5114     00EE                     u2980:
  5115     00EE                     l2970:
  5116                           
  5117                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1404:    convarg.sin
      +                          t = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5118     00EE  0847               	movf	vfpfcnvrt@ap,w
  5119     00EF  0086               	movwf	6
  5120     00F0  0187               	clrf	7
  5121     00F1  0801               	movf	1,w
  5122     00F2  0084               	movwf	4
  5123     00F3  0185               	clrf	5
  5124     00F4  3002               	movlw	2
  5125     00F5  0781               	addwf	1,f
  5126     00F6  3F00               	moviw [0]fsr0
  5127     00F7  00CD               	movwf	vfpfcnvrt@convarg
  5128     00F8  3F01               	moviw [1]fsr0
  5129     00F9  00CE               	movwf	vfpfcnvrt@convarg+1
  5130     00FA                     l2972:
  5131                           
  5132                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1
      +                          ;
  5133     00FA  0852               	movf	vfpfcnvrt@cp,w
  5134     00FB  3E01               	addlw	1
  5135     00FC  00C8               	movwf	??_vfpfcnvrt
  5136     00FD  3000               	movlw	0
  5137     00FE  3D53               	addwfc	vfpfcnvrt@cp+1,w
  5138     00FF  00C9               	movwf	??_vfpfcnvrt+1
  5139     0100  0846               	movf	vfpfcnvrt@fmt,w
  5140     0101  0086               	movwf	6
  5141     0102  0187               	clrf	7
  5142     0103  0848               	movf	??_vfpfcnvrt,w
  5143     0104  3FC0               	movwi [0]fsr1
  5144     0105  0849               	movf	??_vfpfcnvrt+1,w
  5145     0106  3FC1               	movwi [1]fsr1
  5146     0107                     l2974:
  5147                           
  5148                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1432:    return (voi
      +                          d) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5149     0107  084E               	movf	vfpfcnvrt@convarg+1,w
  5150     0108  00BB               	movwf	dtoa@d+1
  5151     0109  084D               	movf	vfpfcnvrt@convarg,w
  5152     010A  00BA               	movwf	dtoa@d
  5153     010B  0851               	movf	vfpfcnvrt@fp,w
  5154     010C  3182  2216  3180   	fcall	_dtoa
  5155     010F  2968               	goto	l948
  5156     0110                     l2978:
  5157     0110  0852               	movf	vfpfcnvrt@cp,w
  5158     0111  0084               	movwf	4
  5159     0112  0853               	movf	vfpfcnvrt@cp+1,w
  5160     0113  0085               	movwf	5
  5161     0114  0012               	moviw fsr0++
  5162     0115  3A78               	xorlw	120
  5163     0116  1D03               	btfss	3,2
  5164     0117  2919               	goto	u2991
  5165     0118  291A               	goto	u2990
  5166     0119                     u2991:
  5167     0119  2946               	goto	l2992
  5168     011A                     u2990:
  5169     011A                     l2980:
  5170                           
  5171                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1452:     ) {;/Appli
      +                          cations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1495:    convarg.uint = (vf
      +                          pf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  5172     011A  0847               	movf	vfpfcnvrt@ap,w
  5173     011B  0086               	movwf	6
  5174     011C  0187               	clrf	7
  5175     011D  0801               	movf	1,w
  5176     011E  0084               	movwf	4
  5177     011F  0185               	clrf	5
  5178     0120  3002               	movlw	2
  5179     0121  0781               	addwf	1,f
  5180     0122  3F00               	moviw [0]fsr0
  5181     0123  00CD               	movwf	vfpfcnvrt@convarg
  5182     0124  3F01               	moviw [1]fsr0
  5183     0125  00CE               	movwf	vfpfcnvrt@convarg+1
  5184     0126                     l2982:
  5185                           
  5186                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1497:    *fmt = cp+1
      +                          ;
  5187     0126  0852               	movf	vfpfcnvrt@cp,w
  5188     0127  3E01               	addlw	1
  5189     0128  00C8               	movwf	??_vfpfcnvrt
  5190     0129  3000               	movlw	0
  5191     012A  3D53               	addwfc	vfpfcnvrt@cp+1,w
  5192     012B  00C9               	movwf	??_vfpfcnvrt+1
  5193     012C  0846               	movf	vfpfcnvrt@fmt,w
  5194     012D  0086               	movwf	6
  5195     012E  0187               	clrf	7
  5196     012F  0848               	movf	??_vfpfcnvrt,w
  5197     0130  3FC0               	movwi [0]fsr1
  5198     0131  0849               	movf	??_vfpfcnvrt+1,w
  5199     0132  3FC1               	movwi [1]fsr1
  5200                           
  5201                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1498:    switch (*cp
      +                          ) {
  5202     0133  293D               	goto	l2990
  5203     0134                     l2984:
  5204                           
  5205                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1586:      return (v
      +                          oid) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  5206     0134  084E               	movf	vfpfcnvrt@convarg+1,w
  5207     0135  00BB               	movwf	xtoa@d+1
  5208     0136  084D               	movf	vfpfcnvrt@convarg,w
  5209     0137  00BA               	movwf	xtoa@d
  5210     0138  0851               	movf	vfpfcnvrt@fp,w
  5211     0139  3184  244F  3180   	fcall	_xtoa
  5212     013C  2968               	goto	l948
  5213     013D                     l2990:
  5214     013D  0852               	movf	vfpfcnvrt@cp,w
  5215     013E  0084               	movwf	4
  5216     013F  0853               	movf	vfpfcnvrt@cp+1,w
  5217     0140  0085               	movwf	5
  5218     0141  0800               	movf	0,w	;code access
  5219                           
  5220                           ; Switch size 1, requested type "simple"
  5221                           ; Number of cases is 1, Range of values is 120 to 120
  5222                           ; switch strategies available:
  5223                           ; Name         Instructions Cycles
  5224                           ; simple_byte            4     3 (average)
  5225                           ; direct_byte           11     9 (fixed)
  5226                           ; jumptable            263     9 (fixed)
  5227                           ;	Chosen strategy is simple_byte
  5228     0142  3A78               	xorlw	120	; case 120
  5229     0143  1903               	skipnz
  5230     0144  2934               	goto	l2984
  5231     0145  2946               	goto	l2992
  5232     0146                     l2992:
  5233                           
  5234                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  5235     0146  0020               	movlb	0	; select bank0
  5236     0147  0846               	movf	vfpfcnvrt@fmt,w
  5237     0148  0086               	movwf	6
  5238     0149  0187               	clrf	7
  5239     014A  3001               	movlw	1
  5240     014B  0781               	addwf	1,f
  5241     014C  3141               	addfsr 1,1
  5242     014D  1803               	skipnc
  5243     014E  0A81               	incf	1,f
  5244     014F  2968               	goto	l948
  5245     0150                     l2996:
  5246                           
  5247                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  5248     0150  0846               	movf	vfpfcnvrt@fmt,w
  5249     0151  0086               	movwf	6
  5250     0152  0187               	clrf	7
  5251     0153  3F40               	moviw [0]fsr1
  5252     0154  00C8               	movwf	??_vfpfcnvrt
  5253     0155  3F41               	moviw [1]fsr1
  5254     0156  00C9               	movwf	??_vfpfcnvrt+1
  5255     0157  0848               	movf	??_vfpfcnvrt,w
  5256     0158  0084               	movwf	4
  5257     0159  0849               	movf	??_vfpfcnvrt+1,w
  5258     015A  0085               	movwf	5
  5259     015B  0800               	movf	0,w	;code access
  5260     015C  00CA               	movwf	??_vfpfcnvrt+2
  5261     015D  01CB               	clrf	??_vfpfcnvrt+3
  5262     015E  084A               	movf	??_vfpfcnvrt+2,w
  5263     015F  00A4               	movwf	fputc@c
  5264     0160  084B               	movf	??_vfpfcnvrt+3,w
  5265     0161  00A5               	movwf	fputc@c+1
  5266     0162  0851               	movf	vfpfcnvrt@fp,w
  5267     0163  00A6               	movwf	fputc@fp
  5268     0164  3186  26FF  3180   	fcall	_fputc
  5269     0167  2946               	goto	l2992
  5270     0168                     l948:
  5271     0168  0008               	return
  5272     0169                     __end_of_vfpfcnvrt:
  5273                           
  5274                           	psect	text20
  5275     044F                     __ptext20:	
  5276 ;; *************** function _xtoa *****************
  5277 ;; Defined at:
  5278 ;;		line 1055 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  fp              1    wreg     PTR struct _IO_FILE
  5281 ;;		 -> sprintf@f(11), 
  5282 ;;  d               2   26[BANK0 ] unsigned int 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  5285 ;;		 -> sprintf@f(11), 
  5286 ;;  i               2   34[BANK0 ] int 
  5287 ;;  w               2   31[BANK0 ] int 
  5288 ;;  c               1   33[BANK0 ] unsigned char 
  5289 ;;  p               1   30[BANK0 ] _Bool 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5299 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5300 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5302 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5303 ;;Total ram usage:       10 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; Hardware stack levels required when called: 7
  5306 ;; This function calls:
  5307 ;;		_pad
  5308 ;; This function is called by:
  5309 ;;		_vfpfcnvrt
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313     044F                     _xtoa:	
  5314                           ;psect for function _xtoa
  5315                           
  5316                           
  5317                           ;incstack = 0
  5318                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5319                           ;xtoa@fp stored from wreg
  5320     044F  0020               	movlb	0	; select bank0
  5321     0450  00BD               	movwf	xtoa@fp
  5322     0451                     l2882:
  5323                           
  5324                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1055: static void xt
      +                          oa(FILE *fp, vfpf_uint_t d);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/dop
      +                          rnt.c: 1058: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1059: 
      +                           char c;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1063:     in
      +                          t i, w;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1067:  _Bool 
      +                          p = 1;
  5325     0451  01BE               	clrf	xtoa@p
  5326     0452  0ABE               	incf	xtoa@p,f
  5327     0453                     l2884:
  5328                           
  5329                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1082:     w = width;
  5330     0453  0864               	movf	_width+1,w
  5331     0454  00C0               	movwf	xtoa@w+1
  5332     0455  0863               	movf	_width,w
  5333     0456  00BF               	movwf	xtoa@w
  5334                           
  5335                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1095:     i = sizeof
      +                          (dbuf) - 1;
  5336     0457  301F               	movlw	31
  5337     0458  00C2               	movwf	xtoa@i
  5338     0459  3000               	movlw	0
  5339     045A  00C3               	movwf	xtoa@i+1
  5340     045B                     l2886:
  5341                           
  5342                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1096:     dbuf[i] = 
      +                          '\0';
  5343     045B  0022               	movlb	2	; select bank2
  5344     045C  01BF               	clrf	(_dbuf^(0+256)+31)
  5345                           
  5346                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  5347     045D  2C89               	goto	l2906
  5348     045E                     l2888:
  5349                           
  5350                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1106:     )) {;/Appl
      +                          ications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1107:         --i;
  5351     045E  30FF               	movlw	255
  5352     045F  07C2               	addwf	xtoa@i,f
  5353     0460  30FF               	movlw	255
  5354     0461  3DC3               	addwfc	xtoa@i+1,f
  5355     0462                     l2890:
  5356                           
  5357                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1108:         c = d 
      +                          & 0x0f;
  5358     0462  083A               	movf	xtoa@d,w
  5359     0463  390F               	andlw	15
  5360     0464  00C1               	movwf	xtoa@c
  5361     0465                     l2892:
  5362                           
  5363                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1109:   if (c < 10) 
      +                          {
  5364     0465  300A               	movlw	10
  5365     0466  0241               	subwf	xtoa@c,w
  5366     0467  1803               	skipnc
  5367     0468  2C6A               	goto	u2861
  5368     0469  2C6B               	goto	u2860
  5369     046A                     u2861:
  5370     046A  2C70               	goto	l2896
  5371     046B                     u2860:
  5372     046B                     l2894:
  5373                           
  5374                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1110:    c += '0';
  5375     046B  3030               	movlw	48
  5376     046C  00BC               	movwf	??_xtoa
  5377     046D  083C               	movf	??_xtoa,w
  5378     046E  07C1               	addwf	xtoa@c,f
  5379                           
  5380                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1111:   }
  5381     046F  2C74               	goto	l2898
  5382     0470                     l2896:
  5383                           
  5384                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1116:    c += 'a' - 
      +                          10;
  5385     0470  3057               	movlw	87
  5386     0471  00BC               	movwf	??_xtoa
  5387     0472  083C               	movf	??_xtoa,w
  5388     0473  07C1               	addwf	xtoa@c,f
  5389     0474                     l2898:
  5390                           
  5391                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1121:   dbuf[i] = c;
  5392     0474  0842               	movf	xtoa@i,w
  5393     0475  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5394     0476  0086               	movwf	6
  5395     0477  3001               	movlw	1	; select bank2/3
  5396     0478  0087               	movwf	7
  5397     0479  0841               	movf	xtoa@c,w
  5398     047A  0081               	movwf	1
  5399     047B                     l2900:
  5400                           
  5401                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1125:   p = 0;
  5402     047B  01BE               	clrf	xtoa@p
  5403     047C                     l2902:
  5404                           
  5405                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1127:         --w;
  5406     047C  30FF               	movlw	255
  5407     047D  07BF               	addwf	xtoa@w,f
  5408     047E  30FF               	movlw	255
  5409     047F  3DC0               	addwfc	xtoa@w+1,f
  5410     0480                     l2904:
  5411                           
  5412                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1128:         d = d 
      +                          >> 4;
  5413     0480  0E3A               	swapf	xtoa@d,w
  5414     0481  390F               	andlw	15
  5415     0482  00BA               	movwf	xtoa@d
  5416     0483  0E3B               	swapf	xtoa@d+1,w
  5417     0484  39F0               	andlw	240
  5418     0485  04BA               	iorwf	xtoa@d,f
  5419     0486  0E3B               	swapf	xtoa@d+1,w
  5420     0487  390F               	andlw	15
  5421     0488  00BB               	movwf	xtoa@d+1
  5422     0489                     l2906:
  5423                           
  5424                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  5425     0489  0020               	movlb	0	; select bank0
  5426     048A  0843               	movf	xtoa@i+1,w
  5427     048B  3A80               	xorlw	128
  5428     048C  00BC               	movwf	??_xtoa
  5429     048D  3080               	movlw	128
  5430     048E  023C               	subwf	??_xtoa,w
  5431     048F  1D03               	skipz
  5432     0490  2C93               	goto	u2875
  5433     0491  3002               	movlw	2
  5434     0492  0242               	subwf	xtoa@i,w
  5435     0493                     u2875:
  5436     0493  1C03               	skipc
  5437     0494  2C96               	goto	u2871
  5438     0495  2C97               	goto	u2870
  5439     0496                     u2871:
  5440     0496  2CB5               	goto	l2916
  5441     0497                     u2870:
  5442     0497                     l2908:
  5443     0497  0020               	movlb	0	; select bank0
  5444     0498  083A               	movf	xtoa@d,w
  5445     0499  043B               	iorwf	xtoa@d+1,w
  5446     049A  1D03               	btfss	3,2
  5447     049B  2C9D               	goto	u2881
  5448     049C  2C9E               	goto	u2880
  5449     049D                     u2881:
  5450     049D  2C5E               	goto	l2888
  5451     049E                     u2880:
  5452     049E                     l2910:
  5453     049E  083E               	movf	xtoa@p,w
  5454     049F  1D03               	btfss	3,2
  5455     04A0  2CA2               	goto	u2891
  5456     04A1  2CA3               	goto	u2890
  5457     04A2                     u2891:
  5458     04A2  2C5E               	goto	l2888
  5459     04A3                     u2890:
  5460     04A3                     l2912:
  5461     04A3  0840               	movf	xtoa@w+1,w
  5462     04A4  3A80               	xorlw	128
  5463     04A5  00BC               	movwf	??_xtoa
  5464     04A6  3080               	movlw	128
  5465     04A7  023C               	subwf	??_xtoa,w
  5466     04A8  1D03               	skipz
  5467     04A9  2CAC               	goto	u2905
  5468     04AA  3001               	movlw	1
  5469     04AB  023F               	subwf	xtoa@w,w
  5470     04AC                     u2905:
  5471     04AC  1C03               	skipc
  5472     04AD  2CAF               	goto	u2901
  5473     04AE  2CB0               	goto	u2900
  5474     04AF                     u2901:
  5475     04AF  2CB5               	goto	l2916
  5476     04B0                     u2900:
  5477     04B0                     l2914:
  5478     04B0  0020               	movlb	0	; select bank0
  5479     04B1  18E5               	btfsc	_flags,1
  5480     04B2  2CB4               	goto	u2911
  5481     04B3  2CB5               	goto	u2910
  5482     04B4                     u2911:
  5483     04B4  2C5E               	goto	l2888
  5484     04B5                     u2910:
  5485     04B5                     l2916:
  5486                           
  5487                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1152:     return (vo
      +                          id) pad(fp, &dbuf[i], w);
  5488     04B5  0020               	movlb	0	; select bank0
  5489     04B6  0842               	movf	xtoa@i,w
  5490     04B7  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5491     04B8  00B3               	movwf	pad@buf
  5492     04B9  0840               	movf	xtoa@w+1,w
  5493     04BA  00B5               	movwf	pad@p+1
  5494     04BB  083F               	movf	xtoa@w,w
  5495     04BC  00B4               	movwf	pad@p
  5496     04BD  083D               	movf	xtoa@fp,w
  5497     04BE  318F  27C1  3184   	fcall	_pad
  5498     04C1                     l925:
  5499     04C1  0008               	return
  5500     04C2                     __end_of_xtoa:
  5501                           
  5502                           	psect	text21
  5503     0590                     __ptext21:	
  5504 ;; *************** function _read_prec_or_width *****************
  5505 ;; Defined at:
  5506 ;;		line 1158 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  fmt             1    wreg     PTR PTR const unsigned c
  5509 ;;		 -> vfprintf@cfmt(2), 
  5510 ;;  ap              1   10[BANK0 ] PTR PTR void [1]
  5511 ;;		 -> sprintf@ap(1), 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  fmt             1   18[BANK0 ] PTR PTR const unsigned c
  5514 ;;		 -> vfprintf@cfmt(2), 
  5515 ;;  c               1   15[BANK0 ] unsigned char 
  5516 ;;  n               2   16[BANK0 ] int 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  2   10[BANK0 ] int 
  5519 ;; Registers used:
  5520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5527 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5528 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5529 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5530 ;;Total ram usage:        9 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; Hardware stack levels required when called: 4
  5533 ;; This function calls:
  5534 ;;		___wmul
  5535 ;; This function is called by:
  5536 ;;		_vfpfcnvrt
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540     0590                     _read_prec_or_width:	
  5541                           ;psect for function _read_prec_or_width
  5542                           
  5543                           
  5544                           ;incstack = 0
  5545                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5546                           ;read_prec_or_width@fmt stored from wreg
  5547     0590  0020               	movlb	0	; select bank0
  5548     0591  00B2               	movwf	read_prec_or_width@fmt
  5549     0592                     l2920:
  5550                           
  5551                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  5552     0592  01B0               	clrf	read_prec_or_width@n
  5553     0593  01B1               	clrf	read_prec_or_width@n+1
  5554     0594                     l2922:
  5555                           
  5556                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)
      +                          [0] == '*') {
  5557     0594  0832               	movf	read_prec_or_width@fmt,w
  5558     0595  0086               	movwf	6
  5559     0596  0187               	clrf	7
  5560     0597  3F40               	moviw [0]fsr1
  5561     0598  00AC               	movwf	??_read_prec_or_width
  5562     0599  3F41               	moviw [1]fsr1
  5563     059A  00AD               	movwf	??_read_prec_or_width+1
  5564     059B  082C               	movf	??_read_prec_or_width,w
  5565     059C  0084               	movwf	4
  5566     059D  082D               	movf	??_read_prec_or_width+1,w
  5567     059E  0085               	movwf	5
  5568     059F  0012               	moviw fsr0++
  5569     05A0  3A2A               	xorlw	42
  5570     05A1  1D03               	btfss	3,2
  5571     05A2  2DA4               	goto	u2921
  5572     05A3  2DA5               	goto	u2920
  5573     05A4                     u2921:
  5574     05A4  2DD7               	goto	l2932
  5575     05A5                     u2920:
  5576     05A5                     l2924:
  5577                           
  5578                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt
      +                          ;
  5579     05A5  0832               	movf	read_prec_or_width@fmt,w
  5580     05A6  0086               	movwf	6
  5581     05A7  0187               	clrf	7
  5582     05A8  3001               	movlw	1
  5583     05A9  0781               	addwf	1,f
  5584     05AA  3141               	addfsr 1,1
  5585     05AB  1803               	skipnc
  5586     05AC  0A81               	incf	1,f
  5587     05AD                     l2926:
  5588                           
  5589                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1162:         n = (*
      +                          (int *)__va_arg(*(int **)*ap, (int)0));
  5590     05AD  082A               	movf	read_prec_or_width@ap,w
  5591     05AE  0086               	movwf	6
  5592     05AF  0187               	clrf	7
  5593     05B0  0801               	movf	1,w
  5594     05B1  0084               	movwf	4
  5595     05B2  0185               	clrf	5
  5596     05B3  3002               	movlw	2
  5597     05B4  0781               	addwf	1,f
  5598     05B5  3F00               	moviw [0]fsr0
  5599     05B6  00B0               	movwf	read_prec_or_width@n
  5600     05B7  3F01               	moviw [1]fsr0
  5601     05B8  00B1               	movwf	read_prec_or_width@n+1
  5602                           
  5603                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1163:     } else {
  5604     05B9  2DEB               	goto	l2934
  5605     05BA                     l2928:
  5606                           
  5607                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1166:             n 
      +                          = n * 10 + c;
  5608     05BA  082F               	movf	read_prec_or_width@c,w
  5609     05BB  00AC               	movwf	??_read_prec_or_width
  5610     05BC  01AD               	clrf	??_read_prec_or_width+1
  5611     05BD  0831               	movf	read_prec_or_width@n+1,w
  5612     05BE  00A5               	movwf	___wmul@multiplier+1
  5613     05BF  0830               	movf	read_prec_or_width@n,w
  5614     05C0  00A4               	movwf	___wmul@multiplier
  5615     05C1  300A               	movlw	10
  5616     05C2  00A6               	movwf	___wmul@multiplicand
  5617     05C3  3000               	movlw	0
  5618     05C4  00A7               	movwf	___wmul@multiplicand+1
  5619     05C5  318E  269D  3185   	fcall	___wmul
  5620     05C8  0020               	movlb	0	; select bank0
  5621     05C9  082C               	movf	??_read_prec_or_width,w
  5622     05CA  0724               	addwf	?___wmul,w
  5623     05CB  00B0               	movwf	read_prec_or_width@n
  5624     05CC  082D               	movf	??_read_prec_or_width+1,w
  5625     05CD  3D25               	addwfc	?___wmul+1,w
  5626     05CE  00B1               	movwf	read_prec_or_width@n+1
  5627     05CF                     l2930:
  5628                           
  5629                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1167:             ++
      +                          *fmt;
  5630     05CF  0832               	movf	read_prec_or_width@fmt,w
  5631     05D0  0086               	movwf	6
  5632     05D1  0187               	clrf	7
  5633     05D2  3001               	movlw	1
  5634     05D3  0781               	addwf	1,f
  5635     05D4  3141               	addfsr 1,1
  5636     05D5  1803               	skipnc
  5637     05D6  0A81               	incf	1,f
  5638     05D7                     l2932:
  5639                           
  5640                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1165:         while 
      +                          ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  5641     05D7  0832               	movf	read_prec_or_width@fmt,w
  5642     05D8  0086               	movwf	6
  5643     05D9  0187               	clrf	7
  5644     05DA  3F40               	moviw [0]fsr1
  5645     05DB  00AC               	movwf	??_read_prec_or_width
  5646     05DC  3F41               	moviw [1]fsr1
  5647     05DD  00AD               	movwf	??_read_prec_or_width+1
  5648     05DE  082C               	movf	??_read_prec_or_width,w
  5649     05DF  0084               	movwf	4
  5650     05E0  082D               	movf	??_read_prec_or_width+1,w
  5651     05E1  0085               	movwf	5
  5652     05E2  0800               	movf	0,w	;code access
  5653     05E3  3ED0               	addlw	208
  5654     05E4  00AF               	movwf	read_prec_or_width@c
  5655     05E5  300A               	movlw	10
  5656     05E6  022F               	subwf	read_prec_or_width@c,w
  5657     05E7  1C03               	skipc
  5658     05E8  2DEA               	goto	u2931
  5659     05E9  2DEB               	goto	u2930
  5660     05EA                     u2931:
  5661     05EA  2DBA               	goto	l2928
  5662     05EB                     u2930:
  5663     05EB                     l2934:
  5664                           
  5665                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1170:     return n;
  5666     05EB  0831               	movf	read_prec_or_width@n+1,w
  5667     05EC  00AB               	movwf	?_read_prec_or_width+1
  5668     05ED  0830               	movf	read_prec_or_width@n,w
  5669     05EE  00AA               	movwf	?_read_prec_or_width
  5670     05EF                     l933:
  5671     05EF  0008               	return
  5672     05F0                     __end_of_read_prec_or_width:
  5673                           
  5674                           	psect	text22
  5675     0E9D                     __ptext22:	
  5676 ;; *************** function ___wmul *****************
  5677 ;; Defined at:
  5678 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul16.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5681 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  product         2    8[BANK0 ] unsigned int 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  2    4[BANK0 ] unsigned int 
  5686 ;; Registers used:
  5687 ;;		wreg, status,2, status,0
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5693 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5694 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5696 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5697 ;;Total ram usage:        6 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 3
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_read_prec_or_width
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707     0E9D                     ___wmul:	
  5708                           ;psect for function ___wmul
  5709                           
  5710     0E9D                     l2716:	
  5711                           ;incstack = 0
  5712                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5713                           
  5714     0E9D  0020               	movlb	0	; select bank0
  5715     0E9E  01A8               	clrf	___wmul@product
  5716     0E9F  01A9               	clrf	___wmul@product+1
  5717     0EA0                     l2718:
  5718     0EA0  1C24               	btfss	___wmul@multiplier,0
  5719     0EA1  2EA3               	goto	u2481
  5720     0EA2  2EA4               	goto	u2480
  5721     0EA3                     u2481:
  5722     0EA3  2EA8               	goto	l403
  5723     0EA4                     u2480:
  5724     0EA4                     l2720:
  5725     0EA4  0826               	movf	___wmul@multiplicand,w
  5726     0EA5  07A8               	addwf	___wmul@product,f
  5727     0EA6  0827               	movf	___wmul@multiplicand+1,w
  5728     0EA7  3DA9               	addwfc	___wmul@product+1,f
  5729     0EA8                     l403:
  5730     0EA8  3001               	movlw	1
  5731     0EA9                     u2495:
  5732     0EA9  35A6               	lslf	___wmul@multiplicand,f
  5733     0EAA  0DA7               	rlf	___wmul@multiplicand+1,f
  5734     0EAB  0B89               	decfsz	9,f
  5735     0EAC  2EA9               	goto	u2495
  5736     0EAD                     l2722:
  5737     0EAD  3001               	movlw	1
  5738     0EAE                     u2505:
  5739     0EAE  36A5               	lsrf	___wmul@multiplier+1,f
  5740     0EAF  0CA4               	rrf	___wmul@multiplier,f
  5741     0EB0  0B89               	decfsz	9,f
  5742     0EB1  2EAE               	goto	u2505
  5743     0EB2                     l2724:
  5744     0EB2  0824               	movf	___wmul@multiplier,w
  5745     0EB3  0425               	iorwf	___wmul@multiplier+1,w
  5746     0EB4  1D03               	btfss	3,2
  5747     0EB5  2EB7               	goto	u2511
  5748     0EB6  2EB8               	goto	u2510
  5749     0EB7                     u2511:
  5750     0EB7  2EA0               	goto	l2718
  5751     0EB8                     u2510:
  5752     0EB8                     l2726:
  5753     0EB8  0829               	movf	___wmul@product+1,w
  5754     0EB9  00A5               	movwf	?___wmul+1
  5755     0EBA  0828               	movf	___wmul@product,w
  5756     0EBB  00A4               	movwf	?___wmul
  5757     0EBC                     l405:
  5758     0EBC  0008               	return
  5759     0EBD                     __end_of___wmul:
  5760                           
  5761                           	psect	text23
  5762     0216                     __ptext23:	
  5763 ;; *************** function _dtoa *****************
  5764 ;; Defined at:
  5765 ;;		line 513 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  fp              1    wreg     PTR struct _IO_FILE
  5768 ;;		 -> sprintf@f(11), 
  5769 ;;  d               2   26[BANK0 ] int 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  5772 ;;		 -> sprintf@f(11), 
  5773 ;;  i               2   36[BANK0 ] int 
  5774 ;;  w               2   33[BANK0 ] int 
  5775 ;;  s               1   35[BANK0 ] unsigned char 
  5776 ;;  p               1   32[BANK0 ] _Bool 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5786 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5787 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5788 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5789 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5790 ;;Total ram usage:       12 bytes
  5791 ;; Hardware stack levels used: 1
  5792 ;; Hardware stack levels required when called: 7
  5793 ;; This function calls:
  5794 ;;		___awdiv
  5795 ;;		___awmod
  5796 ;;		_abs
  5797 ;;		_pad
  5798 ;; This function is called by:
  5799 ;;		_vfpfcnvrt
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803     0216                     _dtoa:	
  5804                           ;psect for function _dtoa
  5805                           
  5806                           
  5807                           ;incstack = 0
  5808                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5809                           ;dtoa@fp stored from wreg
  5810     0216  0020               	movlb	0	; select bank0
  5811     0217  00BD               	movwf	dtoa@fp
  5812     0218                     l2836:
  5813                           
  5814                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 513: static void dto
      +                          a(FILE *fp, vfpf_sint_t d);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/dopr
      +                          nt.c: 514: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 515:  ch
      +                          ar s;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 516:     int i,
      +                           w;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 520:  _Bool p = 1
      +                          ;
  5815     0218  01C0               	clrf	dtoa@p
  5816     0219  0AC0               	incf	dtoa@p,f
  5817     021A                     l2838:
  5818                           
  5819                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 524:     s = d < 0 ?
      +                           1 : 0;
  5820     021A  1BBB               	btfsc	dtoa@d+1,7
  5821     021B  2A1D               	goto	u2761
  5822     021C  2A1F               	goto	u2760
  5823     021D                     u2761:
  5824     021D  3001               	movlw	1
  5825     021E  2A20               	goto	u2770
  5826     021F                     u2760:
  5827     021F  3000               	movlw	0
  5828     0220                     u2770:
  5829     0220  00C3               	movwf	dtoa@s
  5830                           
  5831                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 535:     w = width;
  5832     0221  0864               	movf	_width+1,w
  5833     0222  00C2               	movwf	dtoa@w+1
  5834     0223  0863               	movf	_width,w
  5835     0224  00C1               	movwf	dtoa@w
  5836     0225                     l2840:
  5837                           
  5838                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 536:     if (s
  5839     0225  0843               	movf	dtoa@s,w
  5840     0226  1903               	btfsc	3,2
  5841     0227  2A29               	goto	u2781
  5842     0228  2A2A               	goto	u2780
  5843     0229                     u2781:
  5844     0229  2A3E               	goto	l900
  5845     022A                     u2780:
  5846     022A                     l2842:
  5847                           
  5848                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 540:     ) {;/Applic
      +                          ations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 541:         --w;
  5849     022A  30FF               	movlw	255
  5850     022B  07C1               	addwf	dtoa@w,f
  5851     022C  30FF               	movlw	255
  5852     022D  3DC2               	addwfc	dtoa@w+1,f
  5853     022E                     l2844:
  5854                           
  5855                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' :
      +                           '+';
  5856     022E  0843               	movf	dtoa@s,w
  5857     022F  1D03               	btfss	3,2
  5858     0230  2A32               	goto	u2791
  5859     0231  2A33               	goto	u2790
  5860     0232                     u2791:
  5861     0232  2A38               	goto	l2848
  5862     0233                     u2790:
  5863     0233                     l2846:
  5864     0233  302B               	movlw	43
  5865     0234  00BE               	movwf	_dtoa$1192
  5866     0235  3000               	movlw	0
  5867     0236  00BF               	movwf	_dtoa$1192+1
  5868     0237  2A3C               	goto	l904
  5869     0238                     l2848:
  5870     0238  302D               	movlw	45
  5871     0239  00BE               	movwf	_dtoa$1192
  5872     023A  3000               	movlw	0
  5873     023B  00BF               	movwf	_dtoa$1192+1
  5874     023C                     l904:
  5875     023C  083E               	movf	_dtoa$1192,w
  5876     023D  00C3               	movwf	dtoa@s
  5877     023E                     l900:	
  5878                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 543:     }
  5879                           
  5880                           
  5881                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(
      +                          dbuf) - 1;
  5882     023E  301F               	movlw	31
  5883     023F  00C4               	movwf	dtoa@i
  5884     0240  3000               	movlw	0
  5885     0241  00C5               	movwf	dtoa@i+1
  5886     0242                     l2850:
  5887                           
  5888                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '
      +                          \0';
  5889     0242  0022               	movlb	2	; select bank2
  5890     0243  01BF               	clrf	(_dbuf^(0+256)+31)
  5891                           
  5892                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 554:     while (!(i 
      +                          < 1) && (d != 0
  5893     0244  2A7A               	goto	l2862
  5894     0245                     l2852:
  5895                           
  5896                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 563:     )) {;/Appli
      +                          cations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 564:         --i;
  5897     0245  30FF               	movlw	255
  5898     0246  07C4               	addwf	dtoa@i,f
  5899     0247  30FF               	movlw	255
  5900     0248  3DC5               	addwfc	dtoa@i+1,f
  5901     0249                     l2854:
  5902                           
  5903                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 565:         dbuf[i]
      +                           = (char)((int)'0' + abs(d % 10));
  5904     0249  0844               	movf	dtoa@i,w
  5905     024A  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5906     024B  0086               	movwf	6
  5907     024C  3001               	movlw	1	; select bank2/3
  5908     024D  0087               	movwf	7
  5909     024E  300A               	movlw	10
  5910     024F  00A4               	movwf	___awmod@divisor
  5911     0250  3000               	movlw	0
  5912     0251  00A5               	movwf	___awmod@divisor+1
  5913     0252  083B               	movf	dtoa@d+1,w
  5914     0253  00A7               	movwf	___awmod@dividend+1
  5915     0254  083A               	movf	dtoa@d,w
  5916     0255  00A6               	movwf	___awmod@dividend
  5917     0256  3186  26AB  3182   	fcall	___awmod
  5918     0259  0020               	movlb	0	; select bank0
  5919     025A  0825               	movf	?___awmod+1,w
  5920     025B  00AC               	movwf	abs@a+1
  5921     025C  0824               	movf	?___awmod,w
  5922     025D  00AB               	movwf	abs@a
  5923     025E  318D  259C  3182   	fcall	_abs
  5924     0261  0020               	movlb	0	; select bank0
  5925     0262  082B               	movf	?_abs,w
  5926     0263  3E30               	addlw	48
  5927     0264  0081               	movwf	1
  5928     0265                     l2856:
  5929                           
  5930                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 569:   p = 0;
  5931     0265  01C0               	clrf	dtoa@p
  5932     0266                     l2858:
  5933                           
  5934                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 571:         --w;
  5935     0266  30FF               	movlw	255
  5936     0267  07C1               	addwf	dtoa@w,f
  5937     0268  30FF               	movlw	255
  5938     0269  3DC2               	addwfc	dtoa@w+1,f
  5939     026A                     l2860:
  5940                           
  5941                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 572:         d = d /
      +                           10;
  5942     026A  300A               	movlw	10
  5943     026B  00A4               	movwf	___awdiv@divisor
  5944     026C  3000               	movlw	0
  5945     026D  00A5               	movwf	___awdiv@divisor+1
  5946     026E  083B               	movf	dtoa@d+1,w
  5947     026F  00A7               	movwf	___awdiv@dividend+1
  5948     0270  083A               	movf	dtoa@d,w
  5949     0271  00A6               	movwf	___awdiv@dividend
  5950     0272  3185  25F0  3182   	fcall	___awdiv
  5951     0275  0020               	movlb	0	; select bank0
  5952     0276  0825               	movf	?___awdiv+1,w
  5953     0277  00BB               	movwf	dtoa@d+1
  5954     0278  0824               	movf	?___awdiv,w
  5955     0279  00BA               	movwf	dtoa@d
  5956     027A                     l2862:
  5957                           
  5958                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 554:     while (!(i 
      +                          < 1) && (d != 0
  5959     027A  0020               	movlb	0	; select bank0
  5960     027B  0845               	movf	dtoa@i+1,w
  5961     027C  3A80               	xorlw	128
  5962     027D  00BC               	movwf	??_dtoa
  5963     027E  3080               	movlw	128
  5964     027F  023C               	subwf	??_dtoa,w
  5965     0280  1D03               	skipz
  5966     0281  2A84               	goto	u2805
  5967     0282  3001               	movlw	1
  5968     0283  0244               	subwf	dtoa@i,w
  5969     0284                     u2805:
  5970     0284  1C03               	skipc
  5971     0285  2A87               	goto	u2801
  5972     0286  2A88               	goto	u2800
  5973     0287                     u2801:
  5974     0287  2AA6               	goto	l2872
  5975     0288                     u2800:
  5976     0288                     l2864:
  5977     0288  0020               	movlb	0	; select bank0
  5978     0289  083A               	movf	dtoa@d,w
  5979     028A  043B               	iorwf	dtoa@d+1,w
  5980     028B  1D03               	btfss	3,2
  5981     028C  2A8E               	goto	u2811
  5982     028D  2A8F               	goto	u2810
  5983     028E                     u2811:
  5984     028E  2A45               	goto	l2852
  5985     028F                     u2810:
  5986     028F                     l2866:
  5987     028F  0840               	movf	dtoa@p,w
  5988     0290  1D03               	btfss	3,2
  5989     0291  2A93               	goto	u2821
  5990     0292  2A94               	goto	u2820
  5991     0293                     u2821:
  5992     0293  2A45               	goto	l2852
  5993     0294                     u2820:
  5994     0294                     l2868:
  5995     0294  0842               	movf	dtoa@w+1,w
  5996     0295  3A80               	xorlw	128
  5997     0296  00BC               	movwf	??_dtoa
  5998     0297  3080               	movlw	128
  5999     0298  023C               	subwf	??_dtoa,w
  6000     0299  1D03               	skipz
  6001     029A  2A9D               	goto	u2835
  6002     029B  3001               	movlw	1
  6003     029C  0241               	subwf	dtoa@w,w
  6004     029D                     u2835:
  6005     029D  1C03               	skipc
  6006     029E  2AA0               	goto	u2831
  6007     029F  2AA1               	goto	u2830
  6008     02A0                     u2831:
  6009     02A0  2AA6               	goto	l2872
  6010     02A1                     u2830:
  6011     02A1                     l2870:
  6012     02A1  0020               	movlb	0	; select bank0
  6013     02A2  18E5               	btfsc	_flags,1
  6014     02A3  2AA5               	goto	u2841
  6015     02A4  2AA6               	goto	u2840
  6016     02A5                     u2841:
  6017     02A5  2A45               	goto	l2852
  6018     02A6                     u2840:
  6019     02A6                     l2872:
  6020                           
  6021                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 576:     if (s != 0)
      +                           {
  6022     02A6  0020               	movlb	0	; select bank0
  6023     02A7  0843               	movf	dtoa@s,w
  6024     02A8  1903               	btfsc	3,2
  6025     02A9  2AAB               	goto	u2851
  6026     02AA  2AAC               	goto	u2850
  6027     02AB                     u2851:
  6028     02AB  2AB7               	goto	l2878
  6029     02AC                     u2850:
  6030     02AC                     l2874:
  6031                           
  6032                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 577:         --i;
  6033     02AC  30FF               	movlw	255
  6034     02AD  07C4               	addwf	dtoa@i,f
  6035     02AE  30FF               	movlw	255
  6036     02AF  3DC5               	addwfc	dtoa@i+1,f
  6037     02B0                     l2876:
  6038                           
  6039                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 578:         dbuf[i]
      +                           = s;
  6040     02B0  0844               	movf	dtoa@i,w
  6041     02B1  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6042     02B2  0086               	movwf	6
  6043     02B3  3001               	movlw	1	; select bank2/3
  6044     02B4  0087               	movwf	7
  6045     02B5  0843               	movf	dtoa@s,w
  6046     02B6  0081               	movwf	1
  6047     02B7                     l2878:
  6048                           
  6049                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 582:     return (voi
      +                          d) pad(fp, &dbuf[i], w);
  6050     02B7  0844               	movf	dtoa@i,w
  6051     02B8  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6052     02B9  00B3               	movwf	pad@buf
  6053     02BA  0842               	movf	dtoa@w+1,w
  6054     02BB  00B5               	movwf	pad@p+1
  6055     02BC  0841               	movf	dtoa@w,w
  6056     02BD  00B4               	movwf	pad@p
  6057     02BE  083D               	movf	dtoa@fp,w
  6058     02BF  318F  27C1  3182   	fcall	_pad
  6059     02C2                     l913:
  6060     02C2  0008               	return
  6061     02C3                     __end_of_dtoa:
  6062                           
  6063                           	psect	text24
  6064     0FC1                     __ptext24:	
  6065 ;; *************** function _pad *****************
  6066 ;; Defined at:
  6067 ;;		line 193 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  fp              1    wreg     PTR struct _IO_FILE
  6070 ;;		 -> sprintf@f(11), 
  6071 ;;  buf             1   19[BANK0 ] PTR unsigned char 
  6072 ;;		 -> dbuf(32), 
  6073 ;;  p               2   20[BANK0 ] int 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  fp              1   25[BANK0 ] PTR struct _IO_FILE
  6076 ;;		 -> sprintf@f(11), 
  6077 ;;  i               2   23[BANK0 ] int 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6087 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6088 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6089 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6090 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6091 ;;Total ram usage:        7 bytes
  6092 ;; Hardware stack levels used: 1
  6093 ;; Hardware stack levels required when called: 6
  6094 ;; This function calls:
  6095 ;;		_fputc
  6096 ;;		_fputs
  6097 ;; This function is called by:
  6098 ;;		_dtoa
  6099 ;;		_xtoa
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103     0FC1                     _pad:	
  6104                           ;psect for function _pad
  6105                           
  6106                           
  6107                           ;incstack = 0
  6108                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6109                           ;pad@fp stored from wreg
  6110     0FC1  0020               	movlb	0	; select bank0
  6111     0FC2  00B9               	movwf	pad@fp
  6112     0FC3                     l2812:
  6113                           
  6114                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 193: static void pad
      +                          (FILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/do
      +                          prnt.c: 194: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 195:  
      +                             int i;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 199:     if
      +                           (flags & (1 << 0)) {
  6115     0FC3  1C65               	btfss	_flags,0
  6116     0FC4  2FC6               	goto	u2711
  6117     0FC5  2FC7               	goto	u2710
  6118     0FC6                     u2711:
  6119     0FC6  2FCD               	goto	l2816
  6120     0FC7                     u2710:
  6121     0FC7                     l2814:
  6122                           
  6123                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 200:         fputs((
      +                          const char *)buf, fp);
  6124     0FC7  0839               	movf	pad@fp,w
  6125     0FC8  00AC               	movwf	fputs@fp
  6126     0FC9  0833               	movf	pad@buf,w
  6127     0FCA  318E  26BD  318F   	fcall	_fputs
  6128     0FCD                     l2816:
  6129                           
  6130                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  6131     0FCD  0020               	movlb	0	; select bank0
  6132     0FCE  1FB5               	btfss	pad@p+1,7
  6133     0FCF  2FD1               	goto	u2721
  6134     0FD0  2FD2               	goto	u2720
  6135     0FD1                     u2721:
  6136     0FD1  2FD4               	goto	l892
  6137     0FD2                     u2720:
  6138     0FD2                     l2818:
  6139                           
  6140                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  6141     0FD2  01B4               	clrf	pad@p
  6142     0FD3  01B5               	clrf	pad@p+1
  6143     0FD4                     l892:	
  6144                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 207:  }
  6145                           
  6146                           
  6147                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  6148     0FD4  01B7               	clrf	pad@i
  6149     0FD5  01B8               	clrf	pad@i+1
  6150                           
  6151                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6152     0FD6  2FE6               	goto	l2824
  6153     0FD7                     l2820:
  6154                           
  6155                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 210:         fputc('
      +                           ', fp);
  6156     0FD7  3020               	movlw	32
  6157     0FD8  0020               	movlb	0	; select bank0
  6158     0FD9  00A4               	movwf	fputc@c
  6159     0FDA  3000               	movlw	0
  6160     0FDB  00A5               	movwf	fputc@c+1
  6161     0FDC  0839               	movf	pad@fp,w
  6162     0FDD  00A6               	movwf	fputc@fp
  6163     0FDE  3186  26FF  318F   	fcall	_fputc
  6164     0FE1                     l2822:
  6165                           
  6166                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 211:         ++i;
  6167     0FE1  3001               	movlw	1
  6168     0FE2  0020               	movlb	0	; select bank0
  6169     0FE3  07B7               	addwf	pad@i,f
  6170     0FE4  3000               	movlw	0
  6171     0FE5  3DB8               	addwfc	pad@i+1,f
  6172     0FE6                     l2824:
  6173                           
  6174                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6175     0FE6  0838               	movf	pad@i+1,w
  6176     0FE7  3A80               	xorlw	128
  6177     0FE8  00B6               	movwf	??_pad
  6178     0FE9  0835               	movf	pad@p+1,w
  6179     0FEA  3A80               	xorlw	128
  6180     0FEB  0236               	subwf	??_pad,w
  6181     0FEC  1D03               	skipz
  6182     0FED  2FF0               	goto	u2735
  6183     0FEE  0834               	movf	pad@p,w
  6184     0FEF  0237               	subwf	pad@i,w
  6185     0FF0                     u2735:
  6186     0FF0  1C03               	skipc
  6187     0FF1  2FF3               	goto	u2731
  6188     0FF2  2FF4               	goto	u2730
  6189     0FF3                     u2731:
  6190     0FF3  2FD7               	goto	l2820
  6191     0FF4                     u2730:
  6192     0FF4                     l895:
  6193                           
  6194                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 216:     if (!(flags
      +                           & (1 << 0))) {
  6195     0FF4  0020               	movlb	0	; select bank0
  6196     0FF5  1865               	btfsc	_flags,0
  6197     0FF6  2FF8               	goto	u2741
  6198     0FF7  2FF9               	goto	u2740
  6199     0FF8                     u2741:
  6200     0FF8  2FFF               	goto	l897
  6201     0FF9                     u2740:
  6202     0FF9                     l2826:
  6203                           
  6204                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 218:         fputs((
      +                          const char *)buf, fp);
  6205     0FF9  0839               	movf	pad@fp,w
  6206     0FFA  00AC               	movwf	fputs@fp
  6207     0FFB  0833               	movf	pad@buf,w
  6208     0FFC  318E  26BD  318F   	fcall	_fputs
  6209     0FFF                     l897:
  6210     0FFF  0008               	return
  6211     1000                     __end_of_pad:
  6212                           
  6213                           	psect	text25
  6214     0EBD                     __ptext25:	
  6215 ;; *************** function _fputs *****************
  6216 ;; Defined at:
  6217 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputs.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  s               1    wreg     PTR const unsigned char 
  6220 ;;		 -> dbuf(32), 
  6221 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  6222 ;;		 -> sprintf@f(11), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  s               1   18[BANK0 ] PTR const unsigned char 
  6225 ;;		 -> dbuf(32), 
  6226 ;;  i               2   16[BANK0 ] int 
  6227 ;;  c               1   15[BANK0 ] unsigned char 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  2   12[BANK0 ] int 
  6230 ;; Registers used:
  6231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6237 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6238 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6239 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6240 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6241 ;;Total ram usage:        7 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; Hardware stack levels required when called: 5
  6244 ;; This function calls:
  6245 ;;		_fputc
  6246 ;; This function is called by:
  6247 ;;		_pad
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251     0EBD                     _fputs:	
  6252                           ;psect for function _fputs
  6253                           
  6254                           
  6255                           ;incstack = 0
  6256                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6257                           ;fputs@s stored from wreg
  6258     0EBD  0020               	movlb	0	; select bank0
  6259     0EBE  00B2               	movwf	fputs@s
  6260     0EBF                     l2708:
  6261     0EBF  01B0               	clrf	fputs@i
  6262     0EC0  01B1               	clrf	fputs@i+1
  6263     0EC1  2ED3               	goto	l2714
  6264     0EC2                     l2710:
  6265     0EC2  082F               	movf	fputs@c,w
  6266     0EC3  00AD               	movwf	??_fputs
  6267     0EC4  01AE               	clrf	??_fputs+1
  6268     0EC5  082D               	movf	??_fputs,w
  6269     0EC6  00A4               	movwf	fputc@c
  6270     0EC7  082E               	movf	??_fputs+1,w
  6271     0EC8  00A5               	movwf	fputc@c+1
  6272     0EC9  082C               	movf	fputs@fp,w
  6273     0ECA  00A6               	movwf	fputc@fp
  6274     0ECB  3186  26FF  318E   	fcall	_fputc
  6275     0ECE                     l2712:
  6276     0ECE  3001               	movlw	1
  6277     0ECF  0020               	movlb	0	; select bank0
  6278     0ED0  07B0               	addwf	fputs@i,f
  6279     0ED1  3000               	movlw	0
  6280     0ED2  3DB1               	addwfc	fputs@i+1,f
  6281     0ED3                     l2714:
  6282     0ED3  0830               	movf	fputs@i,w
  6283     0ED4  0732               	addwf	fputs@s,w
  6284     0ED5  00AD               	movwf	??_fputs
  6285     0ED6  082D               	movf	??_fputs,w
  6286     0ED7  0086               	movwf	6
  6287     0ED8  3001               	movlw	1	; select bank2/3
  6288     0ED9  0087               	movwf	7
  6289     0EDA  0801               	movf	1,w
  6290     0EDB  00AF               	movwf	fputs@c
  6291     0EDC  082F               	movf	fputs@c,w
  6292     0EDD  1D03               	btfss	3,2
  6293     0EDE  2EE0               	goto	u2471
  6294     0EDF  2EE1               	goto	u2470
  6295     0EE0                     u2471:
  6296     0EE0  2EC2               	goto	l2710
  6297     0EE1                     u2470:
  6298     0EE1                     l987:
  6299     0EE1  0008               	return
  6300     0EE2                     __end_of_fputs:
  6301                           
  6302                           	psect	text26
  6303     06FF                     __ptext26:	
  6304 ;; *************** function _fputc *****************
  6305 ;; Defined at:
  6306 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputc.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  c               2    4[BANK0 ] int 
  6309 ;;  fp              1    6[BANK0 ] PTR struct _IO_FILE
  6310 ;;		 -> sprintf@f(11), 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;		None
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  2    4[BANK0 ] int 
  6315 ;; Registers used:
  6316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6322 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6324 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6325 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6326 ;;Total ram usage:        8 bytes
  6327 ;; Hardware stack levels used: 1
  6328 ;; Hardware stack levels required when called: 4
  6329 ;; This function calls:
  6330 ;;		_putch
  6331 ;; This function is called by:
  6332 ;;		_pad
  6333 ;;		_vfpfcnvrt
  6334 ;;		_fputs
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338     06FF                     _fputc:	
  6339                           ;psect for function _fputc
  6340                           
  6341     06FF                     l2692:	
  6342                           ;incstack = 0
  6343                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6344                           
  6345     06FF  0020               	movlb	0	; select bank0
  6346     0700  0826               	movf	fputc@fp,w
  6347     0701  1903               	btfsc	3,2
  6348     0702  2F04               	goto	u2431
  6349     0703  2F05               	goto	u2430
  6350     0704                     u2431:
  6351     0704  2F0A               	goto	l2696
  6352     0705                     u2430:
  6353     0705                     l2694:
  6354     0705  0826               	movf	fputc@fp,w
  6355     0706  1D03               	btfss	3,2
  6356     0707  2F09               	goto	u2441
  6357     0708  2F0A               	goto	u2440
  6358     0709                     u2441:
  6359     0709  2F0F               	goto	l2698
  6360     070A                     u2440:
  6361     070A                     l2696:
  6362     070A  0824               	movf	fputc@c,w
  6363     070B  318D  2548  3186   	fcall	_putch
  6364     070E  2F50               	goto	l979
  6365     070F                     l2698:
  6366     070F  0826               	movf	fputc@fp,w
  6367     0710  3E09               	addlw	9
  6368     0711  0086               	movwf	6
  6369     0712  0187               	clrf	7
  6370     0713  0016               	moviw fsr1++
  6371     0714  0401               	iorwf	1,w
  6372     0715  1903               	btfsc	3,2
  6373     0716  2F18               	goto	u2451
  6374     0717  2F19               	goto	u2450
  6375     0718                     u2451:
  6376     0718  2F37               	goto	l2702
  6377     0719                     u2450:
  6378     0719                     l2700:
  6379     0719  0826               	movf	fputc@fp,w
  6380     071A  3E09               	addlw	9
  6381     071B  0086               	movwf	6
  6382     071C  0187               	clrf	7
  6383     071D  3F40               	moviw [0]fsr1
  6384     071E  00A7               	movwf	??_fputc
  6385     071F  3F41               	moviw [1]fsr1
  6386     0720  00A8               	movwf	??_fputc+1
  6387     0721  0826               	movf	fputc@fp,w
  6388     0722  3E02               	addlw	2
  6389     0723  0086               	movwf	6
  6390     0724  0187               	clrf	7
  6391     0725  3F40               	moviw [0]fsr1
  6392     0726  00A9               	movwf	??_fputc+2
  6393     0727  3F41               	moviw [1]fsr1
  6394     0728  00AA               	movwf	??_fputc+3
  6395     0729  082A               	movf	??_fputc+3,w
  6396     072A  3A80               	xorlw	128
  6397     072B  00AB               	movwf	??_fputc+4
  6398     072C  0828               	movf	??_fputc+1,w
  6399     072D  3A80               	xorlw	128
  6400     072E  022B               	subwf	??_fputc+4,w
  6401     072F  1D03               	skipz
  6402     0730  2F33               	goto	u2465
  6403     0731  0827               	movf	??_fputc,w
  6404     0732  0229               	subwf	??_fputc+2,w
  6405     0733                     u2465:
  6406     0733  1803               	skipnc
  6407     0734  2F36               	goto	u2461
  6408     0735  2F37               	goto	u2460
  6409     0736                     u2461:
  6410     0736  2F50               	goto	l979
  6411     0737                     u2460:
  6412     0737                     l2702:
  6413     0737  0020               	movlb	0	; select bank0
  6414     0738  0826               	movf	fputc@fp,w
  6415     0739  0086               	movwf	6
  6416     073A  0187               	clrf	7
  6417     073B  0826               	movf	fputc@fp,w
  6418     073C  3E02               	addlw	2
  6419     073D  0084               	movwf	4
  6420     073E  0185               	clrf	5
  6421     073F  0800               	movf	0,w
  6422     0740  0701               	addwf	1,w
  6423     0741  00A7               	movwf	??_fputc
  6424     0742  0827               	movf	??_fputc,w
  6425     0743  0086               	movwf	6
  6426     0744  0187               	clrf	7
  6427     0745  0824               	movf	fputc@c,w
  6428     0746  0081               	movwf	1
  6429     0747                     l2704:
  6430     0747  0826               	movf	fputc@fp,w
  6431     0748  3E02               	addlw	2
  6432     0749  0086               	movwf	6
  6433     074A  0187               	clrf	7
  6434     074B  3001               	movlw	1
  6435     074C  0781               	addwf	1,f
  6436     074D  3141               	addfsr 1,1
  6437     074E  1803               	skipnc
  6438     074F  0A81               	incf	1,f
  6439     0750                     l979:
  6440     0750  0008               	return
  6441     0751                     __end_of_fputc:
  6442                           
  6443                           	psect	text27
  6444     0D48                     __ptext27:	
  6445 ;; *************** function _putch *****************
  6446 ;; Defined at:
  6447 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/putch.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  c               1    wreg     unsigned char 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  c               1    0[COMMON] unsigned char 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      void 
  6454 ;; Registers used:
  6455 ;;		wreg
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6465 ;;Total ram usage:        0 bytes
  6466 ;; Hardware stack levels used: 1
  6467 ;; Hardware stack levels required when called: 3
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_fputc
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475     0D48                     _putch:	
  6476                           ;psect for function _putch
  6477                           
  6478     0D48                     l990:	
  6479                           ;incstack = 0
  6480                           ; Regs used in _putch: [wreg]
  6481                           
  6482     0D48  0008               	return
  6483     0D49                     __end_of_putch:
  6484                           
  6485                           	psect	text28
  6486     0D9C                     __ptext28:	
  6487 ;; *************** function _abs *****************
  6488 ;; Defined at:
  6489 ;;		line 1 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/abs.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  a               2   11[BANK0 ] int 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  2   11[BANK0 ] int 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6503 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6505 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6506 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6507 ;;Total ram usage:        4 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 3
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_dtoa
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517     0D9C                     _abs:	
  6518                           ;psect for function _abs
  6519                           
  6520     0D9C                     l2828:	
  6521                           ;incstack = 0
  6522                           ; Regs used in _abs: [wreg+status,2+status,0]
  6523                           
  6524     0D9C  0020               	movlb	0	; select bank0
  6525     0D9D  1BAC               	btfsc	abs@a+1,7
  6526     0D9E  2DA0               	goto	u2751
  6527     0D9F  2DA1               	goto	u2750
  6528     0DA0                     u2751:
  6529     0DA0  2DA2               	goto	l2832
  6530     0DA1                     u2750:
  6531     0DA1                     l2830:
  6532     0DA1  2DAD               	goto	l967
  6533     0DA2                     l2832:
  6534     0DA2  092B               	comf	abs@a,w
  6535     0DA3  00AD               	movwf	??_abs
  6536     0DA4  092C               	comf	abs@a+1,w
  6537     0DA5  00AE               	movwf	??_abs+1
  6538     0DA6  0AAD               	incf	??_abs,f
  6539     0DA7  1903               	skipnz
  6540     0DA8  0AAE               	incf	??_abs+1,f
  6541     0DA9  082D               	movf	??_abs,w
  6542     0DAA  00AB               	movwf	?_abs
  6543     0DAB  082E               	movf	??_abs+1,w
  6544     0DAC  00AC               	movwf	?_abs+1
  6545     0DAD                     l967:
  6546     0DAD  0008               	return
  6547     0DAE                     __end_of_abs:
  6548                           
  6549                           	psect	text29
  6550     06AB                     __ptext29:	
  6551 ;; *************** function ___awmod *****************
  6552 ;; Defined at:
  6553 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/awmod.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;  divisor         2    4[BANK0 ] int 
  6556 ;;  dividend        2    6[BANK0 ] int 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  sign            1   10[BANK0 ] unsigned char 
  6559 ;;  counter         1    9[BANK0 ] unsigned char 
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  2    4[BANK0 ] int 
  6562 ;; Registers used:
  6563 ;;		wreg, status,2, status,0
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6569 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6570 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6571 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6572 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6573 ;;Total ram usage:        7 bytes
  6574 ;; Hardware stack levels used: 1
  6575 ;; Hardware stack levels required when called: 3
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_dtoa
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583     06AB                     ___awmod:	
  6584                           ;psect for function ___awmod
  6585                           
  6586     06AB                     l2774:	
  6587                           ;incstack = 0
  6588                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6589                           
  6590     06AB  0020               	movlb	0	; select bank0
  6591     06AC  01AA               	clrf	___awmod@sign
  6592     06AD                     l2776:
  6593     06AD  1FA7               	btfss	___awmod@dividend+1,7
  6594     06AE  2EB0               	goto	u2621
  6595     06AF  2EB1               	goto	u2620
  6596     06B0                     u2621:
  6597     06B0  2EB8               	goto	l2782
  6598     06B1                     u2620:
  6599     06B1                     l2778:
  6600     06B1  09A6               	comf	___awmod@dividend,f
  6601     06B2  09A7               	comf	___awmod@dividend+1,f
  6602     06B3  0AA6               	incf	___awmod@dividend,f
  6603     06B4  1903               	skipnz
  6604     06B5  0AA7               	incf	___awmod@dividend+1,f
  6605     06B6                     l2780:
  6606     06B6  01AA               	clrf	___awmod@sign
  6607     06B7  0AAA               	incf	___awmod@sign,f
  6608     06B8                     l2782:
  6609     06B8  1FA5               	btfss	___awmod@divisor+1,7
  6610     06B9  2EBB               	goto	u2631
  6611     06BA  2EBC               	goto	u2630
  6612     06BB                     u2631:
  6613     06BB  2EC1               	goto	l2786
  6614     06BC                     u2630:
  6615     06BC                     l2784:
  6616     06BC  09A4               	comf	___awmod@divisor,f
  6617     06BD  09A5               	comf	___awmod@divisor+1,f
  6618     06BE  0AA4               	incf	___awmod@divisor,f
  6619     06BF  1903               	skipnz
  6620     06C0  0AA5               	incf	___awmod@divisor+1,f
  6621     06C1                     l2786:
  6622     06C1  0824               	movf	___awmod@divisor,w
  6623     06C2  0425               	iorwf	___awmod@divisor+1,w
  6624     06C3  1903               	btfsc	3,2
  6625     06C4  2EC6               	goto	u2641
  6626     06C5  2EC7               	goto	u2640
  6627     06C6                     u2641:
  6628     06C6  2EF0               	goto	l2804
  6629     06C7                     u2640:
  6630     06C7                     l2788:
  6631     06C7  01A9               	clrf	___awmod@counter
  6632     06C8  0AA9               	incf	___awmod@counter,f
  6633     06C9  2ED3               	goto	l2794
  6634     06CA                     l2790:
  6635     06CA  3001               	movlw	1
  6636     06CB                     u2655:
  6637     06CB  35A4               	lslf	___awmod@divisor,f
  6638     06CC  0DA5               	rlf	___awmod@divisor+1,f
  6639     06CD  0B89               	decfsz	9,f
  6640     06CE  2ECB               	goto	u2655
  6641     06CF                     l2792:
  6642     06CF  3001               	movlw	1
  6643     06D0  00A8               	movwf	??___awmod
  6644     06D1  0828               	movf	??___awmod,w
  6645     06D2  07A9               	addwf	___awmod@counter,f
  6646     06D3                     l2794:
  6647     06D3  1FA5               	btfss	___awmod@divisor+1,7
  6648     06D4  2ED6               	goto	u2661
  6649     06D5  2ED7               	goto	u2660
  6650     06D6                     u2661:
  6651     06D6  2ECA               	goto	l2790
  6652     06D7                     u2660:
  6653     06D7                     l2796:
  6654     06D7  0825               	movf	___awmod@divisor+1,w
  6655     06D8  0227               	subwf	___awmod@dividend+1,w
  6656     06D9  1D03               	skipz
  6657     06DA  2EDD               	goto	u2675
  6658     06DB  0824               	movf	___awmod@divisor,w
  6659     06DC  0226               	subwf	___awmod@dividend,w
  6660     06DD                     u2675:
  6661     06DD  1C03               	skipc
  6662     06DE  2EE0               	goto	u2671
  6663     06DF  2EE1               	goto	u2670
  6664     06E0                     u2671:
  6665     06E0  2EE5               	goto	l2800
  6666     06E1                     u2670:
  6667     06E1                     l2798:
  6668     06E1  0824               	movf	___awmod@divisor,w
  6669     06E2  02A6               	subwf	___awmod@dividend,f
  6670     06E3  0825               	movf	___awmod@divisor+1,w
  6671     06E4  3BA7               	subwfb	___awmod@dividend+1,f
  6672     06E5                     l2800:
  6673     06E5  3001               	movlw	1
  6674     06E6                     u2685:
  6675     06E6  36A5               	lsrf	___awmod@divisor+1,f
  6676     06E7  0CA4               	rrf	___awmod@divisor,f
  6677     06E8  0B89               	decfsz	9,f
  6678     06E9  2EE6               	goto	u2685
  6679     06EA                     l2802:
  6680     06EA  3001               	movlw	1
  6681     06EB  02A9               	subwf	___awmod@counter,f
  6682     06EC  1D03               	btfss	3,2
  6683     06ED  2EEF               	goto	u2691
  6684     06EE  2EF0               	goto	u2690
  6685     06EF                     u2691:
  6686     06EF  2ED7               	goto	l2796
  6687     06F0                     u2690:
  6688     06F0                     l2804:
  6689     06F0  082A               	movf	___awmod@sign,w
  6690     06F1  1903               	btfsc	3,2
  6691     06F2  2EF4               	goto	u2701
  6692     06F3  2EF5               	goto	u2700
  6693     06F4                     u2701:
  6694     06F4  2EFA               	goto	l2808
  6695     06F5                     u2700:
  6696     06F5                     l2806:
  6697     06F5  09A6               	comf	___awmod@dividend,f
  6698     06F6  09A7               	comf	___awmod@dividend+1,f
  6699     06F7  0AA6               	incf	___awmod@dividend,f
  6700     06F8  1903               	skipnz
  6701     06F9  0AA7               	incf	___awmod@dividend+1,f
  6702     06FA                     l2808:
  6703     06FA  0827               	movf	___awmod@dividend+1,w
  6704     06FB  00A5               	movwf	?___awmod+1
  6705     06FC  0826               	movf	___awmod@dividend,w
  6706     06FD  00A4               	movwf	?___awmod
  6707     06FE                     l569:
  6708     06FE  0008               	return
  6709     06FF                     __end_of___awmod:
  6710                           
  6711                           	psect	text30
  6712     05F0                     __ptext30:	
  6713 ;; *************** function ___awdiv *****************
  6714 ;; Defined at:
  6715 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/awdiv.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  divisor         2    4[BANK0 ] int 
  6718 ;;  dividend        2    6[BANK0 ] int 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  quotient        2   11[BANK0 ] int 
  6721 ;;  sign            1   10[BANK0 ] unsigned char 
  6722 ;;  counter         1    9[BANK0 ] unsigned char 
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  2    4[BANK0 ] int 
  6725 ;; Registers used:
  6726 ;;		wreg, status,2, status,0
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6732 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6733 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6734 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6735 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6736 ;;Total ram usage:        9 bytes
  6737 ;; Hardware stack levels used: 1
  6738 ;; Hardware stack levels required when called: 3
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_dtoa
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746     05F0                     ___awdiv:	
  6747                           ;psect for function ___awdiv
  6748                           
  6749     05F0                     l2730:	
  6750                           ;incstack = 0
  6751                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6752                           
  6753     05F0  0020               	movlb	0	; select bank0
  6754     05F1  01AA               	clrf	___awdiv@sign
  6755     05F2                     l2732:
  6756     05F2  1FA5               	btfss	___awdiv@divisor+1,7
  6757     05F3  2DF5               	goto	u2521
  6758     05F4  2DF6               	goto	u2520
  6759     05F5                     u2521:
  6760     05F5  2DFD               	goto	l2738
  6761     05F6                     u2520:
  6762     05F6                     l2734:
  6763     05F6  09A4               	comf	___awdiv@divisor,f
  6764     05F7  09A5               	comf	___awdiv@divisor+1,f
  6765     05F8  0AA4               	incf	___awdiv@divisor,f
  6766     05F9  1903               	skipnz
  6767     05FA  0AA5               	incf	___awdiv@divisor+1,f
  6768     05FB                     l2736:
  6769     05FB  01AA               	clrf	___awdiv@sign
  6770     05FC  0AAA               	incf	___awdiv@sign,f
  6771     05FD                     l2738:
  6772     05FD  1FA7               	btfss	___awdiv@dividend+1,7
  6773     05FE  2E00               	goto	u2531
  6774     05FF  2E01               	goto	u2530
  6775     0600                     u2531:
  6776     0600  2E0A               	goto	l2744
  6777     0601                     u2530:
  6778     0601                     l2740:
  6779     0601  09A6               	comf	___awdiv@dividend,f
  6780     0602  09A7               	comf	___awdiv@dividend+1,f
  6781     0603  0AA6               	incf	___awdiv@dividend,f
  6782     0604  1903               	skipnz
  6783     0605  0AA7               	incf	___awdiv@dividend+1,f
  6784     0606                     l2742:
  6785     0606  3001               	movlw	1
  6786     0607  00A8               	movwf	??___awdiv
  6787     0608  0828               	movf	??___awdiv,w
  6788     0609  06AA               	xorwf	___awdiv@sign,f
  6789     060A                     l2744:
  6790     060A  01AB               	clrf	___awdiv@quotient
  6791     060B  01AC               	clrf	___awdiv@quotient+1
  6792     060C                     l2746:
  6793     060C  0824               	movf	___awdiv@divisor,w
  6794     060D  0425               	iorwf	___awdiv@divisor+1,w
  6795     060E  1903               	btfsc	3,2
  6796     060F  2E11               	goto	u2541
  6797     0610  2E12               	goto	u2540
  6798     0611                     u2541:
  6799     0611  2E41               	goto	l2766
  6800     0612                     u2540:
  6801     0612                     l2748:
  6802     0612  01A9               	clrf	___awdiv@counter
  6803     0613  0AA9               	incf	___awdiv@counter,f
  6804     0614  2E1E               	goto	l2754
  6805     0615                     l2750:
  6806     0615  3001               	movlw	1
  6807     0616                     u2555:
  6808     0616  35A4               	lslf	___awdiv@divisor,f
  6809     0617  0DA5               	rlf	___awdiv@divisor+1,f
  6810     0618  0B89               	decfsz	9,f
  6811     0619  2E16               	goto	u2555
  6812     061A                     l2752:
  6813     061A  3001               	movlw	1
  6814     061B  00A8               	movwf	??___awdiv
  6815     061C  0828               	movf	??___awdiv,w
  6816     061D  07A9               	addwf	___awdiv@counter,f
  6817     061E                     l2754:
  6818     061E  1FA5               	btfss	___awdiv@divisor+1,7
  6819     061F  2E21               	goto	u2561
  6820     0620  2E22               	goto	u2560
  6821     0621                     u2561:
  6822     0621  2E15               	goto	l2750
  6823     0622                     u2560:
  6824     0622                     l2756:
  6825     0622  3001               	movlw	1
  6826     0623                     u2575:
  6827     0623  35AB               	lslf	___awdiv@quotient,f
  6828     0624  0DAC               	rlf	___awdiv@quotient+1,f
  6829     0625  0B89               	decfsz	9,f
  6830     0626  2E23               	goto	u2575
  6831     0627  0825               	movf	___awdiv@divisor+1,w
  6832     0628  0227               	subwf	___awdiv@dividend+1,w
  6833     0629  1D03               	skipz
  6834     062A  2E2D               	goto	u2585
  6835     062B  0824               	movf	___awdiv@divisor,w
  6836     062C  0226               	subwf	___awdiv@dividend,w
  6837     062D                     u2585:
  6838     062D  1C03               	skipc
  6839     062E  2E30               	goto	u2581
  6840     062F  2E31               	goto	u2580
  6841     0630                     u2581:
  6842     0630  2E36               	goto	l2762
  6843     0631                     u2580:
  6844     0631                     l2758:
  6845     0631  0824               	movf	___awdiv@divisor,w
  6846     0632  02A6               	subwf	___awdiv@dividend,f
  6847     0633  0825               	movf	___awdiv@divisor+1,w
  6848     0634  3BA7               	subwfb	___awdiv@dividend+1,f
  6849     0635                     l2760:
  6850     0635  142B               	bsf	___awdiv@quotient,0
  6851     0636                     l2762:
  6852     0636  3001               	movlw	1
  6853     0637                     u2595:
  6854     0637  36A5               	lsrf	___awdiv@divisor+1,f
  6855     0638  0CA4               	rrf	___awdiv@divisor,f
  6856     0639  0B89               	decfsz	9,f
  6857     063A  2E37               	goto	u2595
  6858     063B                     l2764:
  6859     063B  3001               	movlw	1
  6860     063C  02A9               	subwf	___awdiv@counter,f
  6861     063D  1D03               	btfss	3,2
  6862     063E  2E40               	goto	u2601
  6863     063F  2E41               	goto	u2600
  6864     0640                     u2601:
  6865     0640  2E22               	goto	l2756
  6866     0641                     u2600:
  6867     0641                     l2766:
  6868     0641  082A               	movf	___awdiv@sign,w
  6869     0642  1903               	btfsc	3,2
  6870     0643  2E45               	goto	u2611
  6871     0644  2E46               	goto	u2610
  6872     0645                     u2611:
  6873     0645  2E4B               	goto	l2770
  6874     0646                     u2610:
  6875     0646                     l2768:
  6876     0646  09AB               	comf	___awdiv@quotient,f
  6877     0647  09AC               	comf	___awdiv@quotient+1,f
  6878     0648  0AAB               	incf	___awdiv@quotient,f
  6879     0649  1903               	skipnz
  6880     064A  0AAC               	incf	___awdiv@quotient+1,f
  6881     064B                     l2770:
  6882     064B  082C               	movf	___awdiv@quotient+1,w
  6883     064C  00A5               	movwf	?___awdiv+1
  6884     064D  082B               	movf	___awdiv@quotient,w
  6885     064E  00A4               	movwf	?___awdiv
  6886     064F                     l556:
  6887     064F  0008               	return
  6888     0650                     __end_of___awdiv:
  6889                           
  6890                           	psect	text31
  6891     0D69                     __ptext31:	
  6892 ;; *************** function _setup_address *****************
  6893 ;; Defined at:
  6894 ;;		line 281 in file "main.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  addr            2    4[BANK0 ] unsigned short 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  hi              1    6[BANK0 ] unsigned char 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1    wreg      void 
  6901 ;; Registers used:
  6902 ;;		wreg, status,2
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6911 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6912 ;;Total ram usage:        3 bytes
  6913 ;; Hardware stack levels used: 1
  6914 ;; Hardware stack levels required when called: 3
  6915 ;; This function calls:
  6916 ;;		Nothing
  6917 ;; This function is called by:
  6918 ;;		_do_blank
  6919 ;;		_do_read
  6920 ;;		_do_write
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924     0D69                     _setup_address:	
  6925                           ;psect for function _setup_address
  6926                           
  6927     0D69                     l2234:	
  6928                           ;incstack = 0
  6929                           ; Regs used in _setup_address: [wreg+status,2]
  6930                           
  6931                           
  6932                           ;main.c: 281: void setup_address(uint16_t addr);main.c: 282: {;main.c: 284:     uint8_t 
      +                          hi = addr >> 8;
  6933     0D69  0020               	movlb	0	; select bank0
  6934     0D6A  0825               	movf	setup_address@addr+1,w
  6935     0D6B  00A6               	movwf	setup_address@hi
  6936     0D6C                     l2236:
  6937                           
  6938                           ;main.c: 285:     LATB = addr & 0x00ff;
  6939     0D6C  0824               	movf	setup_address@addr,w
  6940     0D6D  0022               	movlb	2	; select bank2
  6941     0D6E  008D               	movwf	13	;volatile
  6942     0D6F                     l2238:
  6943                           
  6944                           ;main.c: 286:     LATA = hi & 0x07;
  6945     0D6F  0020               	movlb	0	; select bank0
  6946     0D70  0826               	movf	setup_address@hi,w
  6947     0D71  3907               	andlw	7
  6948     0D72  0022               	movlb	2	; select bank2
  6949     0D73  008C               	movwf	12	;volatile
  6950                           
  6951                           ;main.c: 289:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  6952     0D74  3010               	movlw	16
  6953     0D75                     u3307:
  6954     0D75  0B89               	decfsz	9,f
  6955     0D76  2D75               	goto	u3307
  6956     0D77  3200               	nop2
  6957     0D78                     l125:
  6958     0D78  0008               	return
  6959     0D79                     __end_of_setup_address:
  6960                           
  6961                           	psect	text32
  6962     0D79                     __ptext32:	
  6963 ;; *************** function _read_port *****************
  6964 ;; Defined at:
  6965 ;;		line 295 in file "main.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;		None
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  data            1    4[BANK0 ] unsigned char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1    wreg      unsigned char 
  6972 ;; Registers used:
  6973 ;;		wreg
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6982 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6983 ;;Total ram usage:        1 bytes
  6984 ;; Hardware stack levels used: 1
  6985 ;; Hardware stack levels required when called: 3
  6986 ;; This function calls:
  6987 ;;		Nothing
  6988 ;; This function is called by:
  6989 ;;		_do_blank
  6990 ;;		_do_read
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994     0D79                     _read_port:	
  6995                           ;psect for function _read_port
  6996                           
  6997     0D79                     l2240:	
  6998                           ;incstack = 0
  6999                           ; Regs used in _read_port: [wreg]
  7000                           
  7001                           
  7002                           ;main.c: 298:     TRISD = 0xFF;
  7003     0D79  30FF               	movlw	255
  7004     0D7A  0021               	movlb	1	; select bank1
  7005     0D7B  008F               	movwf	15	;volatile
  7006     0D7C                     l2242:
  7007                           
  7008                           ;main.c: 301:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  7009     0D7C  3200               	nop2	;2 cycle nop
  7010     0D7D  3200               	nop2	;2 cycle nop
  7011     0D7E  0000               	nop
  7012     0D7F                     l2244:
  7013                           
  7014                           ;main.c: 303:     LATCbits.LATC0 = 0;
  7015     0D7F  0022               	movlb	2	; select bank2
  7016     0D80  100E               	bcf	14,0	;volatile
  7017     0D81                     l2246:
  7018                           
  7019                           ;main.c: 304:     LATCbits.LATC2 = 0;
  7020     0D81  110E               	bcf	14,2	;volatile
  7021     0D82                     l2248:
  7022                           
  7023                           ;main.c: 306:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  7024     0D82  3200               	nop2	;2 cycle nop
  7025     0D83  3200               	nop2	;2 cycle nop
  7026     0D84  0000               	nop
  7027                           
  7028                           ;main.c: 309:     uint8_t data = PORTD;
  7029     0D85  0020               	movlb	0	; select bank0
  7030     0D86  080F               	movf	15,w	;volatile
  7031     0D87  00A4               	movwf	read_port@data
  7032                           
  7033                           ;main.c: 311:     return data;
  7034     0D88  0824               	movf	read_port@data,w
  7035     0D89                     l128:
  7036     0D89  0008               	return
  7037     0D8A                     __end_of_read_port:
  7038                           
  7039                           	psect	text33
  7040     0DEF                     __ptext33:	
  7041 ;; *************** function _clear *****************
  7042 ;; Defined at:
  7043 ;;		line 62 in file "main.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;		None
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;		None
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1    wreg      void 
  7050 ;; Registers used:
  7051 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7061 ;;Total ram usage:        0 bytes
  7062 ;; Hardware stack levels used: 1
  7063 ;; Hardware stack levels required when called: 4
  7064 ;; This function calls:
  7065 ;;		_memset
  7066 ;; This function is called by:
  7067 ;;		_main
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071     0DEF                     _clear:	
  7072                           ;psect for function _clear
  7073                           
  7074     0DEF                     l2362:	
  7075                           ;incstack = 0
  7076                           ; Regs used in _clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7077                           
  7078                           
  7079                           ;main.c: 64:     memset(queue, 0x00, 1024);
  7080     0DEF  30F0               	movlw	240
  7081     0DF0  0020               	movlb	0	; select bank0
  7082     0DF1  00A4               	movwf	memset@dest
  7083     0DF2  3023               	movlw	35
  7084     0DF3  00A5               	movwf	memset@dest+1
  7085     0DF4  3000               	movlw	0
  7086     0DF5  00A6               	movwf	memset@c
  7087     0DF6  00A7               	movwf	memset@c+1
  7088     0DF7  3000               	movlw	0
  7089     0DF8  00A8               	movwf	memset@n
  7090     0DF9  3004               	movlw	4
  7091     0DFA  00A9               	movwf	memset@n+1
  7092     0DFB  318E  2624  318D   	fcall	_memset
  7093     0DFE                     l2364:
  7094                           
  7095                           ;main.c: 65:     head = 0;
  7096     0DFE  01FC               	clrf	_head
  7097     0DFF  01FD               	clrf	_head+1
  7098     0E00                     l2366:
  7099                           
  7100                           ;main.c: 66:     tail = 1024 -1;
  7101     0E00  30FF               	movlw	255
  7102     0E01  0020               	movlb	0	; select bank0
  7103     0E02  00E6               	movwf	_tail
  7104     0E03  3003               	movlw	3
  7105     0E04  00E7               	movwf	_tail+1
  7106     0E05                     l2368:
  7107                           
  7108                           ;main.c: 67:     cmd_active = 0;
  7109     0E05  0021               	movlb	1	; select bank1
  7110     0E06  01D8               	clrf	_cmd_active^(0+128)
  7111     0E07                     l76:
  7112     0E07  0008               	return
  7113     0E08                     __end_of_clear:
  7114                           
  7115                           	psect	text34
  7116     0E24                     __ptext34:	
  7117 ;; *************** function _memset *****************
  7118 ;; Defined at:
  7119 ;;		line 3 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/memset.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  dest            2    4[BANK0 ] PTR void 
  7122 ;;		 -> queue(1024), 
  7123 ;;  c               2    6[BANK0 ] int 
  7124 ;;  n               2    8[BANK0 ] unsigned int 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;  p               2   10[BANK0 ] PTR unsigned char 
  7127 ;;		 -> queue(1024), 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  2    4[BANK0 ] PTR void 
  7130 ;; Registers used:
  7131 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7137 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7138 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7140 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7141 ;;Total ram usage:        8 bytes
  7142 ;; Hardware stack levels used: 1
  7143 ;; Hardware stack levels required when called: 3
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_clear
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151     0E24                     _memset:	
  7152                           ;psect for function _memset
  7153                           
  7154     0E24                     l2184:	
  7155                           ;incstack = 0
  7156                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7157                           
  7158     0E24  0020               	movlb	0	; select bank0
  7159     0E25  0825               	movf	memset@dest+1,w
  7160     0E26  00AB               	movwf	memset@p+1
  7161     0E27  0824               	movf	memset@dest,w
  7162     0E28  00AA               	movwf	memset@p
  7163     0E29  2E34               	goto	l2190
  7164     0E2A                     l2186:
  7165     0E2A  082A               	movf	memset@p,w
  7166     0E2B  0086               	movwf	6
  7167     0E2C  082B               	movf	memset@p+1,w
  7168     0E2D  0087               	movwf	7
  7169     0E2E  0826               	movf	memset@c,w
  7170     0E2F  0081               	movwf	1
  7171     0E30                     l2188:
  7172     0E30  3001               	movlw	1
  7173     0E31  07AA               	addwf	memset@p,f
  7174     0E32  3000               	movlw	0
  7175     0E33  3DAB               	addwfc	memset@p+1,f
  7176     0E34                     l2190:
  7177     0E34  3001               	movlw	1
  7178     0E35  02A8               	subwf	memset@n,f
  7179     0E36  3000               	movlw	0
  7180     0E37  3BA9               	subwfb	memset@n+1,f
  7181     0E38  0A28               	incf	memset@n,w
  7182     0E39  1D03               	skipz
  7183     0E3A  2E3F               	goto	u1821
  7184     0E3B  0A29               	incf	memset@n+1,w
  7185     0E3C  1D03               	btfss	3,2
  7186     0E3D  2E3F               	goto	u1821
  7187     0E3E  2E40               	goto	u1820
  7188     0E3F                     u1821:
  7189     0E3F  2E2A               	goto	l2186
  7190     0E40                     u1820:
  7191     0E40                     l865:
  7192     0E40  0008               	return
  7193     0E41                     __end_of_memset:
  7194                           
  7195                           	psect	intentry
  7196     0004                     __pintentry:	
  7197 ;; *************** function _isr *****************
  7198 ;; Defined at:
  7199 ;;		line 251 in file "main.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;		None
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  n               2    0[BANK0 ] short 
  7204 ;;  c               1    3[BANK0 ] unsigned char 
  7205 ;;  ok              1    2[BANK0 ] _Bool 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      void 
  7208 ;; Registers used:
  7209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7216 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7218 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7219 ;;Total ram usage:        5 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; Hardware stack levels required when called: 2
  7222 ;; This function calls:
  7223 ;;		_first
  7224 ;;		_push
  7225 ;;		_size
  7226 ;;		_uart_getc
  7227 ;; This function is called by:
  7228 ;;		Interrupt level 1
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232     0004                     _isr:
  7233                           
  7234                           ;incstack = 0
  7235     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7236                           
  7237                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7238     0005  3180               	pagesel	$
  7239     0006                     i1l2634:
  7240                           
  7241                           ;main.c: 253:         char c = 0;
  7242     0006  0020               	movlb	0	; select bank0
  7243     0007  01A3               	clrf	isr@c
  7244     0008                     i1l2636:
  7245                           
  7246                           ;main.c: 256:         INTCONbits.GIE = 0;
  7247     0008  138B               	bcf	11,7	;volatile
  7248     0009                     i1l2638:
  7249                           
  7250                           ;main.c: 257:         PIE1bits.RCIE=0;
  7251     0009  0021               	movlb	1	; select bank1
  7252     000A  1291               	bcf	17,5	;volatile
  7253     000B                     i1l2640:
  7254                           
  7255                           ;main.c: 260:         _Bool ok = uart_getc(&c);
  7256     000B  3023               	movlw	(low (isr@c| 0))& (0+255)
  7257     000C  318E  267D  3180   	fcall	_uart_getc
  7258     000F  0020               	movlb	0	; select bank0
  7259     0010  00A2               	movwf	isr@ok
  7260     0011                     i1l2642:
  7261                           
  7262                           ;main.c: 261:         if (ok) {
  7263     0011  0822               	movf	isr@ok,w
  7264     0012  1903               	btfsc	3,2
  7265     0013  2815               	goto	u234_21
  7266     0014  2816               	goto	u234_20
  7267     0015                     u234_21:
  7268     0015  283B               	goto	i1l120
  7269     0016                     u234_20:
  7270     0016                     i1l2644:
  7271                           
  7272                           ;main.c: 263:             push(c);
  7273     0016  0823               	movf	isr@c,w
  7274     0017  3183  23CF  3180   	fcall	_push
  7275     001A                     i1l2646:
  7276                           
  7277                           ;main.c: 266:             int16_t n = size();
  7278     001A  318F  278C  3180   	fcall	_size
  7279     001D  0873               	movf	?_size+1,w
  7280     001E  0020               	movlb	0	; select bank0
  7281     001F  00A1               	movwf	isr@n+1
  7282     0020  0872               	movf	?_size,w
  7283     0021  00A0               	movwf	isr@n
  7284     0022                     i1l2648:
  7285                           
  7286                           ;main.c: 267:             if ( (first() == '$') && n > 1) {
  7287     0022  318D  2551  3180   	fcall	_first
  7288     0025  3A24               	xorlw	36
  7289     0026  1D03               	skipz
  7290     0027  2829               	goto	u235_21
  7291     0028  282A               	goto	u235_20
  7292     0029                     u235_21:
  7293     0029  283B               	goto	i1l120
  7294     002A                     u235_20:
  7295     002A                     i1l2650:
  7296     002A  0020               	movlb	0	; select bank0
  7297     002B  0821               	movf	isr@n+1,w
  7298     002C  3A80               	xorlw	128
  7299     002D  00FB               	movwf	??_isr
  7300     002E  3080               	movlw	128
  7301     002F  027B               	subwf	??_isr,w
  7302     0030  1D03               	skipz
  7303     0031  2834               	goto	u236_25
  7304     0032  3002               	movlw	2
  7305     0033  0220               	subwf	isr@n,w
  7306     0034                     u236_25:
  7307     0034  1C03               	skipc
  7308     0035  2837               	goto	u236_21
  7309     0036  2838               	goto	u236_20
  7310     0037                     u236_21:
  7311     0037  283B               	goto	i1l120
  7312     0038                     u236_20:
  7313     0038                     i1l2652:
  7314                           
  7315                           ;main.c: 269:                 cmd_active = 1;
  7316     0038  0021               	movlb	1	; select bank1
  7317     0039  01D8               	clrf	_cmd_active^(0+128)
  7318     003A  0AD8               	incf	_cmd_active^(0+128),f
  7319     003B                     i1l120:	
  7320                           ;main.c: 271:         }
  7321                           
  7322                           
  7323                           ;main.c: 274:         PIE1bits.RCIE=1;
  7324     003B  0021               	movlb	1	; select bank1
  7325     003C  1691               	bsf	17,5	;volatile
  7326                           
  7327                           ;main.c: 275:         INTCONbits.GIE = 1;
  7328     003D  178B               	bsf	11,7	;volatile
  7329     003E                     i1l122:
  7330     003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7331     003F  0009               	retfie
  7332     0040                     __end_of_isr:
  7333                           
  7334                           	psect	text36
  7335     0E7D                     __ptext36:	
  7336 ;; *************** function _uart_getc *****************
  7337 ;; Defined at:
  7338 ;;		line 129 in file "uart.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  c               1    wreg     PTR unsigned char 
  7341 ;;		 -> isr@c(1), 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  c               1    0[COMMON] PTR unsigned char 
  7344 ;;		 -> isr@c(1), 
  7345 ;;  er              1    0        unsigned char 
  7346 ;;  ok              1    1[COMMON] _Bool 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      _Bool 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr1l, fsr1h, status,2
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7360 ;;Total ram usage:        2 bytes
  7361 ;; Hardware stack levels used: 1
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_isr
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369     0E7D                     _uart_getc:	
  7370                           ;psect for function _uart_getc
  7371                           
  7372                           
  7373                           ;incstack = 0
  7374                           ; Regs used in _uart_getc: [wreg+fsr1l+fsr1h+status,2]
  7375                           ;uart_getc@c stored from wreg
  7376     0E7D  00F0               	movwf	uart_getc@c
  7377     0E7E                     i1l2458:
  7378                           
  7379                           ;uart.c: 129: _Bool uart_getc(char *c);uart.c: 130: {;uart.c: 132:     _Bool ok = 0;
  7380     0E7E  01F1               	clrf	uart_getc@ok
  7381     0E7F                     i1l2460:
  7382                           
  7383                           ;uart.c: 135:     if (RCSTAbits.FERR) {
  7384     0E7F  0023               	movlb	3	; select bank3
  7385     0E80  1D1D               	btfss	29,2	;volatile
  7386     0E81  2E83               	goto	u209_21
  7387     0E82  2E84               	goto	u209_20
  7388     0E83                     u209_21:
  7389     0E83  2E86               	goto	i1l227
  7390     0E84                     u209_20:
  7391     0E84                     i1l2462:
  7392     0E84  0819               	movf	25,w	;volatile
  7393                           
  7394                           ;uart.c: 137:     }
  7395     0E85  2E9B               	goto	i1l2470
  7396     0E86                     i1l227:	
  7397                           ;uart.c: 138:     else if (RCSTAbits.OERR) {
  7398                           
  7399     0E86  1C9D               	btfss	29,1	;volatile
  7400     0E87  2E89               	goto	u210_21
  7401     0E88  2E8A               	goto	u210_20
  7402     0E89                     u210_21:
  7403     0E89  2E8D               	goto	i1l229
  7404     0E8A                     u210_20:
  7405     0E8A                     i1l2464:
  7406                           
  7407                           ;uart.c: 139:         RCSTAbits.CREN = 0;
  7408     0E8A  121D               	bcf	29,4	;volatile
  7409                           
  7410                           ;uart.c: 140:         RCSTAbits.CREN = 1;
  7411     0E8B  161D               	bsf	29,4	;volatile
  7412                           
  7413                           ;uart.c: 141:     }
  7414     0E8C  2E9B               	goto	i1l2470
  7415     0E8D                     i1l229:	
  7416                           ;uart.c: 142:     else {
  7417                           
  7418                           
  7419                           ;uart.c: 143:         if (PIR1bits.RCIF) {
  7420     0E8D  0020               	movlb	0	; select bank0
  7421     0E8E  1E91               	btfss	17,5	;volatile
  7422     0E8F  2E91               	goto	u211_21
  7423     0E90  2E92               	goto	u211_20
  7424     0E91                     u211_21:
  7425     0E91  2E9B               	goto	i1l2470
  7426     0E92                     u211_20:
  7427     0E92                     i1l2466:
  7428                           
  7429                           ;uart.c: 144:             *c = RCREG & 0x7f;
  7430     0E92  0870               	movf	uart_getc@c,w
  7431     0E93  0086               	movwf	6
  7432     0E94  0187               	clrf	7
  7433     0E95  0023               	movlb	3	; select bank3
  7434     0E96  0819               	movf	25,w	;volatile
  7435     0E97  397F               	andlw	127
  7436     0E98  0081               	movwf	1
  7437     0E99                     i1l2468:
  7438                           
  7439                           ;uart.c: 145:             ok = 1;
  7440     0E99  01F1               	clrf	uart_getc@ok
  7441     0E9A  0AF1               	incf	uart_getc@ok,f
  7442     0E9B                     i1l2470:
  7443                           
  7444                           ;uart.c: 148:     return ok;
  7445     0E9B  0871               	movf	uart_getc@ok,w
  7446     0E9C                     i1l232:
  7447     0E9C  0008               	return
  7448     0E9D                     __end_of_uart_getc:
  7449                           
  7450                           	psect	text37
  7451     0F8C                     __ptext37:	
  7452 ;; *************** function _size *****************
  7453 ;; Defined at:
  7454 ;;		line 83 in file "main.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;		None
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  s               2    5[COMMON] short 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  2    2[COMMON] short 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0, pclath, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7471 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7472 ;;Total ram usage:        5 bytes
  7473 ;; Hardware stack levels used: 1
  7474 ;; Hardware stack levels required when called: 1
  7475 ;; This function calls:
  7476 ;;		_setCTS
  7477 ;;		i1_addone
  7478 ;; This function is called by:
  7479 ;;		_isr
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483     0F8C                     _size:	
  7484                           ;psect for function _size
  7485                           
  7486     0F8C                     i1l2370:	
  7487                           ;incstack = 0
  7488                           ; Regs used in _size: [wreg+status,2+status,0+pclath+cstack]
  7489                           
  7490                           
  7491                           ;main.c: 85:     int16_t s = addone(tail) - head;
  7492     0F8C  0020               	movlb	0	; select bank0
  7493     0F8D  0867               	movf	_tail+1,w
  7494     0F8E  00F1               	movwf	i1addone@i+1
  7495     0F8F  0866               	movf	_tail,w
  7496     0F90  00F0               	movwf	i1addone@i
  7497     0F91  318D  258A  318F   	fcall	i1_addone
  7498     0F94  087C               	movf	_head,w
  7499     0F95  0270               	subwf	?i1_addone,w
  7500     0F96  00F5               	movwf	size@s
  7501     0F97  087D               	movf	_head+1,w
  7502     0F98  3B71               	subwfb	?i1_addone+1,w
  7503     0F99  00F6               	movwf	size@s+1
  7504     0F9A                     i1l2372:
  7505                           
  7506                           ;main.c: 86:     if (s > 1024 -32) {
  7507     0F9A  0876               	movf	size@s+1,w
  7508     0F9B  3A80               	xorlw	128
  7509     0F9C  00F4               	movwf	??_size
  7510     0F9D  3083               	movlw	131
  7511     0F9E  0274               	subwf	??_size,w
  7512     0F9F  1D03               	skipz
  7513     0FA0  2FA3               	goto	u205_25
  7514     0FA1  30E1               	movlw	225
  7515     0FA2  0275               	subwf	size@s,w
  7516     0FA3                     u205_25:
  7517     0FA3  1C03               	skipc
  7518     0FA4  2FA6               	goto	u205_21
  7519     0FA5  2FA7               	goto	u205_20
  7520     0FA6                     u205_21:
  7521     0FA6  2FAB               	goto	i1l2376
  7522     0FA7                     u205_20:
  7523     0FA7                     i1l2374:
  7524                           
  7525                           ;main.c: 87:         setCTS(1);
  7526     0FA7  3001               	movlw	1
  7527     0FA8  318D  2549  318F   	fcall	_setCTS
  7528     0FAB                     i1l2376:
  7529                           
  7530                           ;main.c: 89:     if (s < 32) {
  7531     0FAB  0876               	movf	size@s+1,w
  7532     0FAC  3A80               	xorlw	128
  7533     0FAD  00F4               	movwf	??_size
  7534     0FAE  3080               	movlw	128
  7535     0FAF  0274               	subwf	??_size,w
  7536     0FB0  1D03               	skipz
  7537     0FB1  2FB4               	goto	u206_25
  7538     0FB2  3020               	movlw	32
  7539     0FB3  0275               	subwf	size@s,w
  7540     0FB4                     u206_25:
  7541     0FB4  1803               	skipnc
  7542     0FB5  2FB7               	goto	u206_21
  7543     0FB6  2FB8               	goto	u206_20
  7544     0FB7                     u206_21:
  7545     0FB7  2FBC               	goto	i1l2380
  7546     0FB8                     u206_20:
  7547     0FB8                     i1l2378:
  7548                           
  7549                           ;main.c: 90:         setCTS(0);
  7550     0FB8  3000               	movlw	0
  7551     0FB9  318D  2549  318F   	fcall	_setCTS
  7552     0FBC                     i1l2380:
  7553                           
  7554                           ;main.c: 92:     return s;
  7555     0FBC  0876               	movf	size@s+1,w
  7556     0FBD  00F3               	movwf	?_size+1
  7557     0FBE  0875               	movf	size@s,w
  7558     0FBF  00F2               	movwf	?_size
  7559     0FC0                     i1l85:
  7560     0FC0  0008               	return
  7561     0FC1                     __end_of_size:
  7562                           
  7563                           	psect	text38
  7564     03CF                     __ptext38:	
  7565 ;; *************** function _push *****************
  7566 ;; Defined at:
  7567 ;;		line 113 in file "main.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;  c               1    wreg     unsigned char 
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;  c               1   10[COMMON] unsigned char 
  7572 ;;  s               2    6[COMMON] short 
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1    wreg      void 
  7575 ;; Registers used:
  7576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7583 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7585 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7586 ;;Total ram usage:        9 bytes
  7587 ;; Hardware stack levels used: 1
  7588 ;; Hardware stack levels required when called: 1
  7589 ;; This function calls:
  7590 ;;		_setCTS
  7591 ;;		i1_addone
  7592 ;; This function is called by:
  7593 ;;		_isr
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597     03CF                     _push:	
  7598                           ;psect for function _push
  7599                           
  7600                           
  7601                           ;incstack = 0
  7602                           ; Regs used in _push: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7603                           ;push@c stored from wreg
  7604     03CF  00FA               	movwf	push@c
  7605     03D0                     i1l2384:
  7606                           
  7607                           ;main.c: 113: void push(char c);main.c: 114: {;main.c: 116:     int16_t s = addone(tail)
      +                           - head;
  7608     03D0  0020               	movlb	0	; select bank0
  7609     03D1  0867               	movf	_tail+1,w
  7610     03D2  00F1               	movwf	i1addone@i+1
  7611     03D3  0866               	movf	_tail,w
  7612     03D4  00F0               	movwf	i1addone@i
  7613     03D5  318D  258A  3183   	fcall	i1_addone
  7614     03D8  087C               	movf	_head,w
  7615     03D9  0270               	subwf	?i1_addone,w
  7616     03DA  00F6               	movwf	push@s
  7617     03DB  087D               	movf	_head+1,w
  7618     03DC  3B71               	subwfb	?i1_addone+1,w
  7619     03DD  00F7               	movwf	push@s+1
  7620     03DE                     i1l2386:
  7621                           
  7622                           ;main.c: 117:     if (s > 1024 -32) {
  7623     03DE  0877               	movf	push@s+1,w
  7624     03DF  3A80               	xorlw	128
  7625     03E0  00F2               	movwf	??_push
  7626     03E1  3083               	movlw	131
  7627     03E2  0272               	subwf	??_push,w
  7628     03E3  1D03               	skipz
  7629     03E4  2BE7               	goto	u207_25
  7630     03E5  30E1               	movlw	225
  7631     03E6  0276               	subwf	push@s,w
  7632     03E7                     u207_25:
  7633     03E7  1C03               	skipc
  7634     03E8  2BEA               	goto	u207_21
  7635     03E9  2BEB               	goto	u207_20
  7636     03EA                     u207_21:
  7637     03EA  2BF0               	goto	i1l2390
  7638     03EB                     u207_20:
  7639     03EB                     i1l2388:
  7640                           
  7641                           ;main.c: 118:         setCTS(1);
  7642     03EB  3001               	movlw	1
  7643     03EC  318D  2549  3183   	fcall	_setCTS
  7644                           
  7645                           ;main.c: 119:     }
  7646     03EF  2BF4               	goto	i1l93
  7647     03F0                     i1l2390:
  7648                           
  7649                           ;main.c: 121:         setCTS(0);
  7650     03F0  3000               	movlw	0
  7651     03F1  318D  2549  3183   	fcall	_setCTS
  7652     03F4                     i1l93:	
  7653                           ;main.c: 122:     }
  7654                           
  7655                           
  7656                           ;main.c: 124:     if ( addone(addone(tail)) == head ) {
  7657     03F4  0020               	movlb	0	; select bank0
  7658     03F5  0867               	movf	_tail+1,w
  7659     03F6  00F1               	movwf	i1addone@i+1
  7660     03F7  0866               	movf	_tail,w
  7661     03F8  00F0               	movwf	i1addone@i
  7662     03F9  318D  258A  3183   	fcall	i1_addone
  7663     03FC  0871               	movf	?i1_addone+1,w
  7664     03FD  00F9               	movwf	_push$1484+1
  7665     03FE  0870               	movf	?i1_addone,w
  7666     03FF  00F8               	movwf	_push$1484
  7667                           
  7668                           ;main.c: 124:     if ( addone(addone(tail)) == head ) {
  7669     0400  0879               	movf	_push$1484+1,w
  7670     0401  00F1               	movwf	i1addone@i+1
  7671     0402  0878               	movf	_push$1484,w
  7672     0403  00F0               	movwf	i1addone@i
  7673     0404  318D  258A  3183   	fcall	i1_addone
  7674     0407  087D               	movf	_head+1,w
  7675     0408  0671               	xorwf	?i1_addone+1,w
  7676     0409  1D03               	skipz
  7677     040A  2C0D               	goto	u208_25
  7678     040B  087C               	movf	_head,w
  7679     040C  0670               	xorwf	?i1_addone,w
  7680     040D                     u208_25:
  7681     040D  1D03               	skipz
  7682     040E  2C10               	goto	u208_21
  7683     040F  2C11               	goto	u208_20
  7684     0410                     u208_21:
  7685     0410  2C2C               	goto	i1l2398
  7686     0411                     u208_20:
  7687     0411                     i1l2392:
  7688                           
  7689                           ;main.c: 126:         PORTCbits.RC4 = 1;
  7690     0411  0020               	movlb	0	; select bank0
  7691     0412  160E               	bsf	14,4	;volatile
  7692     0413                     i1l2394:
  7693                           
  7694                           ;main.c: 127:         _delay((unsigned long)((100)*(20000000/4000.0)));
  7695     0413  3003               	movlw	3
  7696     0414  00F3               	movwf	??_push+1
  7697     0415  308A               	movlw	138
  7698     0416  00F2               	movwf	??_push
  7699     0417  3056               	movlw	86
  7700     0418                     u331_27:
  7701     0418  0B89               	decfsz	9,f
  7702     0419  2C18               	goto	u331_27
  7703     041A  0BF2               	decfsz	??_push,f
  7704     041B  2C18               	goto	u331_27
  7705     041C  0BF3               	decfsz	??_push+1,f
  7706     041D  2C18               	goto	u331_27
  7707     041E                     i1l2396:
  7708                           
  7709                           ;main.c: 128:         PORTCbits.RC4 = 0;
  7710     041E  0020               	movlb	0	; select bank0
  7711     041F  120E               	bcf	14,4	;volatile
  7712                           
  7713                           ;main.c: 129:         _delay((unsigned long)((100)*(20000000/4000.0)));
  7714     0420  3003               	movlw	3
  7715     0421  00F3               	movwf	??_push+1
  7716     0422  308A               	movlw	138
  7717     0423  00F2               	movwf	??_push
  7718     0424  3056               	movlw	86
  7719     0425                     u332_27:
  7720     0425  0B89               	decfsz	9,f
  7721     0426  2C25               	goto	u332_27
  7722     0427  0BF2               	decfsz	??_push,f
  7723     0428  2C25               	goto	u332_27
  7724     0429  0BF3               	decfsz	??_push+1,f
  7725     042A  2C25               	goto	u332_27
  7726                           
  7727                           ;main.c: 130:     }
  7728     042B  2C4E               	goto	i1l96
  7729     042C                     i1l2398:
  7730                           
  7731                           ;main.c: 132:         tail = addone(tail);
  7732     042C  0020               	movlb	0	; select bank0
  7733     042D  0867               	movf	_tail+1,w
  7734     042E  00F1               	movwf	i1addone@i+1
  7735     042F  0866               	movf	_tail,w
  7736     0430  00F0               	movwf	i1addone@i
  7737     0431  318D  258A  3183   	fcall	i1_addone
  7738     0434  0871               	movf	?i1_addone+1,w
  7739     0435  0020               	movlb	0	; select bank0
  7740     0436  00E7               	movwf	_tail+1
  7741     0437  0870               	movf	?i1_addone,w
  7742     0438  00E6               	movwf	_tail
  7743     0439                     i1l2400:
  7744                           
  7745                           ;main.c: 133:         queue[tail] = c;
  7746     0439  30F0               	movlw	240
  7747     043A  00F2               	movwf	??_push
  7748     043B  3023               	movlw	35
  7749     043C  00F3               	movwf	??_push+1
  7750     043D  0866               	movf	_tail,w
  7751     043E  0772               	addwf	??_push,w
  7752     043F  00F4               	movwf	??_push+2
  7753     0440  0867               	movf	_tail+1,w
  7754     0441  3D73               	addwfc	??_push+1,w
  7755     0442  00F5               	movwf	??_push+3
  7756     0443  0874               	movf	??_push+2,w
  7757     0444  0086               	movwf	6
  7758     0445  0875               	movf	??_push+3,w
  7759     0446  0087               	movwf	7
  7760     0447  087A               	movf	push@c,w
  7761     0448  0081               	movwf	1
  7762     0449                     i1l2402:
  7763                           
  7764                           ;main.c: 134:         bytes_pushed++;
  7765     0449  3001               	movlw	1
  7766     044A  0021               	movlb	1	; select bank1
  7767     044B  07D5               	addwf	_bytes_pushed^(0+128),f
  7768     044C  3000               	movlw	0
  7769     044D  3DD6               	addwfc	(_bytes_pushed+1)^(0+128),f
  7770     044E                     i1l96:
  7771     044E  0008               	return
  7772     044F                     __end_of_push:
  7773                           
  7774                           	psect	text39
  7775     0D8A                     __ptext39:	
  7776 ;; *************** function i1_addone *****************
  7777 ;; Defined at:
  7778 ;;		line 73 in file "main.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  i               2    0[COMMON] short 
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;		None
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  2    0[COMMON] short 
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7796 ;;Total ram usage:        2 bytes
  7797 ;; Hardware stack levels used: 1
  7798 ;; This function calls:
  7799 ;;		Nothing
  7800 ;; This function is called by:
  7801 ;;		_size
  7802 ;;		_push
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806     0D8A                     i1_addone:	
  7807                           ;psect for function i1_addone
  7808                           
  7809     0D8A                     i1l2352:	
  7810                           ;incstack = 0
  7811                           ; Regs used in i1_addone: [wreg+status,2+status,0]
  7812                           
  7813                           
  7814                           ;main.c: 73: int16_t addone(int16_t i);main.c: 74: {;main.c: 75:     if (i == 1024 -1)
  7815     0D8A  0A70               	incf	i1addone@i,w
  7816     0D8B  3003               	movlw	3
  7817     0D8C  1903               	skipnz
  7818     0D8D  0671               	xorwf	i1addone@i+1,w
  7819     0D8E  1D03               	btfss	3,2
  7820     0D8F  2D91               	goto	u204_21
  7821     0D90  2D92               	goto	u204_20
  7822     0D91                     u204_21:
  7823     0D91  2D95               	goto	i1l2358
  7824     0D92                     u204_20:
  7825     0D92                     i1l2354:
  7826                           
  7827                           ;main.c: 76:         return 0;
  7828     0D92  01F0               	clrf	?i1_addone
  7829     0D93  01F1               	clrf	?i1_addone+1
  7830     0D94  2D9B               	goto	i1l80
  7831     0D95                     i1l2358:
  7832                           
  7833                           ;main.c: 77:     return i+1;
  7834     0D95  0870               	movf	i1addone@i,w
  7835     0D96  3E01               	addlw	1
  7836     0D97  00F0               	movwf	?i1_addone
  7837     0D98  3000               	movlw	0
  7838     0D99  3D71               	addwfc	i1addone@i+1,w
  7839     0D9A  00F1               	movwf	?i1_addone+1
  7840     0D9B                     i1l80:
  7841     0D9B  0008               	return
  7842     0D9C                     __end_ofi1_addone:
  7843                           
  7844                           	psect	text40
  7845     0D49                     __ptext40:	
  7846 ;; *************** function _setCTS *****************
  7847 ;; Defined at:
  7848 ;;		line 54 in file "main.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;  b               1    wreg     _Bool 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;  b               1    0[COMMON] _Bool 
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  1    wreg      void 
  7855 ;; Registers used:
  7856 ;;		wreg, status,0
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7866 ;;Total ram usage:        1 bytes
  7867 ;; Hardware stack levels used: 1
  7868 ;; This function calls:
  7869 ;;		Nothing
  7870 ;; This function is called by:
  7871 ;;		_size
  7872 ;;		_push
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876     0D49                     _setCTS:	
  7877                           ;psect for function _setCTS
  7878                           
  7879                           
  7880                           ;incstack = 0
  7881                           ; Regs used in _setCTS: [wreg+status,0]
  7882                           ;setCTS@b stored from wreg
  7883     0D49  00F0               	movwf	setCTS@b
  7884     0D4A                     i1l2182:
  7885                           
  7886                           ;main.c: 54: void setCTS(_Bool b);main.c: 55: {;main.c: 56:     PORTAbits.RA4 = b;
  7887     0D4A  0C70               	rrf	setCTS@b,w
  7888     0D4B  0020               	movlb	0	; select bank0
  7889     0D4C  1C03               	skipc
  7890     0D4D  120C               	bcf	12,4	;volatile
  7891     0D4E  1803               	skipnc
  7892     0D4F  160C               	bsf	12,4	;volatile
  7893     0D50                     i1l73:
  7894     0D50  0008               	return
  7895     0D51                     __end_of_setCTS:
  7896                           
  7897                           	psect	text41
  7898     0D51                     __ptext41:	
  7899 ;; *************** function _first *****************
  7900 ;; Defined at:
  7901 ;;		line 176 in file "main.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;		None
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;		None
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  1    wreg      unsigned char 
  7908 ;; Registers used:
  7909 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7919 ;;Total ram usage:        2 bytes
  7920 ;; Hardware stack levels used: 1
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_isr
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928     0D51                     _first:	
  7929                           ;psect for function _first
  7930                           
  7931     0D51                     i1l2404:	
  7932                           ;incstack = 0
  7933                           ; Regs used in _first: [wreg+fsr1l+fsr1h+status,2+status,0]
  7934                           
  7935                           
  7936                           ;main.c: 178:     return queue[head];
  7937     0D51  30F0               	movlw	240
  7938     0D52  00F0               	movwf	??_first
  7939     0D53  3023               	movlw	35
  7940     0D54  00F1               	movwf	??_first+1
  7941     0D55  087C               	movf	_head,w
  7942     0D56  0770               	addwf	??_first,w
  7943     0D57  0086               	movwf	6
  7944     0D58  087D               	movf	_head+1,w
  7945     0D59  3D71               	addwfc	??_first+1,w
  7946     0D5A  0087               	movwf	7
  7947     0D5B  0801               	movf	1,w
  7948     0D5C                     i1l105:
  7949     0D5C  0008               	return
  7950     0D5D                     __end_of_first:
  7951     007E                     btemp	set	126	;btemp
  7952     007E                     int$flags	set	126
  7953     007E                     wtemp0	set	126
  7954     23F0                     
  7955                           	psect	config
  7956                           
  7957                           ;Config register CONFIG1 @ 0x8007
  7958                           ;	Oscillator Selection
  7959                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  7960                           ;	Watchdog Timer Enable
  7961                           ;	WDTE = OFF, WDT disabled
  7962                           ;	Power-up Timer Enable
  7963                           ;	PWRTE = OFF, PWRT disabled
  7964                           ;	MCLR Pin Function Select
  7965                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7966                           ;	Flash Program Memory Code Protection
  7967                           ;	CP = OFF, Program memory code protection is disabled
  7968                           ;	Data Memory Code Protection
  7969                           ;	CPD = OFF, Data memory code protection is disabled
  7970                           ;	Brown-out Reset Enable
  7971                           ;	BOREN = OFF, Brown-out Reset disabled
  7972                           ;	Clock Out Enable
  7973                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7974                           ;	Internal/External Switchover
  7975                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7976                           ;	Fail-Safe Clock Monitor Enable
  7977                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7978     8007                     	org	32775
  7979     8007  39E2               	dw	14818
  7980                           
  7981                           ;Config register CONFIG2 @ 0x8008
  7982                           ;	Flash Memory Self-Write Protection
  7983                           ;	WRT = OFF, Write protection off
  7984                           ;	Voltage Regulator Capacitor Enable bit
  7985                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  7986                           ;	PLL Enable
  7987                           ;	PLLEN = OFF, 4x PLL disabled
  7988                           ;	Stack Overflow/Underflow Reset Enable
  7989                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7990                           ;	Brown-out Reset Voltage Selection
  7991                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7992                           ;	Low Power Brown-Out Reset Enable Bit
  7993                           ;	LPBOR = OFF, Low power brown-out is disabled
  7994                           ;	In-Circuit Debugger Mode
  7995                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  7996                           ;	Low-Voltage Programming Enable
  7997                           ;	LVP = ON, Low-voltage programming enabled
  7998     8008                     	org	32776
  7999     8008  3EFF               	dw	16127

Data Sizes:
    Strings     128
    Constant    0
    Data        2
    BSS         45
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     67      72
    BANK1            80     49      57
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    memset@dest	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    memset@p	PTR unsigned char  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1113$buffer	PTR unsigned char  size(2) Largest target is 0

    S1113$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[4]), STR_4(CODE[10]), STR_5(CODE[8]), STR_8(CODE[7]), 
		 -> STR_9(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), 

    uart_getc@c	PTR unsigned char  size(1) Largest target is 1
		 -> isr@c(BANK0[1]), 

    uart_puts@p	PTR unsigned char  size(2) Largest target is 32
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), STR_10(CODE[15]), 
		 -> STR_11(CODE[3]), STR_12(CODE[13]), STR_13(CODE[5]), STR_2(CODE[15]), 
		 -> STR_3(CODE[29]), STR_6(CODE[3]), STR_7(CODE[14]), 

    uart_puts@s	PTR unsigned char  size(2) Largest target is 32
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), STR_10(CODE[15]), 
		 -> STR_11(CODE[3]), STR_12(CODE[13]), STR_13(CODE[5]), STR_2(CODE[15]), 
		 -> STR_3(CODE[29]), STR_6(CODE[3]), STR_7(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[4]), STR_4(CODE[10]), STR_5(CODE[8]), STR_8(CODE[7]), 
		 -> STR_9(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[4]), STR_4(CODE[10]), STR_5(CODE[8]), STR_8(CODE[7]), 
		 -> STR_9(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[4]), STR_4(CODE[10]), STR_5(CODE[8]), STR_8(CODE[7]), 
		 -> STR_9(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_push
    _size->i1_addone
    _push->i1_addone

Critical Paths under _main in BANK0

    _main->_do_blank
    _main->_do_read
    _uart_init->___lldiv
    ___lldiv->___lmul
    _do_write->_pop
    _do_write->_uart_puts
    _pop->_addone
    _empty->_addone
    _do_read->_sprintf
    _do_init->_sprintf
    _do_blank->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _xtoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _clear->_memset

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_do_blank
    _do_read->_sprintf
    _do_init->_sprintf
    _do_blank->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   48497
                                             66 BANK0      1     1      0
                              _clear
                           _do_blank
                            _do_init
                            _do_read
                           _do_write
                                _pop
                         _ports_init
                          _uart_init
                          _uart_puts
 ---------------------------------------------------------------------------------
 (1) _uart_init                                           13     9      4     750
                                             30 BANK0     13     9      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             16 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ports_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _do_write                                             7     7      0    2880
                                              9 BANK0      7     7      0
                     _charToHexDigit
                                _pop
                      _setup_address
                          _uart_puts
                         _write_port
 ---------------------------------------------------------------------------------
 (2) _write_port                                           2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _pop                                                  3     3      0     915
                                              6 BANK0      3     3      0
                             _addone
                              _empty
 ---------------------------------------------------------------------------------
 (2) _empty                                                0     0      0     446
                             _addone
 ---------------------------------------------------------------------------------
 (3) _addone                                               2     0      2     446
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _charToHexDigit                                       1     1      0     110
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_read                                             22    22      0   14263
                                             64 BANK0      2     2      0
                                             13 BANK1     20    20      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_putc
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_putc                                            1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_init                                             10    10      0   13700
                                             13 BANK1     10    10      0
                            _sprintf
                      _uart_init_brg
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_init_brg                                       10     8      2      40
                                              4 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _do_blank                                            38    38      0   14238
                                             64 BANK0      2     2      0
                                             13 BANK1     36    36      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_puts
 ---------------------------------------------------------------------------------
 (1) _uart_puts                                            5     3      2    1269
                                              4 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    16      4   12277
                                             59 BANK0      5     1      4
                                              0 BANK1     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3   11329
                                             52 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    13      2   10889
                                             38 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                10     8      2    3354
                                             26 BANK0     10     8      2
                                _pad
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     7      2     702
                                             10 BANK0      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     316
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12    10      2    4939
                                             26 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     4      3    2795
                                             19 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1    1249
                                             12 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     857
                                              4 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     613
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     625
                                              4 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _setup_address                                        3     1      2     295
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _read_port                                            1     1      0      23
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear                                                0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 5     5      0     700
                                             11 COMMON     1     1      0
                                              0 BANK0      4     4      0
                              _first
                               _push
                               _size
                          _uart_getc
 ---------------------------------------------------------------------------------
 (11) _uart_getc                                           3     3      0      80
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _size                                                5     3      2     263
                                              2 COMMON     5     3      2
                             _setCTS
                           i1_addone
 ---------------------------------------------------------------------------------
 (11) _push                                                9     9      0     264
                                              2 COMMON     9     9      0
                             _setCTS
                           i1_addone
 ---------------------------------------------------------------------------------
 (12) i1_addone                                            2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _setCTS                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _first                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear
     _memset
   _do_blank
     _read_port
     _setup_address
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
           _xtoa
             _pad
     _uart_puts
   _do_init
     _sprintf
     _uart_init_brg
     _uart_puts
   _do_read
     _read_port
     _setup_address
     _sprintf
     _uart_putc
     _uart_puts
   _do_write
     _charToHexDigit
     _pop
       _addone
       _empty
         _addone
     _setup_address
     _uart_puts
     _write_port
   _pop
   _ports_init
   _uart_init
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _uart_puts

 _isr (ROOT)
   _first
   _push
     _setCTS
     i1_addone
   _size
     _setCTS
     i1_addone
   _uart_getc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     43      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     31      39       7       71.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      AF      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      AF      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Mar 19 11:53:58 2025

               _queue_empty 00D7                          l80 0DC0                          l76 0E07  
                        l89 0DEE                ___awdiv@sign 002A         ___wmul@multiplicand 0026  
                       l100 07A0                         l101 07C6                         l102 07EB  
                       l210 0199                         l131 0F06                         l115 0F2D  
                       l211 01AE                         l220 075D                         l212 01A2  
                       l125 0D78                         l109 0DD7                         l135 0339  
                       l143 03CC                         l151 0E5D                         l128 0D89  
                       l224 079E                         l216 0215                         l208 018D  
                       l137 0349                         l241 07FF                         l145 03CE  
                       l250 0F47                         l403 0EA8                         l235 07F0  
                       l155 0581                         l163 0526                         l244 0F30  
                       l236 07EF                         l405 0EBC                         l253 0F57  
                       l245 0F2F                         l157 058F                         l238 07FA  
                       l239 07F9                         l167 0522                         l249 0F48  
                       l417 0F8B                         l439 06AA                         l556 064F  
                       l900 023E                         l904 023C                         l569 06FE  
                       l913 02C2                         l940 009C                         l933 05EF  
                       l925 04C1                         l942 00A6                         l960 0E23  
                       l872 0E7C                         l865 0E40                         l892 0FD4  
                       l948 0168                         l990 0D48                         l967 0DAD  
                       l895 0FF4                         l897 0FFF                         l979 0750  
                       l987 0EE1             ??_uart_init_brg 0026                         _abs 0D9C  
                       _pad 0FC1                         _isr 0004                         _pop 079F  
              ___awmod@sign 002A                         wreg 0009                        ?_abs 002B  
                      l2200 07C9                        l3002 0E0A                        l2210 07E9  
                      l2202 07D6                        l3004 0E0F                        l3100 0341  
                      l3020 075A                        l3012 0751                        l2300 07EE  
                      l2204 07E2                        l3006 0E17                        l3022 075E  
                      l3030 0781                        l3014 0751                        l2302 07F5  
                      l3102 034A                        l2230 0DD5                        l2222 0DCC  
                      l2214 0DC3                        l2206 07E7                        l2310 0E58  
                      l2240 0D79                        l3008 0E21                        l3040 0E64  
                      l3032 0796                        l3024 076B                        l3016 0753  
                      l3120 036A                        l3112 0352                        l3104 034C  
                      l2224 0DD2                        l2216 0DC9                        l2208 07E8  
                      l2312 0E5A                        l2304 0E43                        l2320 0F6D  
                      l3200 04F8                        l2242 0D7C                        l2234 0D69  
                      l3042 0E66                        l3050 0F2E                        l3034 0797  
                      l3026 077A                        l3018 0755                        l3130 03A7  
                      l3122 036F                        l3114 0357                        l3106 034E  
                      l2090 0DB7                        l2162 0DD8                        l2306 0E46  
                      l2410 0F09                        l2330 0661                        l2322 0F74  
                      l2314 0F58                        l3210 0514                        l3202 04FC  
                      l2244 0D7F                        l2236 0D6C                        l3044 0E68  
                      l3052 0F35                        l3028 077F                        l3060 0EE2  
                      l3140 03BE                        l3132 03AE                        l3124 0374  
                      l2164 0DEB                        l2308 0E4E                        l2420 0F14  
                      l2412 0F0F                        l2340 068C                        l2332 0664  
                      l2324 0F83                        l2316 0F61                        l3212 051A  
                      l3204 0502                        l2190 0E34                        l2246 0D81  
                      l2238 0D6F                        l3046 0E73                        l3038 0E60  
                      l3054 0F3A                        l3062 0EED                        l3142 03C3  
                      l3134 03AF                        l3126 0385                        l3118 0360  
                      l2094 0DBA                        l2430 0F1C                        l2422 0F15  
                      l2414 0F11                        l2342 0694                        l2334 066F  
                      l2318 0F65                        l3206 0506                        l3214 0522  
                      l2184 0E24                        l2248 0D82                        l3056 0F41  
                      l3080 02DA                        l3064 0EFE                        l3136 03B4  
                      l3128 038D                        l2088 0DAE                        l2168 0DED  
                      l2192 079F                        l3160 0547                        l3144 0530  
                      l2440 0F21                        l2432 0F1D                        l2424 0F16  
                      l2416 0F12                        l2408 0F07                        l2344 0695  
                      l2336 0673                        l2328 0650                        l2600 0185  
                      l3216 0529                        l3208 050C                        l2186 0E2A  
                      l2362 0DEF                        l3058 0F4D                        l3090 0307  
                      l3082 02E4                        l3074 02CC                        l3066 02C3  
                      l3138 03B8                        l2194 07A2                        l3170 056E  
                      l3162 054C                        l3154 0538                        l3146 0532  
                      l2450 0F27                        l2442 0F22                        l2434 0F1E  
                      l2426 0F1A                        l2418 0F13                        l2346 069C  
                      l2338 067A                        l2602 0189                        l2188 0E30  
                      l2364 0DFE                        l2700 0719                        l3092 0321  
                      l3084 02E9                        l3076 02D1                        l3068 02C9  
                      l2196 07AF                        l3172 0573                        l3164 0552  
                      l3156 053E                        l3148 0534                        l2452 0F28  
                      l2444 0F24                        l2436 0F1F                        l2428 0F1B  
                      l2348 06A2                        l2620 01B6                        l2612 01A6  
                      l2604 0191                        l3180 04C2                        l2366 0E00  
                      l2702 0737                        l2710 0EC2                        l3094 0329  
                      l3086 02EE                        l2198 07BE                        l3174 0578  
                      l3166 055D                        l2454 0F29                        l2446 0F25  
                      l2438 0F20                        l2630 0213                        l2622 01F0  
                      l2614 01AA                        l2606 0195                        l3190 04DD  
                      l3182 04D1                        l2368 0E05                        l2800 06E5  
                      l2704 0747                        l2712 0ECE                        l2720 0EA4  
                      l3088 02F6                        l3096 032C                        l3176 0584  
                      l3168 0567                        l2456 0F2C                        l2448 0F26  
                      l2632 0214                        l2624 0202                        l2608 019D  
                      l2616 01AE                        l3192 04E0                        l3184 04D4  
                      l2730 05F0                        l2802 06EA                        l2714 0ED3  
                      l2722 0EAD                        l3098 033B                        l3178 0587  
                      l2618 01B3                        l2626 0210                        l3194 04E8  
                      l3186 04D6                        l2740 0601                        l2732 05F2  
                      l2804 06F0                        l2708 0EBF                        l2820 0FD7  
                      l2812 0FC3                        l2724 0EB2                        l2716 0E9D  
                      l2900 047B                        l2628 0211                        l3196 04EE  
                      l3188 04D7                        l2750 0615                        l2742 0606  
                      l2734 05F6                        l2806 06F5                        l2830 0DA1  
                      l2822 0FE1                        l2814 0FC7                        l2726 0EB8  
                      l2718 0EA0                        l2910 049E                        l2902 047C  
                      l3198 04F2                        l2760 0635                        l2752 061A  
                      l2744 060A                        l2736 05FB                        l2808 06FA  
                      l2832 0DA2                        l2824 0FE6                        l2816 0FCD  
                      l2840 0225                        l2920 0592                        l2912 04A3  
                      l2904 0480                        l2770 064B                        l2762 0636  
                      l2754 061E                        l2746 060C                        l2738 05FD  
                      l2826 0FF9                        l2818 0FD2                        l2850 0242  
                      l2842 022A                        l2930 05CF                        l2922 0594  
                      l2914 04B0                        l2906 0489                        l2594 0169  
                      l2764 063B                        l2756 0622                        l2748 0612  
                      l2780 06B6                        l2828 0D9C                        l2692 06FF  
                      l2860 026A                        l2852 0245                        l2844 022E  
                      l2836 0218                        l2924 05A5                        l2932 05D7  
                      l2908 0497                        l2916 04B5                        l2940 0085  
                      l2596 0177                        l2758 0631                        l2766 0641  
                      l2790 06CA                        l2782 06B8                        l2774 06AB  
                      l2694 0705                        l2870 02A1                        l2854 0249  
                      l2862 027A                        l2846 0233                        l2838 021A  
                      l2934 05EB                        l2926 05AD                        l2942 008D  
                      l2598 0180                        ?_pad 0033                        l2768 0646  
                      l2792 06CF                        l2784 06BC                        l2776 06AD  
                      l2696 070A                        l2864 0288                        l2872 02A6  
                      l2856 0265                        l2848 0238                        l2928 05BA  
                      l2960 00CD                        l2952 00A9                        l2944 0094  
                      l2794 06D3                        l2786 06C1                        l2778 06B1  
                      l2698 070F                        l2874 02AC                        l2866 028F  
                      l2858 0266                        l2890 0462                        l2882 0451  
                      l2970 00EE                        l2962 00CE                        l2954 00B9  
                      l2946 0099                        l2938 0074                        l2796 06D7  
                      l2788 06C7                        l2876 02B0                        l2868 0294  
                      l2892 0465                        l2884 0453                        l2980 011A  
                      l2972 00FA                        l2964 00D3                        l2956 00BE  
                      l2948 009D                        l2798 06E1                        l2878 02B7  
                      l2894 046B                        l2886 045B                        l2990 013D  
                      l2982 0126                        l2974 0107                        l2966 00DA  
                      l2958 00C9                        l2896 0470                        l2888 045E  
                      l2984 0134                        l2992 0146                        l2968 00E4  
                      l2898 0474                        l2978 0110                        l2996 0150  
                      ?_isr 0070                        ?_pop 0070                        STR_1 1079  
                      STR_2 102C                        STR_3 1000                        STR_4 1056  
                      STR_5 1060                        STR_6 107D                        STR_7 103B  
                      STR_8 1068                        STR_9 1074                        u2010 068C  
                      u2011 068B                        u2005 0674                        u2030 06A2  
                      u2031 06A1                        u2015 0688                        u3000 0E21  
                      u3001 0E20                        u2025 0696                        u3010 075A  
                      u3011 0759                        u3020 077F                        u3100 0357  
                      u2300 01A6                        u3021 077E                        u3101 0356  
                      u2301 01A5                        _LATA 010C                        u3030 0F35  
                      u3110 0374                        u2310 01AA                        u2230 0180  
                      _LATB 010D                        u3031 0F34                        u3111 0373  
                      u2311 01A9                        u2231 017F                        u3040 0F4D  
                      u3120 03AE                        u2320 01B3                        u2240 0185  
                      u3200 0502                        _LATD 010F                        u3041 0F4C  
                      u3121 03AD                        u2321 01B2                        u2241 0184  
                      u3201 0501                        u3050 0F57                        u3130 03CC  
                      u2330 01FD                        u2250 0189                        u3210 050C  
                      u3051 0F56                        u3131 03CB                        u2251 0188  
                      u3211 050B                        u3060 02D1                        u3140 053E  
                      u2260 0191                        u3220 051A                        u3061 02D0  
                      u3141 053D                        u2261 0190                        u3221 0519  
                      u2430 0705                        u2510 0EB8                        u3070 02EE  
                      u2270 0195                        u2431 0704                        u2511 0EB7  
                      u3071 02ED                        u2335 01F9                        u2271 0194  
                      u2600 0641                        u2520 05F6                        u2440 070A  
                      u3080 0339                        u1800 0DEB                        u3160 0581  
                      u2280 019D                        u2601 0640                        u2521 05F5  
                      u2441 0709                        u2505 0EAE                        u3081 0338  
                      u1801 0DEA                        u3161 0580                        u2281 019C  
                      u2610 0646                        u2530 0601                        u2450 0719  
                      u3090 0341                        u1730 0DB7                        u2290 01A1  
                      u3170 04DD                        u3307 0D75                        u2611 0645  
                      u2531 0600                        u2451 0718                        u3091 0340  
                      u1731 0DB6                        u3155 0560                        u2291 01A0  
                      u3171 04DC                        u1820 0E40                        u2540 0612  
                      u2700 06F5                        u2620 06B1                        u2460 0737  
                      u3180 04EE                        u1821 0E3F                        u2541 0611  
                      u2701 06F4                        u2621 06B0                        u2461 0736  
                      u1805 0DE7                        u3237 052A                        u3181 04ED  
                      u2630 06BC                        u2470 0EE1                        u2710 0FC7  
                      u1910 07F5                        u1830 07C6                        u3190 04F8  
                      u2631 06BB                        u2471 0EE0                        u2711 0FC6  
                      u1911 07F4                        u1831 07C5                        u3247 0E4B  
                      u3191 04F7                        u2560 0622                        u2640 06C7  
                      u2720 0FD2                        u2800 0288                        u2480 0EA4  
                      u1920 07FF                        u1840 0DC9                        u2561 0621  
                      u2641 06C6                        u2465 0733                        u2721 0FD1  
                      u2801 0287                        u2481 0EA3                        u1921 07FE  
                      u1841 0DC8                        u3257 0E54                        u2730 0FF4  
                      u2810 028F                        u1850 0DD2                        u1930 0F65  
                      u2555 0616                        u2731 0FF3                        u2811 028E  
                      u1851 0DD1                        u3267 07A8                        u1931 0F64  
                      u2580 0631                        u2660 06D7                        u2740 0FF9  
                      u2820 0294                        u2900 04B0                        u2581 0630  
                      u2661 06D6                        u2741 0FF8                        u2821 0293  
                      u2805 0284                        u2901 04AF                        u3277 07B7  
                      u2670 06E1                        u2750 0DA1                        u2830 02A1  
                      u2910 04B5                        u2575 0623                        u2671 06E0  
                      u2655 06CB                        u2751 0DA0                        u2735 0FF0  
                      u2831 02A0                        u2495 0EA9                        u2911 04B4  
                      u3287 0764                        u2840 02A6                        u2760 021F  
                      u2920 05A5                        u1960 0F83                        u2585 062D  
                      u2841 02A5                        u2761 021D                        u2921 05A4  
                      u2905 04AC                        u3297 0773                        u1961 0F82  
                      u1945 0F6E                        u2690 06F0                        u2850 02AC  
                      u2770 0220                        u2930 05EB                        u1970 0661  
                      u2595 0637                        u2691 06EF                        u2675 06DD  
                      u2851 02AB                        u2835 029D                        u2931 05EA  
                      u1971 0660                        u1955 0F75                        u2780 022A  
                      u2860 046B                        u2940 0085                        u2685 06E6  
                      u2781 0229                        u2861 046A                        u2941 0084  
                      u2790 0233                        u2870 0497                        u2950 00BE  
                      u1990 0673                        u2791 0232                        u2871 0496  
                      u2951 00BD                        u1991 0672                        u2880 049E  
                      u2960 00CD                        u2881 049D                        u2961 00CC  
                      u1985 0665                        u2890 04A3                        u2970 00E4  
                      u2891 04A2                        u2875 0493                        u2971 00E3  
                      u2980 00EE                        u2981 00ED                        u2990 011A  
                      u2991 0119                        i1l80 0D9B                        i1l73 0D50  
                      i1l93 03F4                        i1l85 0FC0                        i1l96 044E  
         uart_init_brg@rate 002B                        abs@a 002B                        _dbuf 0120  
                      _head 007C                        _main 04C2                        _dtoa 0216  
                      _tail 0066                        _prec 00D1                        pad@i 0037  
                      _size 0F8C                        pad@p 0034                        fsr0h 0005  
                      fsr1h 0007                        indf0 0000                        fsr0l 0004  
                      indf1 0001                        fsr1l 0006                        _push 03CF  
                      btemp 007E                        _xtoa 044F                        isr@c 0023  
                      isr@n 0020                        pop@c 0028                        start 0040  
           ?_charToHexDigit 0070                do_write@addr 002E                do_write@data 002C  
                     ??_abs 002D                       ??_pad 0036                       ??_isr 007B  
                     ??_pop 0026                       ?_main 0070                       ?_dtoa 003A  
           __end_of___awdiv 0650                       STR_10 101D                       STR_11 107D  
                     STR_12 1049                       STR_13 106F             __end_of___awmod 06FF  
                     ?_size 0072                       ?_push 0070             __end_of___lldiv 06AB  
           ___awdiv@divisor 0024                       ?_xtoa 003A                       i1l120 003B  
                     i1l105 0D5C                       i1l122 003E                       i1l232 0E9C  
                     i1l227 0E86                       i1l229 0E8D             ___awdiv@counter 0029  
                     _RCREG 0199                vfpfcnvrt@fmt 0046                       _SPBRG 019B  
                     _PORTD 000F                       _TRISB 008D                       _TRISD 008F  
                     _TRISE 0090                       _TXREG 019A         ___lmul@multiplicand 0028  
           __end_of_do_init 0F07             __end_of_do_read 03CF             ??_setup_address 0026  
                     _clear 0DEF                       _flags 0065                       _first 0D51  
                     _empty 0DD8         read_prec_or_width@c 002F         read_prec_or_width@n 0030  
                     _fputc 06FF                       _fputs 0EBD                       pad@fp 0039  
                     _width 0063                       _queue 23F0                       _putch 0D48  
                     dtoa@d 003A                       dtoa@i 0044                       dtoa@p 0040  
                     dtoa@s 0043                       dtoa@w 0041                       isr@ok 0022  
          __end_ofi1_addone 0D9C                       size@s 0075                       push@c 007A  
                     push@s 0076                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0E7D                       xtoa@c 0041                       xtoa@d 003A  
                     xtoa@i 0042                       xtoa@p 003E                       xtoa@w 003F  
           __initialization 0042                __end_of_main 0530                __end_of_dtoa 02C3  
              __end_of_size 0FC1                __end_of_push 044F                __end_of_xtoa 04C2  
                    ??_main 0062                      ??_dtoa 003C              write_port@data 0025  
                    ??_size 0074                      ??_push 0072                      ??_xtoa 003C  
__end_of_read_prec_or_width 05F0                      ?_clear 0070                      ?_first 0070  
                    ?_empty 0070                      ?_fputc 0024                      ?_fputs 002C  
          ___awdiv@dividend 0026                      _ANSELA 018C                      ?_putch 0070  
                    _ANSELB 018D                      _ANSELC 018E                      _ANSELD 018F  
                    _ANSELE 0190                      i1l2400 0439                      i1l2402 0449  
                    i1l2404 0D51                      i1l2182 0D4A                      i1l2352 0D8A  
                    i1l2354 0D92                      i1l2370 0F8C                      i1l2380 0FBC  
                    i1l2372 0F9A                      i1l2460 0E7F                      i1l2358 0D95  
                    i1l2390 03F0                      i1l2374 0FA7                      i1l2470 0E9B  
                    i1l2462 0E84                      i1l2392 0411                      i1l2384 03D0  
                    i1l2376 0FAB                      i1l2464 0E8A                      u210_20 0E8A  
                    i1l2640 000B                      u210_21 0E89                      i1l2394 0413  
                    i1l2386 03DE                      i1l2378 0FB8                      i1l2466 0E92  
                    i1l2458 0E7E                      i1l2650 002A                      i1l2642 0011  
                    i1l2634 0006                      i1l2396 041E                      i1l2388 03EB  
                    i1l2468 0E99                      i1l2652 0038                      i1l2644 0016  
                    i1l2636 0008                      i1l2398 042C                      i1l2646 001A  
                    i1l2638 0009                      u211_20 0E92                      i1l2648 0022  
                    u211_21 0E91                      u204_20 0D92                      u204_21 0D91  
                    u205_20 0FA7                      u205_21 0FA6                      u205_25 0FA3  
                    u206_20 0FB8                      u206_21 0FB7                      u206_25 0FB4  
                    u207_20 03EB                      u207_21 03EA                      u207_25 03E7  
                    u208_20 0411                      u208_21 0410                      u208_25 040D  
                    u209_20 0E84                      u209_21 0E83                      u234_20 0016  
                    u234_21 0015                      u235_20 002A                      u235_21 0029  
                    u331_27 0418                      u236_20 0038                      u236_21 0037  
                    u236_25 0034                      u332_27 0425               vfpfcnvrt@done 004C  
                    _SPBRGH 019C            __end_of_do_blank 034A                vfprintf@cfmt 0059  
          __end_of_do_write 0590                      ___lmul 0F58                      _addone 0DAE  
                    ___wmul 0E9D                   ??___awdiv 0028                   ??___awmod 0028  
                 ??___lldiv 0038        read_prec_or_width@ap 002A                      _setCTS 0D49  
                    _memset 0E24            ___awdiv@quotient 002B             ___awmod@divisor 0024  
           ___awmod@counter 0029                      pad@buf 0033                   ??_do_init 0060  
                 ??_do_read 0060                      dtoa@fp 003D                      fputc@c 0024  
                    fputs@c 002F                      fputs@i 0030                      fputs@s 0032  
                    putch@c 0070            __end_of_vfprintf 0E24                   ??_sprintf 005F  
                    xtoa@fp 003D     __end_of__initialization 006E              __pcstackCOMMON 0070  
              __pidataBANK0 0002               __end_of_clear 0E08               __end_of_first 0D5D  
             __end_of_empty 0DEF               __end_of_fputc 0751               __end_of_fputs 0EE2  
             __end_of_putch 0D49                   ?i1_addone 0070                     ??_clear 002C  
                   ??_first 0070                     ??_empty 0026                     ??_fputc 0027  
                   ??_fputs 002D                     ??_putch 0024                  __pbssBANK0 0063  
                __pbssBANK1 00D1                  __pbssBANK2 0120            ??_charToHexDigit 0024  
                _cmd_active 00D8                  __pmaintext 04C2                     ?___lmul 0024  
                   ?_addone 0024                     ?___wmul 0024                  __pintentry 0004  
                   ?_setCTS 0070                     ?_memset 0024              ___lmul@product 002C  
                ??i1_addone 0072       __end_of_uart_init_brg 079F             setup_address@hi 0026  
                 ?_do_blank 0070                   ?_do_write 0070                     ___awdiv 05F0  
                   ___awmod 06AB                     ___lldiv 0650                   ?_vfprintf 0054  
                   _do_init 0EE2                     _do_read 034A                     __ptext1 0169  
                   __ptext2 0F58                     __ptext3 0650                     __ptext4 0F07  
                   __ptext5 0530                     __ptext6 0E41                     __ptext7 079F  
                   __ptext8 0DD8                     __ptext9 0DAE                     addone@i 0024  
     read_prec_or_width@fmt 0032            ___awmod@dividend 0026           __end_of_read_port 0D8A  
                ??_do_blank 0060                     main@cmd 0062       __end_of_setup_address 0D79  
                   _sprintf 0E5E                     clrloop0 0D5E                  ??_do_write 0029  
      end_of_initialization 006E                     fputc@fp 0026                     setCTS@b 0070  
                   memset@c 0026                     memset@n 0028                     memset@p 002A  
                   fputs@fp 002C          _read_prec_or_width 0590           __end_of_uart_getc 0E9D  
         __end_of_uart_init 0216             ___lldiv@divisor 0030                  do_blank@ok 00CD  
         __end_of_uart_putc 0800           setup_address@addr 0024           __end_of_uart_puts 0F58  
           ___lldiv@counter 003D           __end_of_vfpfcnvrt 0169                   _RCSTAbits 019D  
       ?_read_prec_or_width 002A            vfpfcnvrt@convarg 004D                  ??_vfprintf 0057  
               uart_getc@ok 0071                  do_read@ads 00AD                  do_read@col 00BE  
                 _PORTAbits 000C                   _PORTCbits 000E                   _TRISAbits 008C  
                 _TRISCbits 008E        ??_read_prec_or_width 002C                  _ports_init 0F07  
                 i1addone@i 0070                  do_write@hi 002A                  do_write@lo 002B  
                 _TXSTAbits 019E              __end_of___lmul 0F8C                 vfpfcnvrt@ap 0047  
            __end_of_addone 0DC1                 vfpfcnvrt@cp 0052                 vfpfcnvrt@fp 0051  
            __end_of___wmul 0EBD                 _BAUDCONbits 019F                  _write_port 0E41  
            __end_of_setCTS 0D51              __end_of_memset 0E41         start_initialization 0042  
               __end_of_abs 0DAE                 __end_of_pad 1000                 __end_of_isr 0040  
               __end_of_pop 07EC                 vfprintf@fmt 0054                    ??___lmul 002C  
                  ??_addone 0026                    ??___wmul 0028                 __pdataBANK0 0066  
                  ??_setCTS 0070                    ??_memset 002A                  memset@dest 0024  
               __pbssBIGRAM 23F0                 __pbssCOMMON 007C                   ___latbits 0003  
             __pcstackBANK0 0020               __pcstackBANK1 00A0                 ?_ports_init 0070  
                 _dtoa$1192 003E                _bytes_popped 00D3                _bytes_pushed 00D5  
                  ?___awdiv 0024                    ?___awmod 0024                    ?___lldiv 0030  
               ?_write_port 0070                    ?_do_init 0070                    ?_do_read 0070  
                  ?_sprintf 005B                   _read_port 0D79              ___wmul@product 0028  
                  _LATCbits 010E                   clear_ram0 0D5D                    _PIE1bits 0091  
                 _push$1484 0078             uart_init@factor 004A                    _PIR1bits 0011  
                uart_getc@c 0070                   _uart_getc 0E7D                   _uart_init 0169  
                 _uart_putc 07EC                   _uart_puts 0F2E                  uart_init@n 0046  
                uart_putc@c 0024                   _vfpfcnvrt 0072                  uart_puts@p 0027  
                uart_puts@s 0024                  _ADCON0bits 009D                    i1_addone 0D8A  
         ___wmul@multiplier 0024                   do_write@c 002D           ___lmul@multiplier 0024  
                ?_read_port 0070                  vfprintf@ap 0056                  vfprintf@fp 0058  
                ?_uart_getc 0070                  ?_uart_init 003E                  ?_uart_putc 0070  
                ?_uart_puts 0024                  ?_vfpfcnvrt 0046                  sprintf@fmt 005B  
        uart_init@baud_rate 003E                    _do_blank 02C3               _uart_init_brg 0751  
                  __ptext10 0DC1                    __ptext11 034A                    __ptext20 044F  
                  __ptext12 07EC                    __ptext21 0590                    __ptext13 0EE2  
                  __ptext30 05F0                    __ptext22 0E9D                    __ptext14 0751  
                  __ptext31 0D69                    __ptext23 0216                    __ptext15 02C3  
                  __ptext40 0D49                    __ptext32 0D79                    __ptext24 0FC1  
                  __ptext16 0F2E                    __ptext41 0D51                    __ptext33 0DEF  
                  __ptext25 0EBD                    __ptext17 0E5E                    __ptext34 0E24  
                  __ptext26 06FF                    __ptext18 0E08                    __ptext27 0D48  
                  __ptext19 0072                    __ptext36 0E7D                    __ptext28 0D9C  
                  __ptext37 0F8C                    __ptext29 06AB                    __ptext38 03CF  
                  __ptext39 0D8A                    _do_write 0530             charToHexDigit@c 0024  
              do_blank@addr 00CF                do_blank@data 00CE                    do_init@s 00AD  
                  int$flags 007E                    _vfprintf 0E08                  _INTCONbits 000B  
            ?_uart_init_brg 0024              __pstringtext10 1074              __pstringtext11 1079  
            __pstringtext12 107D              __pstringtext13 0000                ??_ports_init 0024  
               ??_read_port 0024               _setup_address 0D69                    intlevel1 0000  
                 sprintf@ap 00A0            ___lldiv@dividend 0034                 do_blank@ads 00AD  
               ??_uart_getc 0070                 ??_uart_init 0042                 ??_uart_putc 0024  
               ??_uart_puts 0026              _charToHexDigit 0DC1          __end_of_ports_init 0F2E  
               ??_vfpfcnvrt 0048                ??_write_port 0024               __pstringtext1 1000  
             __pstringtext2 101D               __pstringtext3 102C               __pstringtext4 103B  
             __pstringtext5 1049               __pstringtext6 1056               __pstringtext7 1060  
             __pstringtext8 1068               __pstringtext9 106F                    sprintf@f 00A2  
                  sprintf@s 00A1            ___lldiv@quotient 0039                 do_read@addr 00BF  
               do_init@rate 00B5                 do_read@data 00BD              ?_setup_address 0024  
        __end_of_write_port 0E5E               read_port@data 0024      __end_of_charToHexDigit 0DD8  
