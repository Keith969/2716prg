

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Mar  3 15:53:03 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1789
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2
    66                           	psect	text38,local,class=CODE,merge=1,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    71                           	dabs	1,0xCA0,32
    72                           	dabs	1,0xC20,80
    73                           	dabs	1,0xBA0,80
    74                           	dabs	1,0xB20,80
    75                           	dabs	1,0xAA0,80
    76                           	dabs	1,0xA20,80
    77                           	dabs	1,0x9A0,80
    78                           	dabs	1,0x920,80
    79                           	dabs	1,0x8A0,80
    80                           	dabs	1,0x820,80
    81                           	dabs	1,0x7A0,80
    82                           	dabs	1,0x720,80
    83                           	dabs	1,0x6A0,80
    84                           	dabs	1,0x650,32
    85                           	dabs	1,0x23F0,0,_queue
    86                           	dabs	1,0x7E,2
    87     0000                     
    88                           ; Generated 07/09/2023 GMT
    89                           ; 
    90                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC16F1789 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122     0000                     	;# 
   123     0001                     	;# 
   124     0002                     	;# 
   125     0003                     	;# 
   126     0004                     	;# 
   127     0005                     	;# 
   128     0006                     	;# 
   129     0007                     	;# 
   130     0008                     	;# 
   131     0009                     	;# 
   132     000A                     	;# 
   133     000B                     	;# 
   134     000C                     	;# 
   135     000D                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0016                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001C                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     008F                     	;# 
   156     0090                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0095                     	;# 
   162     0096                     	;# 
   163     0097                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009A                     	;# 
   167     009B                     	;# 
   168     009B                     	;# 
   169     009C                     	;# 
   170     009D                     	;# 
   171     009E                     	;# 
   172     009F                     	;# 
   173     010C                     	;# 
   174     010D                     	;# 
   175     010E                     	;# 
   176     010F                     	;# 
   177     0110                     	;# 
   178     0111                     	;# 
   179     0112                     	;# 
   180     0113                     	;# 
   181     0114                     	;# 
   182     0115                     	;# 
   183     0116                     	;# 
   184     0117                     	;# 
   185     0118                     	;# 
   186     0119                     	;# 
   187     011A                     	;# 
   188     011B                     	;# 
   189     011C                     	;# 
   190     011D                     	;# 
   191     011D                     	;# 
   192     011D                     	;# 
   193     011E                     	;# 
   194     011F                     	;# 
   195     018C                     	;# 
   196     018D                     	;# 
   197     018E                     	;# 
   198     018F                     	;# 
   199     0190                     	;# 
   200     0191                     	;# 
   201     0191                     	;# 
   202     0192                     	;# 
   203     0193                     	;# 
   204     0193                     	;# 
   205     0193                     	;# 
   206     0194                     	;# 
   207     0195                     	;# 
   208     0196                     	;# 
   209     0197                     	;# 
   210     0199                     	;# 
   211     0199                     	;# 
   212     0199                     	;# 
   213     019A                     	;# 
   214     019A                     	;# 
   215     019A                     	;# 
   216     019B                     	;# 
   217     019B                     	;# 
   218     019B                     	;# 
   219     019B                     	;# 
   220     019B                     	;# 
   221     019C                     	;# 
   222     019C                     	;# 
   223     019C                     	;# 
   224     019D                     	;# 
   225     019D                     	;# 
   226     019D                     	;# 
   227     019E                     	;# 
   228     019E                     	;# 
   229     019E                     	;# 
   230     019F                     	;# 
   231     019F                     	;# 
   232     019F                     	;# 
   233     019F                     	;# 
   234     019F                     	;# 
   235     020C                     	;# 
   236     020D                     	;# 
   237     020E                     	;# 
   238     020F                     	;# 
   239     0210                     	;# 
   240     0211                     	;# 
   241     0211                     	;# 
   242     0212                     	;# 
   243     0212                     	;# 
   244     0213                     	;# 
   245     0213                     	;# 
   246     0214                     	;# 
   247     0214                     	;# 
   248     0215                     	;# 
   249     0215                     	;# 
   250     0215                     	;# 
   251     0215                     	;# 
   252     0216                     	;# 
   253     0216                     	;# 
   254     0217                     	;# 
   255     0217                     	;# 
   256     028C                     	;# 
   257     028D                     	;# 
   258     028E                     	;# 
   259     028F                     	;# 
   260     0290                     	;# 
   261     0291                     	;# 
   262     0291                     	;# 
   263     0292                     	;# 
   264     0293                     	;# 
   265     0298                     	;# 
   266     0298                     	;# 
   267     0299                     	;# 
   268     029A                     	;# 
   269     030C                     	;# 
   270     030D                     	;# 
   271     030E                     	;# 
   272     030F                     	;# 
   273     0310                     	;# 
   274     0311                     	;# 
   275     0311                     	;# 
   276     0312                     	;# 
   277     0313                     	;# 
   278     038C                     	;# 
   279     038D                     	;# 
   280     038E                     	;# 
   281     038F                     	;# 
   282     0390                     	;# 
   283     0391                     	;# 
   284     0392                     	;# 
   285     0393                     	;# 
   286     0394                     	;# 
   287     0395                     	;# 
   288     0396                     	;# 
   289     0397                     	;# 
   290     0398                     	;# 
   291     0399                     	;# 
   292     039D                     	;# 
   293     039E                     	;# 
   294     039F                     	;# 
   295     0511                     	;# 
   296     0513                     	;# 
   297     0515                     	;# 
   298     051A                     	;# 
   299     0591                     	;# 
   300     0592                     	;# 
   301     0592                     	;# 
   302     0593                     	;# 
   303     0594                     	;# 
   304     0594                     	;# 
   305     0595                     	;# 
   306     0596                     	;# 
   307     0596                     	;# 
   308     0E91                     	;# 
   309     0E92                     	;# 
   310     0E93                     	;# 
   311     0E94                     	;# 
   312     0E95                     	;# 
   313     0E96                     	;# 
   314     0E97                     	;# 
   315     0E98                     	;# 
   316     0E99                     	;# 
   317     0E9A                     	;# 
   318     0E9B                     	;# 
   319     0E9C                     	;# 
   320     0E9D                     	;# 
   321     0E9E                     	;# 
   322     0E9F                     	;# 
   323     0EA0                     	;# 
   324     0EA1                     	;# 
   325     0EA1                     	;# 
   326     0EA2                     	;# 
   327     0EA3                     	;# 
   328     0EA3                     	;# 
   329     0EA4                     	;# 
   330     0EA5                     	;# 
   331     0EA5                     	;# 
   332     0EA6                     	;# 
   333     0EA7                     	;# 
   334     0EA7                     	;# 
   335     0EA8                     	;# 
   336     0EA9                     	;# 
   337     0EAA                     	;# 
   338     0EAB                     	;# 
   339     0EAC                     	;# 
   340     0EAD                     	;# 
   341     0EAE                     	;# 
   342     0EAF                     	;# 
   343     0EB1                     	;# 
   344     0EB2                     	;# 
   345     0EB3                     	;# 
   346     0EB4                     	;# 
   347     0EB5                     	;# 
   348     0EB6                     	;# 
   349     0EB7                     	;# 
   350     0EB8                     	;# 
   351     0EB9                     	;# 
   352     0EBA                     	;# 
   353     0EBB                     	;# 
   354     0EBC                     	;# 
   355     0EBD                     	;# 
   356     0EBE                     	;# 
   357     0EBF                     	;# 
   358     0EC0                     	;# 
   359     0EC1                     	;# 
   360     0EC1                     	;# 
   361     0EC2                     	;# 
   362     0EC3                     	;# 
   363     0EC3                     	;# 
   364     0EC4                     	;# 
   365     0EC5                     	;# 
   366     0EC5                     	;# 
   367     0EC6                     	;# 
   368     0EC7                     	;# 
   369     0EC7                     	;# 
   370     0EC8                     	;# 
   371     0EC9                     	;# 
   372     0ECA                     	;# 
   373     0ECB                     	;# 
   374     0ECC                     	;# 
   375     0ECD                     	;# 
   376     0ECE                     	;# 
   377     0ECF                     	;# 
   378     0ED1                     	;# 
   379     0ED2                     	;# 
   380     0ED3                     	;# 
   381     0ED4                     	;# 
   382     0ED5                     	;# 
   383     0ED6                     	;# 
   384     0ED7                     	;# 
   385     0ED8                     	;# 
   386     0ED9                     	;# 
   387     0EDA                     	;# 
   388     0EDB                     	;# 
   389     0EDC                     	;# 
   390     0EDD                     	;# 
   391     0EDE                     	;# 
   392     0EDF                     	;# 
   393     0EE0                     	;# 
   394     0EE1                     	;# 
   395     0EE1                     	;# 
   396     0EE2                     	;# 
   397     0EE3                     	;# 
   398     0EE3                     	;# 
   399     0EE4                     	;# 
   400     0EE5                     	;# 
   401     0EE5                     	;# 
   402     0EE6                     	;# 
   403     0EE7                     	;# 
   404     0EE7                     	;# 
   405     0EE8                     	;# 
   406     0EE9                     	;# 
   407     0EEA                     	;# 
   408     0EEB                     	;# 
   409     0EEC                     	;# 
   410     0EED                     	;# 
   411     0EEE                     	;# 
   412     0EEF                     	;# 
   413     0F11                     	;# 
   414     0F12                     	;# 
   415     0F13                     	;# 
   416     0F14                     	;# 
   417     0F15                     	;# 
   418     0F16                     	;# 
   419     0F17                     	;# 
   420     0F18                     	;# 
   421     0F19                     	;# 
   422     0F1A                     	;# 
   423     0F1B                     	;# 
   424     0F1C                     	;# 
   425     0F1D                     	;# 
   426     0F1E                     	;# 
   427     0F1F                     	;# 
   428     0F20                     	;# 
   429     0F21                     	;# 
   430     0F21                     	;# 
   431     0F22                     	;# 
   432     0F23                     	;# 
   433     0F23                     	;# 
   434     0F24                     	;# 
   435     0F25                     	;# 
   436     0F25                     	;# 
   437     0F26                     	;# 
   438     0F27                     	;# 
   439     0F27                     	;# 
   440     0F28                     	;# 
   441     0F29                     	;# 
   442     0F2A                     	;# 
   443     0F2B                     	;# 
   444     0F2C                     	;# 
   445     0F2D                     	;# 
   446     0F2E                     	;# 
   447     0F2F                     	;# 
   448     0FE4                     	;# 
   449     0FE5                     	;# 
   450     0FE6                     	;# 
   451     0FE7                     	;# 
   452     0FE8                     	;# 
   453     0FE9                     	;# 
   454     0FEA                     	;# 
   455     0FEB                     	;# 
   456     0FED                     	;# 
   457     0FEE                     	;# 
   458     0FEF                     	;# 
   459     0000                     	;# 
   460     0001                     	;# 
   461     0002                     	;# 
   462     0003                     	;# 
   463     0004                     	;# 
   464     0005                     	;# 
   465     0006                     	;# 
   466     0007                     	;# 
   467     0008                     	;# 
   468     0009                     	;# 
   469     000A                     	;# 
   470     000B                     	;# 
   471     000C                     	;# 
   472     000D                     	;# 
   473     000E                     	;# 
   474     000F                     	;# 
   475     0010                     	;# 
   476     0011                     	;# 
   477     0012                     	;# 
   478     0013                     	;# 
   479     0014                     	;# 
   480     0015                     	;# 
   481     0016                     	;# 
   482     0016                     	;# 
   483     0017                     	;# 
   484     0018                     	;# 
   485     0019                     	;# 
   486     001A                     	;# 
   487     001B                     	;# 
   488     001C                     	;# 
   489     008C                     	;# 
   490     008D                     	;# 
   491     008E                     	;# 
   492     008F                     	;# 
   493     0090                     	;# 
   494     0091                     	;# 
   495     0092                     	;# 
   496     0093                     	;# 
   497     0094                     	;# 
   498     0095                     	;# 
   499     0096                     	;# 
   500     0097                     	;# 
   501     0098                     	;# 
   502     0099                     	;# 
   503     009A                     	;# 
   504     009B                     	;# 
   505     009B                     	;# 
   506     009C                     	;# 
   507     009D                     	;# 
   508     009E                     	;# 
   509     009F                     	;# 
   510     010C                     	;# 
   511     010D                     	;# 
   512     010E                     	;# 
   513     010F                     	;# 
   514     0110                     	;# 
   515     0111                     	;# 
   516     0112                     	;# 
   517     0113                     	;# 
   518     0114                     	;# 
   519     0115                     	;# 
   520     0116                     	;# 
   521     0117                     	;# 
   522     0118                     	;# 
   523     0119                     	;# 
   524     011A                     	;# 
   525     011B                     	;# 
   526     011C                     	;# 
   527     011D                     	;# 
   528     011D                     	;# 
   529     011D                     	;# 
   530     011E                     	;# 
   531     011F                     	;# 
   532     018C                     	;# 
   533     018D                     	;# 
   534     018E                     	;# 
   535     018F                     	;# 
   536     0190                     	;# 
   537     0191                     	;# 
   538     0191                     	;# 
   539     0192                     	;# 
   540     0193                     	;# 
   541     0193                     	;# 
   542     0193                     	;# 
   543     0194                     	;# 
   544     0195                     	;# 
   545     0196                     	;# 
   546     0197                     	;# 
   547     0199                     	;# 
   548     0199                     	;# 
   549     0199                     	;# 
   550     019A                     	;# 
   551     019A                     	;# 
   552     019A                     	;# 
   553     019B                     	;# 
   554     019B                     	;# 
   555     019B                     	;# 
   556     019B                     	;# 
   557     019B                     	;# 
   558     019C                     	;# 
   559     019C                     	;# 
   560     019C                     	;# 
   561     019D                     	;# 
   562     019D                     	;# 
   563     019D                     	;# 
   564     019E                     	;# 
   565     019E                     	;# 
   566     019E                     	;# 
   567     019F                     	;# 
   568     019F                     	;# 
   569     019F                     	;# 
   570     019F                     	;# 
   571     019F                     	;# 
   572     020C                     	;# 
   573     020D                     	;# 
   574     020E                     	;# 
   575     020F                     	;# 
   576     0210                     	;# 
   577     0211                     	;# 
   578     0211                     	;# 
   579     0212                     	;# 
   580     0212                     	;# 
   581     0213                     	;# 
   582     0213                     	;# 
   583     0214                     	;# 
   584     0214                     	;# 
   585     0215                     	;# 
   586     0215                     	;# 
   587     0215                     	;# 
   588     0215                     	;# 
   589     0216                     	;# 
   590     0216                     	;# 
   591     0217                     	;# 
   592     0217                     	;# 
   593     028C                     	;# 
   594     028D                     	;# 
   595     028E                     	;# 
   596     028F                     	;# 
   597     0290                     	;# 
   598     0291                     	;# 
   599     0291                     	;# 
   600     0292                     	;# 
   601     0293                     	;# 
   602     0298                     	;# 
   603     0298                     	;# 
   604     0299                     	;# 
   605     029A                     	;# 
   606     030C                     	;# 
   607     030D                     	;# 
   608     030E                     	;# 
   609     030F                     	;# 
   610     0310                     	;# 
   611     0311                     	;# 
   612     0311                     	;# 
   613     0312                     	;# 
   614     0313                     	;# 
   615     038C                     	;# 
   616     038D                     	;# 
   617     038E                     	;# 
   618     038F                     	;# 
   619     0390                     	;# 
   620     0391                     	;# 
   621     0392                     	;# 
   622     0393                     	;# 
   623     0394                     	;# 
   624     0395                     	;# 
   625     0396                     	;# 
   626     0397                     	;# 
   627     0398                     	;# 
   628     0399                     	;# 
   629     039D                     	;# 
   630     039E                     	;# 
   631     039F                     	;# 
   632     0511                     	;# 
   633     0513                     	;# 
   634     0515                     	;# 
   635     051A                     	;# 
   636     0591                     	;# 
   637     0592                     	;# 
   638     0592                     	;# 
   639     0593                     	;# 
   640     0594                     	;# 
   641     0594                     	;# 
   642     0595                     	;# 
   643     0596                     	;# 
   644     0596                     	;# 
   645     0E91                     	;# 
   646     0E92                     	;# 
   647     0E93                     	;# 
   648     0E94                     	;# 
   649     0E95                     	;# 
   650     0E96                     	;# 
   651     0E97                     	;# 
   652     0E98                     	;# 
   653     0E99                     	;# 
   654     0E9A                     	;# 
   655     0E9B                     	;# 
   656     0E9C                     	;# 
   657     0E9D                     	;# 
   658     0E9E                     	;# 
   659     0E9F                     	;# 
   660     0EA0                     	;# 
   661     0EA1                     	;# 
   662     0EA1                     	;# 
   663     0EA2                     	;# 
   664     0EA3                     	;# 
   665     0EA3                     	;# 
   666     0EA4                     	;# 
   667     0EA5                     	;# 
   668     0EA5                     	;# 
   669     0EA6                     	;# 
   670     0EA7                     	;# 
   671     0EA7                     	;# 
   672     0EA8                     	;# 
   673     0EA9                     	;# 
   674     0EAA                     	;# 
   675     0EAB                     	;# 
   676     0EAC                     	;# 
   677     0EAD                     	;# 
   678     0EAE                     	;# 
   679     0EAF                     	;# 
   680     0EB1                     	;# 
   681     0EB2                     	;# 
   682     0EB3                     	;# 
   683     0EB4                     	;# 
   684     0EB5                     	;# 
   685     0EB6                     	;# 
   686     0EB7                     	;# 
   687     0EB8                     	;# 
   688     0EB9                     	;# 
   689     0EBA                     	;# 
   690     0EBB                     	;# 
   691     0EBC                     	;# 
   692     0EBD                     	;# 
   693     0EBE                     	;# 
   694     0EBF                     	;# 
   695     0EC0                     	;# 
   696     0EC1                     	;# 
   697     0EC1                     	;# 
   698     0EC2                     	;# 
   699     0EC3                     	;# 
   700     0EC3                     	;# 
   701     0EC4                     	;# 
   702     0EC5                     	;# 
   703     0EC5                     	;# 
   704     0EC6                     	;# 
   705     0EC7                     	;# 
   706     0EC7                     	;# 
   707     0EC8                     	;# 
   708     0EC9                     	;# 
   709     0ECA                     	;# 
   710     0ECB                     	;# 
   711     0ECC                     	;# 
   712     0ECD                     	;# 
   713     0ECE                     	;# 
   714     0ECF                     	;# 
   715     0ED1                     	;# 
   716     0ED2                     	;# 
   717     0ED3                     	;# 
   718     0ED4                     	;# 
   719     0ED5                     	;# 
   720     0ED6                     	;# 
   721     0ED7                     	;# 
   722     0ED8                     	;# 
   723     0ED9                     	;# 
   724     0EDA                     	;# 
   725     0EDB                     	;# 
   726     0EDC                     	;# 
   727     0EDD                     	;# 
   728     0EDE                     	;# 
   729     0EDF                     	;# 
   730     0EE0                     	;# 
   731     0EE1                     	;# 
   732     0EE1                     	;# 
   733     0EE2                     	;# 
   734     0EE3                     	;# 
   735     0EE3                     	;# 
   736     0EE4                     	;# 
   737     0EE5                     	;# 
   738     0EE5                     	;# 
   739     0EE6                     	;# 
   740     0EE7                     	;# 
   741     0EE7                     	;# 
   742     0EE8                     	;# 
   743     0EE9                     	;# 
   744     0EEA                     	;# 
   745     0EEB                     	;# 
   746     0EEC                     	;# 
   747     0EED                     	;# 
   748     0EEE                     	;# 
   749     0EEF                     	;# 
   750     0F11                     	;# 
   751     0F12                     	;# 
   752     0F13                     	;# 
   753     0F14                     	;# 
   754     0F15                     	;# 
   755     0F16                     	;# 
   756     0F17                     	;# 
   757     0F18                     	;# 
   758     0F19                     	;# 
   759     0F1A                     	;# 
   760     0F1B                     	;# 
   761     0F1C                     	;# 
   762     0F1D                     	;# 
   763     0F1E                     	;# 
   764     0F1F                     	;# 
   765     0F20                     	;# 
   766     0F21                     	;# 
   767     0F21                     	;# 
   768     0F22                     	;# 
   769     0F23                     	;# 
   770     0F23                     	;# 
   771     0F24                     	;# 
   772     0F25                     	;# 
   773     0F25                     	;# 
   774     0F26                     	;# 
   775     0F27                     	;# 
   776     0F27                     	;# 
   777     0F28                     	;# 
   778     0F29                     	;# 
   779     0F2A                     	;# 
   780     0F2B                     	;# 
   781     0F2C                     	;# 
   782     0F2D                     	;# 
   783     0F2E                     	;# 
   784     0F2F                     	;# 
   785     0FE4                     	;# 
   786     0FE5                     	;# 
   787     0FE6                     	;# 
   788     0FE7                     	;# 
   789     0FE8                     	;# 
   790     0FE9                     	;# 
   791     0FEA                     	;# 
   792     0FEB                     	;# 
   793     0FED                     	;# 
   794     0FEE                     	;# 
   795     0FEF                     	;# 
   796     0000                     	;# 
   797     0001                     	;# 
   798     0002                     	;# 
   799     0003                     	;# 
   800     0004                     	;# 
   801     0005                     	;# 
   802     0006                     	;# 
   803     0007                     	;# 
   804     0008                     	;# 
   805     0009                     	;# 
   806     000A                     	;# 
   807     000B                     	;# 
   808     000C                     	;# 
   809     000D                     	;# 
   810     000E                     	;# 
   811     000F                     	;# 
   812     0010                     	;# 
   813     0011                     	;# 
   814     0012                     	;# 
   815     0013                     	;# 
   816     0014                     	;# 
   817     0015                     	;# 
   818     0016                     	;# 
   819     0016                     	;# 
   820     0017                     	;# 
   821     0018                     	;# 
   822     0019                     	;# 
   823     001A                     	;# 
   824     001B                     	;# 
   825     001C                     	;# 
   826     008C                     	;# 
   827     008D                     	;# 
   828     008E                     	;# 
   829     008F                     	;# 
   830     0090                     	;# 
   831     0091                     	;# 
   832     0092                     	;# 
   833     0093                     	;# 
   834     0094                     	;# 
   835     0095                     	;# 
   836     0096                     	;# 
   837     0097                     	;# 
   838     0098                     	;# 
   839     0099                     	;# 
   840     009A                     	;# 
   841     009B                     	;# 
   842     009B                     	;# 
   843     009C                     	;# 
   844     009D                     	;# 
   845     009E                     	;# 
   846     009F                     	;# 
   847     010C                     	;# 
   848     010D                     	;# 
   849     010E                     	;# 
   850     010F                     	;# 
   851     0110                     	;# 
   852     0111                     	;# 
   853     0112                     	;# 
   854     0113                     	;# 
   855     0114                     	;# 
   856     0115                     	;# 
   857     0116                     	;# 
   858     0117                     	;# 
   859     0118                     	;# 
   860     0119                     	;# 
   861     011A                     	;# 
   862     011B                     	;# 
   863     011C                     	;# 
   864     011D                     	;# 
   865     011D                     	;# 
   866     011D                     	;# 
   867     011E                     	;# 
   868     011F                     	;# 
   869     018C                     	;# 
   870     018D                     	;# 
   871     018E                     	;# 
   872     018F                     	;# 
   873     0190                     	;# 
   874     0191                     	;# 
   875     0191                     	;# 
   876     0192                     	;# 
   877     0193                     	;# 
   878     0193                     	;# 
   879     0193                     	;# 
   880     0194                     	;# 
   881     0195                     	;# 
   882     0196                     	;# 
   883     0197                     	;# 
   884     0199                     	;# 
   885     0199                     	;# 
   886     0199                     	;# 
   887     019A                     	;# 
   888     019A                     	;# 
   889     019A                     	;# 
   890     019B                     	;# 
   891     019B                     	;# 
   892     019B                     	;# 
   893     019B                     	;# 
   894     019B                     	;# 
   895     019C                     	;# 
   896     019C                     	;# 
   897     019C                     	;# 
   898     019D                     	;# 
   899     019D                     	;# 
   900     019D                     	;# 
   901     019E                     	;# 
   902     019E                     	;# 
   903     019E                     	;# 
   904     019F                     	;# 
   905     019F                     	;# 
   906     019F                     	;# 
   907     019F                     	;# 
   908     019F                     	;# 
   909     020C                     	;# 
   910     020D                     	;# 
   911     020E                     	;# 
   912     020F                     	;# 
   913     0210                     	;# 
   914     0211                     	;# 
   915     0211                     	;# 
   916     0212                     	;# 
   917     0212                     	;# 
   918     0213                     	;# 
   919     0213                     	;# 
   920     0214                     	;# 
   921     0214                     	;# 
   922     0215                     	;# 
   923     0215                     	;# 
   924     0215                     	;# 
   925     0215                     	;# 
   926     0216                     	;# 
   927     0216                     	;# 
   928     0217                     	;# 
   929     0217                     	;# 
   930     028C                     	;# 
   931     028D                     	;# 
   932     028E                     	;# 
   933     028F                     	;# 
   934     0290                     	;# 
   935     0291                     	;# 
   936     0291                     	;# 
   937     0292                     	;# 
   938     0293                     	;# 
   939     0298                     	;# 
   940     0298                     	;# 
   941     0299                     	;# 
   942     029A                     	;# 
   943     030C                     	;# 
   944     030D                     	;# 
   945     030E                     	;# 
   946     030F                     	;# 
   947     0310                     	;# 
   948     0311                     	;# 
   949     0311                     	;# 
   950     0312                     	;# 
   951     0313                     	;# 
   952     038C                     	;# 
   953     038D                     	;# 
   954     038E                     	;# 
   955     038F                     	;# 
   956     0390                     	;# 
   957     0391                     	;# 
   958     0392                     	;# 
   959     0393                     	;# 
   960     0394                     	;# 
   961     0395                     	;# 
   962     0396                     	;# 
   963     0397                     	;# 
   964     0398                     	;# 
   965     0399                     	;# 
   966     039D                     	;# 
   967     039E                     	;# 
   968     039F                     	;# 
   969     0511                     	;# 
   970     0513                     	;# 
   971     0515                     	;# 
   972     051A                     	;# 
   973     0591                     	;# 
   974     0592                     	;# 
   975     0592                     	;# 
   976     0593                     	;# 
   977     0594                     	;# 
   978     0594                     	;# 
   979     0595                     	;# 
   980     0596                     	;# 
   981     0596                     	;# 
   982     0E91                     	;# 
   983     0E92                     	;# 
   984     0E93                     	;# 
   985     0E94                     	;# 
   986     0E95                     	;# 
   987     0E96                     	;# 
   988     0E97                     	;# 
   989     0E98                     	;# 
   990     0E99                     	;# 
   991     0E9A                     	;# 
   992     0E9B                     	;# 
   993     0E9C                     	;# 
   994     0E9D                     	;# 
   995     0E9E                     	;# 
   996     0E9F                     	;# 
   997     0EA0                     	;# 
   998     0EA1                     	;# 
   999     0EA1                     	;# 
  1000     0EA2                     	;# 
  1001     0EA3                     	;# 
  1002     0EA3                     	;# 
  1003     0EA4                     	;# 
  1004     0EA5                     	;# 
  1005     0EA5                     	;# 
  1006     0EA6                     	;# 
  1007     0EA7                     	;# 
  1008     0EA7                     	;# 
  1009     0EA8                     	;# 
  1010     0EA9                     	;# 
  1011     0EAA                     	;# 
  1012     0EAB                     	;# 
  1013     0EAC                     	;# 
  1014     0EAD                     	;# 
  1015     0EAE                     	;# 
  1016     0EAF                     	;# 
  1017     0EB1                     	;# 
  1018     0EB2                     	;# 
  1019     0EB3                     	;# 
  1020     0EB4                     	;# 
  1021     0EB5                     	;# 
  1022     0EB6                     	;# 
  1023     0EB7                     	;# 
  1024     0EB8                     	;# 
  1025     0EB9                     	;# 
  1026     0EBA                     	;# 
  1027     0EBB                     	;# 
  1028     0EBC                     	;# 
  1029     0EBD                     	;# 
  1030     0EBE                     	;# 
  1031     0EBF                     	;# 
  1032     0EC0                     	;# 
  1033     0EC1                     	;# 
  1034     0EC1                     	;# 
  1035     0EC2                     	;# 
  1036     0EC3                     	;# 
  1037     0EC3                     	;# 
  1038     0EC4                     	;# 
  1039     0EC5                     	;# 
  1040     0EC5                     	;# 
  1041     0EC6                     	;# 
  1042     0EC7                     	;# 
  1043     0EC7                     	;# 
  1044     0EC8                     	;# 
  1045     0EC9                     	;# 
  1046     0ECA                     	;# 
  1047     0ECB                     	;# 
  1048     0ECC                     	;# 
  1049     0ECD                     	;# 
  1050     0ECE                     	;# 
  1051     0ECF                     	;# 
  1052     0ED1                     	;# 
  1053     0ED2                     	;# 
  1054     0ED3                     	;# 
  1055     0ED4                     	;# 
  1056     0ED5                     	;# 
  1057     0ED6                     	;# 
  1058     0ED7                     	;# 
  1059     0ED8                     	;# 
  1060     0ED9                     	;# 
  1061     0EDA                     	;# 
  1062     0EDB                     	;# 
  1063     0EDC                     	;# 
  1064     0EDD                     	;# 
  1065     0EDE                     	;# 
  1066     0EDF                     	;# 
  1067     0EE0                     	;# 
  1068     0EE1                     	;# 
  1069     0EE1                     	;# 
  1070     0EE2                     	;# 
  1071     0EE3                     	;# 
  1072     0EE3                     	;# 
  1073     0EE4                     	;# 
  1074     0EE5                     	;# 
  1075     0EE5                     	;# 
  1076     0EE6                     	;# 
  1077     0EE7                     	;# 
  1078     0EE7                     	;# 
  1079     0EE8                     	;# 
  1080     0EE9                     	;# 
  1081     0EEA                     	;# 
  1082     0EEB                     	;# 
  1083     0EEC                     	;# 
  1084     0EED                     	;# 
  1085     0EEE                     	;# 
  1086     0EEF                     	;# 
  1087     0F11                     	;# 
  1088     0F12                     	;# 
  1089     0F13                     	;# 
  1090     0F14                     	;# 
  1091     0F15                     	;# 
  1092     0F16                     	;# 
  1093     0F17                     	;# 
  1094     0F18                     	;# 
  1095     0F19                     	;# 
  1096     0F1A                     	;# 
  1097     0F1B                     	;# 
  1098     0F1C                     	;# 
  1099     0F1D                     	;# 
  1100     0F1E                     	;# 
  1101     0F1F                     	;# 
  1102     0F20                     	;# 
  1103     0F21                     	;# 
  1104     0F21                     	;# 
  1105     0F22                     	;# 
  1106     0F23                     	;# 
  1107     0F23                     	;# 
  1108     0F24                     	;# 
  1109     0F25                     	;# 
  1110     0F25                     	;# 
  1111     0F26                     	;# 
  1112     0F27                     	;# 
  1113     0F27                     	;# 
  1114     0F28                     	;# 
  1115     0F29                     	;# 
  1116     0F2A                     	;# 
  1117     0F2B                     	;# 
  1118     0F2C                     	;# 
  1119     0F2D                     	;# 
  1120     0F2E                     	;# 
  1121     0F2F                     	;# 
  1122     0FE4                     	;# 
  1123     0FE5                     	;# 
  1124     0FE6                     	;# 
  1125     0FE7                     	;# 
  1126     0FE8                     	;# 
  1127     0FE9                     	;# 
  1128     0FEA                     	;# 
  1129     0FEB                     	;# 
  1130     0FED                     	;# 
  1131     0FEE                     	;# 
  1132     0FEF                     	;_queue
  1133                           
  1134                           	psect	idataBANK0
  1135     07FA                     __pidataBANK0:
  1136                           
  1137                           ;initializer for _tail
  1138     07FA  34FF               	retlw	255
  1139     07FB  3403               	retlw	3
  1140     0011                     _PIR1bits	set	17
  1141     000F                     _PORTD	set	15
  1142     000B                     _INTCONbits	set	11
  1143     000E                     _PORTCbits	set	14
  1144     000C                     _PORTAbits	set	12
  1145     0090                     _TRISE	set	144
  1146     008F                     _TRISD	set	143
  1147     008E                     _TRISCbits	set	142
  1148     008D                     _TRISB	set	141
  1149     008C                     _TRISAbits	set	140
  1150     009D                     _ADCON0bits	set	157
  1151     0091                     _PIE1bits	set	145
  1152     010F                     _LATD	set	271
  1153     010E                     _LATCbits	set	270
  1154     010C                     _LATA	set	268
  1155     010D                     _LATB	set	269
  1156     019B                     _SPBRG	set	411
  1157     019A                     _TXREG	set	410
  1158     0199                     _RCREG	set	409
  1159     019C                     _SPBRGH	set	412
  1160     019E                     _TXSTAbits	set	414
  1161     019D                     _RCSTAbits	set	413
  1162     019F                     _BAUDCONbits	set	415
  1163     0190                     _ANSELE	set	400
  1164     018F                     _ANSELD	set	399
  1165     018E                     _ANSELC	set	398
  1166     018D                     _ANSELB	set	397
  1167     018C                     _ANSELA	set	396
  1168                           
  1169                           	psect	stringtext1
  1170     1000                     __pstringtext1:
  1171     1000                     STR_3:
  1172     1000  3445               	retlw	69	;'E'
  1173     1001  3472               	retlw	114	;'r'
  1174     1002  3461               	retlw	97	;'a'
  1175     1003  3473               	retlw	115	;'s'
  1176     1004  3465               	retlw	101	;'e'
  1177     1005  3420               	retlw	32	;' '
  1178     1006  3463               	retlw	99	;'c'
  1179     1007  3468               	retlw	104	;'h'
  1180     1008  3465               	retlw	101	;'e'
  1181     1009  3463               	retlw	99	;'c'
  1182     100A  346B               	retlw	107	;'k'
  1183     100B  3420               	retlw	32	;' '
  1184     100C  3466               	retlw	102	;'f'
  1185     100D  3461               	retlw	97	;'a'
  1186     100E  3469               	retlw	105	;'i'
  1187     100F  346C               	retlw	108	;'l'
  1188     1010  3420               	retlw	32	;' '
  1189     1011  3461               	retlw	97	;'a'
  1190     1012  3474               	retlw	116	;'t'
  1191     1013  3420               	retlw	32	;' '
  1192     1014  3461               	retlw	97	;'a'
  1193     1015  3464               	retlw	100	;'d'
  1194     1016  3464               	retlw	100	;'d'
  1195     1017  3472               	retlw	114	;'r'
  1196     1018  3465               	retlw	101	;'e'
  1197     1019  3473               	retlw	115	;'s'
  1198     101A  3473               	retlw	115	;'s'
  1199     101B  3420               	retlw	32	;' '
  1200     101C  3400               	retlw	0
  1201                           
  1202                           	psect	stringtext2
  1203     101D                     __pstringtext2:
  1204     101D                     STR_10:
  1205     101D  3457               	retlw	87	;'W'
  1206     101E  3472               	retlw	114	;'r'
  1207     101F  3469               	retlw	105	;'i'
  1208     1020  3474               	retlw	116	;'t'
  1209     1021  3465               	retlw	101	;'e'
  1210     1022  3420               	retlw	32	;' '
  1211     1023  3461               	retlw	97	;'a'
  1212     1024  3462               	retlw	98	;'b'
  1213     1025  346F               	retlw	111	;'o'
  1214     1026  3472               	retlw	114	;'r'
  1215     1027  3474               	retlw	116	;'t'
  1216     1028  3465               	retlw	101	;'e'
  1217     1029  3464               	retlw	100	;'d'
  1218     102A  340A               	retlw	10
  1219     102B  3400               	retlw	0
  1220                           
  1221                           	psect	stringtext3
  1222     102C                     __pstringtext3:
  1223     102C                     STR_2:
  1224     102C  3443               	retlw	67	;'C'
  1225     102D  3468               	retlw	104	;'h'
  1226     102E  3465               	retlw	101	;'e'
  1227     102F  3463               	retlw	99	;'c'
  1228     1030  346B               	retlw	107	;'k'
  1229     1031  3420               	retlw	32	;' '
  1230     1032  3461               	retlw	97	;'a'
  1231     1033  3462               	retlw	98	;'b'
  1232     1034  346F               	retlw	111	;'o'
  1233     1035  3472               	retlw	114	;'r'
  1234     1036  3474               	retlw	116	;'t'
  1235     1037  3465               	retlw	101	;'e'
  1236     1038  3464               	retlw	100	;'d'
  1237     1039  340A               	retlw	10
  1238     103A  3400               	retlw	0
  1239                           
  1240                           	psect	stringtext4
  1241     103B                     __pstringtext4:
  1242     103B                     STR_7:
  1243     103B  3452               	retlw	82	;'R'
  1244     103C  3465               	retlw	101	;'e'
  1245     103D  3461               	retlw	97	;'a'
  1246     103E  3464               	retlw	100	;'d'
  1247     103F  3420               	retlw	32	;' '
  1248     1040  3461               	retlw	97	;'a'
  1249     1041  3462               	retlw	98	;'b'
  1250     1042  346F               	retlw	111	;'o'
  1251     1043  3472               	retlw	114	;'r'
  1252     1044  3474               	retlw	116	;'t'
  1253     1045  3465               	retlw	101	;'e'
  1254     1046  3464               	retlw	100	;'d'
  1255     1047  340A               	retlw	10
  1256     1048  3400               	retlw	0
  1257                           
  1258                           	psect	stringtext5
  1259     1049                     __pstringtext5:
  1260     1049                     STR_12:
  1261     1049  3441               	retlw	65	;'A'
  1262     104A  346C               	retlw	108	;'l'
  1263     104B  3472               	retlw	114	;'r'
  1264     104C  3465               	retlw	101	;'e'
  1265     104D  3461               	retlw	97	;'a'
  1266     104E  3464               	retlw	100	;'d'
  1267     104F  3479               	retlw	121	;'y'
  1268     1050  3420               	retlw	32	;' '
  1269     1051  3469               	retlw	105	;'i'
  1270     1052  346E               	retlw	110	;'n'
  1271     1053  3469               	retlw	105	;'i'
  1272     1054  3474               	retlw	116	;'t'
  1273     1055  3400               	retlw	0
  1274                           
  1275                           	psect	stringtext6
  1276     1056                     __pstringtext6:
  1277     1056                     STR_4:
  1278     1056  3430               	retlw	48	;'0'
  1279     1057  3478               	retlw	120	;'x'
  1280     1058  3425               	retlw	37	;'%'
  1281     1059  3430               	retlw	48	;'0'
  1282     105A  3434               	retlw	52	;'4'
  1283     105B  3478               	retlw	120	;'x'
  1284     105C  3420               	retlw	32	;' '
  1285     105D  343D               	retlw	61	;'='
  1286     105E  3420               	retlw	32	;' '
  1287     105F  3400               	retlw	0
  1288                           
  1289                           	psect	stringtext7
  1290     1060                     __pstringtext7:
  1291     1060                     STR_5:
  1292     1060  3430               	retlw	48	;'0'
  1293     1061  3478               	retlw	120	;'x'
  1294     1062  3425               	retlw	37	;'%'
  1295     1063  3430               	retlw	48	;'0'
  1296     1064  3432               	retlw	50	;'2'
  1297     1065  3478               	retlw	120	;'x'
  1298     1066  340A               	retlw	10
  1299     1067  3400               	retlw	0
  1300                           
  1301                           	psect	stringtext8
  1302     1068                     __pstringtext8:
  1303     1068                     STR_8:
  1304     1068  3425               	retlw	37	;'%'
  1305     1069  3430               	retlw	48	;'0'
  1306     106A  3434               	retlw	52	;'4'
  1307     106B  3478               	retlw	120	;'x'
  1308     106C  343A               	retlw	58	;':'
  1309     106D  3420               	retlw	32	;' '
  1310     106E  3400               	retlw	0
  1311                           
  1312                           	psect	stringtext9
  1313     106F                     __pstringtext9:
  1314     106F                     STR_13:
  1315     106F  3432               	retlw	50	;'2'
  1316     1070  3437               	retlw	55	;'7'
  1317     1071  3430               	retlw	48	;'0'
  1318     1072  3438               	retlw	56	;'8'
  1319     1073  3400               	retlw	0
  1320                           
  1321                           	psect	stringtext10
  1322     1074                     __pstringtext10:
  1323     1074                     STR_9:
  1324     1074  3425               	retlw	37	;'%'
  1325     1075  3430               	retlw	48	;'0'
  1326     1076  3432               	retlw	50	;'2'
  1327     1077  3478               	retlw	120	;'x'
  1328     1078  3400               	retlw	0
  1329                           
  1330                           	psect	stringtext11
  1331     1079                     __pstringtext11:
  1332     1079                     STR_1:
  1333     1079  3425               	retlw	37	;'%'
  1334     107A  3464               	retlw	100	;'d'
  1335     107B  340A               	retlw	10
  1336     107C  3400               	retlw	0
  1337                           
  1338                           	psect	stringtext12
  1339     107D                     __pstringtext12:
  1340     107D                     STR_6:
  1341     107D  344F               	retlw	79	;'O'
  1342     107E  344B               	retlw	75	;'K'
  1343     107F  3400               	retlw	0
  1344                           
  1345                           	psect	stringtext13
  1346     0000                     __pstringtext13:
  1347     107D                     
  1348                           	psect	cinit
  1349     0042                     start_initialization:	
  1350                           ; #config settings
  1351                           
  1352     0042                     __initialization:	;BIGRAM
  1353                           
  1354                           ; Initialize objects allocated to BANK0
  1355     0042  3187  27FA  3180   	fcall	__pidataBANK0	;fetch initializer
  1356     0045  00E5               	movwf	__pdataBANK0& (0+127)
  1357     0046  3187  27FB  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1358     0049  00E6               	movwf	(__pdataBANK0+1)& (0+127)
  1359                           
  1360                           ; Clear objects allocated to BIGRAM
  1361     004A  30F0               	movlw	low (0+9200)
  1362     004B  0084               	movwf	4
  1363     004C  3023               	movlw	high (0+9200)
  1364     004D  0085               	movwf	5
  1365     004E  3000               	movlw	0
  1366     004F  00FE               	movwf	btemp
  1367     0050  3004               	movlw	4
  1368     0051  00FF               	movwf	btemp+1
  1369     0052  318D  2526  3180   	fcall	clear_ram0
  1370                           
  1371                           ; Clear objects allocated to COMMON
  1372     0055  01FC               	clrf	__pbssCOMMON& (0+127)
  1373     0056  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1374                           
  1375                           ; Clear objects allocated to BANK0
  1376     0057  01E3               	clrf	__pbssBANK0& (0+127)
  1377     0058  01E4               	clrf	(__pbssBANK0+1)& (0+127)
  1378                           
  1379                           ; Clear objects allocated to BANK1
  1380     0059  30D3               	movlw	low __pbssBANK1
  1381     005A  0084               	movwf	4
  1382     005B  3000               	movlw	high __pbssBANK1
  1383     005C  0085               	movwf	5
  1384     005D  300A               	movlw	10
  1385     005E  00FE               	movwf	btemp
  1386     005F  3000               	movlw	0
  1387     0060  00FF               	movwf	btemp+1
  1388     0061  318D  2526  3180   	fcall	clear_ram0
  1389                           
  1390                           ; Clear objects allocated to BANK2
  1391     0064  3020               	movlw	low __pbssBANK2
  1392     0065  0084               	movwf	4
  1393     0066  3001               	movlw	high __pbssBANK2
  1394     0067  0085               	movwf	5
  1395     0068  3020               	movlw	32
  1396     0069  00FE               	movwf	btemp
  1397     006A  3000               	movlw	0
  1398     006B  00FF               	movwf	btemp+1
  1399     006C  318D  2526  3180   	fcall	clear_ram0
  1400     006F                     end_of_initialization:	
  1401                           ;End of C runtime variable initialization code
  1402                           
  1403     006F                     __end_of__initialization:
  1404     006F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1405     0070  0020               	movlb	0
  1406     0071  3185  2D53         	ljmp	_main	;jump to C main() function
  1407                           
  1408                           	psect	bssCOMMON
  1409     007C                     __pbssCOMMON:
  1410     007C                     _head:
  1411     007C                     	ds	2
  1412                           
  1413                           	psect	bssBANK0
  1414     0063                     __pbssBANK0:
  1415     0063                     _flags:
  1416     0063                     	ds	1
  1417     0064                     _queue_empty:
  1418     0064                     	ds	1
  1419                           
  1420                           	psect	dataBANK0
  1421     0065                     __pdataBANK0:
  1422     0065                     _tail:
  1423     0065                     	ds	2
  1424                           
  1425                           	psect	bssBANK1
  1426     00D3                     __pbssBANK1:
  1427     00D3                     _width:
  1428     00D3                     	ds	2
  1429     00D5                     _prec:
  1430     00D5                     	ds	2
  1431     00D7                     _bytes_popped:
  1432     00D7                     	ds	2
  1433     00D9                     _bytes_pushed:
  1434     00D9                     	ds	2
  1435     00DB                     _uart_ready:
  1436     00DB                     	ds	1
  1437     00DC                     _cmd_active:
  1438     00DC                     	ds	1
  1439                           
  1440                           	psect	bssBANK2
  1441     0120                     __pbssBANK2:
  1442     0120                     _dbuf:
  1443     0120                     	ds	32
  1444                           
  1445                           	psect	clrtext
  1446     0D26                     clear_ram0:	
  1447                           ;	Called with FSR0 containing the base address, and
  1448                           ;	btemp/btemp+1 has the size to clear
  1449                           
  1450     0D26  0064               	clrwdt	;clear the watchdog before getting into this loop
  1451     0D27                     clrloop0:
  1452     0D27  0180               	clrf	0	;clear RAM location pointed to by FSR
  1453     0D28  3101               	addfsr 0,1
  1454     0D29  3001               	movlw	1
  1455     0D2A  02FE               	subwf	btemp,f
  1456     0D2B  3000               	movlw	0
  1457     0D2C  3BFF               	subwfb	btemp+1,f
  1458     0D2D  087F               	movf	btemp+1,w
  1459     0D2E  047E               	iorwf	btemp,w
  1460     0D2F  1D03               	skipz
  1461     0D30  2D27               	goto	clrloop0	;have we reached the end yet?
  1462     0D31  3400               	retlw	0	;all done for this memory range, return
  1463                           
  1464                           	psect	cstackBANK1
  1465     00A0                     __pcstackBANK1:
  1466     00A0                     sprintf@ap:
  1467                           
  1468                           ; 1 bytes @ 0x0
  1469     00A0                     	ds	1
  1470     00A1                     sprintf@s:
  1471                           
  1472                           ; 1 bytes @ 0x1
  1473     00A1                     	ds	1
  1474     00A2                     sprintf@f:
  1475                           
  1476                           ; 11 bytes @ 0x2
  1477     00A2                     	ds	11
  1478     00AD                     do_write@s:
  1479     00AD                     do_init@s:	
  1480                           ; 2 bytes @ 0xD
  1481                           
  1482     00AD                     do_read@ads:	
  1483                           ; 8 bytes @ 0xD
  1484                           
  1485     00AD                     do_blank@ads:	
  1486                           ; 16 bytes @ 0xD
  1487                           
  1488                           
  1489                           ; 32 bytes @ 0xD
  1490     00AD                     	ds	2
  1491     00AF                     do_write@hi:
  1492                           
  1493                           ; 1 bytes @ 0xF
  1494     00AF                     	ds	1
  1495     00B0                     do_write@lo:
  1496                           
  1497                           ; 1 bytes @ 0x10
  1498     00B0                     	ds	1
  1499     00B1                     do_write@data:
  1500                           
  1501                           ; 1 bytes @ 0x11
  1502     00B1                     	ds	1
  1503     00B2                     do_write@ads:
  1504                           
  1505                           ; 2 bytes @ 0x12
  1506     00B2                     	ds	2
  1507     00B4                     do_write@c:
  1508                           
  1509                           ; 1 bytes @ 0x14
  1510     00B4                     	ds	1
  1511     00B5                     do_init@rate:
  1512     00B5                     do_write@addr:	
  1513                           ; 2 bytes @ 0x15
  1514                           
  1515                           
  1516                           ; 2 bytes @ 0x15
  1517     00B5                     	ds	8
  1518     00BD                     do_read@s:
  1519                           
  1520                           ; 2 bytes @ 0x1D
  1521     00BD                     	ds	2
  1522     00BF                     do_read@data:
  1523                           
  1524                           ; 1 bytes @ 0x1F
  1525     00BF                     	ds	1
  1526     00C0                     do_read@col:
  1527                           
  1528                           ; 1 bytes @ 0x20
  1529     00C0                     	ds	1
  1530     00C1                     do_read@addr:
  1531                           
  1532                           ; 2 bytes @ 0x21
  1533     00C1                     	ds	12
  1534     00CD                     do_blank@ok:
  1535                           
  1536                           ; 1 bytes @ 0x2D
  1537     00CD                     	ds	1
  1538     00CE                     do_blank@data:
  1539                           
  1540                           ; 1 bytes @ 0x2E
  1541     00CE                     	ds	1
  1542     00CF                     do_blank@s:
  1543                           
  1544                           ; 2 bytes @ 0x2F
  1545     00CF                     	ds	2
  1546     00D1                     do_blank@addr:
  1547                           
  1548                           ; 2 bytes @ 0x31
  1549     00D1                     	ds	2
  1550                           
  1551                           	psect	cstackCOMMON
  1552     0070                     __pcstackCOMMON:
  1553     0070                     ?_uart_getc:
  1554     0070                     ??_uart_getc:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557     0070                     ?_uart_putc:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560     0070                     ?_putch:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563     0070                     ?_setCTS:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566     0070                     ??_setCTS:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569     0070                     ?_clear:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572     0070                     ?_empty:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575     0070                     ?_push:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578     0070                     ?_pop:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581     0070                     ?_first:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584     0070                     ??_first:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587     0070                     ?_charToHexDigit:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590     0070                     ?_ports_init:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593     0070                     ?_isr:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596     0070                     ?_read_port:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599     0070                     ?_do_init:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602     0070                     ?_do_blank:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605     0070                     ?_do_read:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608     0070                     ?_write_port:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611     0070                     ?_do_write:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614     0070                     ?_main:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617     0070                     ?i1_addone:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620     0070                     setCTS@b:	
  1621                           ; 2 bytes @ 0x0
  1622                           
  1623     0070                     uart_getc@c:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626     0070                     putch@c:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629     0070                     i1addone@i:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632                           
  1633                           ; 2 bytes @ 0x0
  1634     0070                     	ds	1
  1635     0071                     uart_getc@ok:
  1636                           
  1637                           ; 1 bytes @ 0x1
  1638     0071                     	ds	1
  1639     0072                     ??_push:
  1640     0072                     ??i1_addone:	
  1641                           ; 1 bytes @ 0x2
  1642                           
  1643     0072                     ?_size:	
  1644                           ; 1 bytes @ 0x2
  1645                           
  1646                           
  1647                           ; 2 bytes @ 0x2
  1648     0072                     	ds	2
  1649     0074                     ??_size:
  1650                           
  1651                           ; 1 bytes @ 0x4
  1652     0074                     	ds	1
  1653     0075                     size@s:
  1654                           
  1655                           ; 2 bytes @ 0x5
  1656     0075                     	ds	1
  1657     0076                     push@s:
  1658                           
  1659                           ; 2 bytes @ 0x6
  1660     0076                     	ds	2
  1661     0078                     _push$1489:
  1662                           
  1663                           ; 2 bytes @ 0x8
  1664     0078                     	ds	2
  1665     007A                     push@c:
  1666                           
  1667                           ; 1 bytes @ 0xA
  1668     007A                     	ds	1
  1669     007B                     ??_isr:
  1670                           
  1671                           ; 1 bytes @ 0xB
  1672     007B                     	ds	1
  1673                           
  1674                           	psect	cstackBANK0
  1675     0020                     __pcstackBANK0:
  1676     0020                     isr@n:
  1677                           
  1678                           ; 2 bytes @ 0x0
  1679     0020                     	ds	2
  1680     0022                     isr@ok:
  1681                           
  1682                           ; 1 bytes @ 0x2
  1683     0022                     	ds	1
  1684     0023                     isr@c:
  1685                           
  1686                           ; 1 bytes @ 0x3
  1687     0023                     	ds	1
  1688     0024                     ?_uart_puts:
  1689     0024                     ??_uart_putc:	
  1690                           ; 1 bytes @ 0x4
  1691                           
  1692     0024                     ??_putch:	
  1693                           ; 1 bytes @ 0x4
  1694                           
  1695     0024                     ??_charToHexDigit:	
  1696                           ; 1 bytes @ 0x4
  1697                           
  1698     0024                     ??_ports_init:	
  1699                           ; 1 bytes @ 0x4
  1700                           
  1701     0024                     ?_setup_address:	
  1702                           ; 1 bytes @ 0x4
  1703                           
  1704     0024                     ??_read_port:	
  1705                           ; 1 bytes @ 0x4
  1706                           
  1707     0024                     ??_write_port:	
  1708                           ; 1 bytes @ 0x4
  1709                           
  1710     0024                     ?_memset:	
  1711                           ; 1 bytes @ 0x4
  1712                           
  1713     0024                     ?_uart_init_brg:	
  1714                           ; 2 bytes @ 0x4
  1715                           
  1716     0024                     ?_fputc:	
  1717                           ; 2 bytes @ 0x4
  1718                           
  1719     0024                     ?_addone:	
  1720                           ; 2 bytes @ 0x4
  1721                           
  1722     0024                     ?___wmul:	
  1723                           ; 2 bytes @ 0x4
  1724                           
  1725     0024                     ?___awdiv:	
  1726                           ; 2 bytes @ 0x4
  1727                           
  1728     0024                     ?___awmod:	
  1729                           ; 2 bytes @ 0x4
  1730                           
  1731     0024                     ?___lmul:	
  1732                           ; 2 bytes @ 0x4
  1733                           
  1734     0024                     charToHexDigit@c:	
  1735                           ; 4 bytes @ 0x4
  1736                           
  1737     0024                     read_port@data:	
  1738                           ; 1 bytes @ 0x4
  1739                           
  1740     0024                     uart_putc@c:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743     0024                     addone@i:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746     0024                     setup_address@addr:	
  1747                           ; 2 bytes @ 0x4
  1748                           
  1749     0024                     uart_puts@s:	
  1750                           ; 2 bytes @ 0x4
  1751                           
  1752     0024                     ___wmul@multiplier:	
  1753                           ; 2 bytes @ 0x4
  1754                           
  1755     0024                     ___awdiv@divisor:	
  1756                           ; 2 bytes @ 0x4
  1757                           
  1758     0024                     ___awmod@divisor:	
  1759                           ; 2 bytes @ 0x4
  1760                           
  1761     0024                     memset@dest:	
  1762                           ; 2 bytes @ 0x4
  1763                           
  1764     0024                     fputc@c:	
  1765                           ; 2 bytes @ 0x4
  1766                           
  1767     0024                     ___lmul@multiplier:	
  1768                           ; 2 bytes @ 0x4
  1769                           
  1770                           
  1771                           ; 4 bytes @ 0x4
  1772     0024                     	ds	1
  1773     0025                     write_port@data:
  1774                           
  1775                           ; 1 bytes @ 0x5
  1776     0025                     	ds	1
  1777     0026                     ??_uart_init_brg:
  1778     0026                     ??_uart_puts:	
  1779                           ; 1 bytes @ 0x6
  1780                           
  1781     0026                     ??_addone:	
  1782                           ; 1 bytes @ 0x6
  1783                           
  1784     0026                     ??_empty:	
  1785                           ; 1 bytes @ 0x6
  1786                           
  1787     0026                     ??_pop:	
  1788                           ; 1 bytes @ 0x6
  1789                           
  1790     0026                     ??_setup_address:	
  1791                           ; 1 bytes @ 0x6
  1792                           
  1793     0026                     setup_address@hi:	
  1794                           ; 1 bytes @ 0x6
  1795                           
  1796     0026                     fputc@fp:	
  1797                           ; 1 bytes @ 0x6
  1798                           
  1799     0026                     ___wmul@multiplicand:	
  1800                           ; 1 bytes @ 0x6
  1801                           
  1802     0026                     ___awdiv@dividend:	
  1803                           ; 2 bytes @ 0x6
  1804                           
  1805     0026                     ___awmod@dividend:	
  1806                           ; 2 bytes @ 0x6
  1807                           
  1808     0026                     memset@c:	
  1809                           ; 2 bytes @ 0x6
  1810                           
  1811                           
  1812                           ; 2 bytes @ 0x6
  1813     0026                     	ds	1
  1814     0027                     ??_fputc:
  1815     0027                     uart_puts@p:	
  1816                           ; 1 bytes @ 0x7
  1817                           
  1818                           
  1819                           ; 2 bytes @ 0x7
  1820     0027                     	ds	1
  1821     0028                     ??___wmul:
  1822     0028                     ??___awdiv:	
  1823                           ; 1 bytes @ 0x8
  1824                           
  1825     0028                     ??___awmod:	
  1826                           ; 1 bytes @ 0x8
  1827                           
  1828     0028                     pop@c:	
  1829                           ; 1 bytes @ 0x8
  1830                           
  1831     0028                     ___wmul@product:	
  1832                           ; 1 bytes @ 0x8
  1833                           
  1834     0028                     memset@n:	
  1835                           ; 2 bytes @ 0x8
  1836                           
  1837     0028                     ___lmul@multiplicand:	
  1838                           ; 2 bytes @ 0x8
  1839                           
  1840                           
  1841                           ; 4 bytes @ 0x8
  1842     0028                     	ds	1
  1843     0029                     ___awdiv@counter:
  1844     0029                     ___awmod@counter:	
  1845                           ; 1 bytes @ 0x9
  1846                           
  1847                           
  1848                           ; 1 bytes @ 0x9
  1849     0029                     	ds	1
  1850     002A                     ??_memset:
  1851     002A                     ?_read_prec_or_width:	
  1852                           ; 1 bytes @ 0xA
  1853                           
  1854     002A                     ___awdiv@sign:	
  1855                           ; 2 bytes @ 0xA
  1856                           
  1857     002A                     ___awmod@sign:	
  1858                           ; 1 bytes @ 0xA
  1859                           
  1860     002A                     read_prec_or_width@ap:	
  1861                           ; 1 bytes @ 0xA
  1862                           
  1863     002A                     memset@p:	
  1864                           ; 1 bytes @ 0xA
  1865                           
  1866                           
  1867                           ; 2 bytes @ 0xA
  1868     002A                     	ds	1
  1869     002B                     ?_abs:
  1870     002B                     uart_init_brg@rate:	
  1871                           ; 2 bytes @ 0xB
  1872                           
  1873     002B                     ___awdiv@quotient:	
  1874                           ; 2 bytes @ 0xB
  1875                           
  1876     002B                     abs@a:	
  1877                           ; 2 bytes @ 0xB
  1878                           
  1879                           
  1880                           ; 2 bytes @ 0xB
  1881     002B                     	ds	1
  1882     002C                     ??_clear:
  1883     002C                     ??___lmul:	
  1884                           ; 1 bytes @ 0xC
  1885                           
  1886     002C                     ??_read_prec_or_width:	
  1887                           ; 1 bytes @ 0xC
  1888                           
  1889     002C                     ?_fputs:	
  1890                           ; 1 bytes @ 0xC
  1891                           
  1892     002C                     fputs@fp:	
  1893                           ; 2 bytes @ 0xC
  1894                           
  1895     002C                     ___lmul@product:	
  1896                           ; 1 bytes @ 0xC
  1897                           
  1898                           
  1899                           ; 4 bytes @ 0xC
  1900     002C                     	ds	1
  1901     002D                     ??_fputs:
  1902     002D                     ??_abs:	
  1903                           ; 1 bytes @ 0xD
  1904                           
  1905                           
  1906                           ; 1 bytes @ 0xD
  1907     002D                     	ds	2
  1908     002F                     read_prec_or_width@c:
  1909     002F                     fputs@c:	
  1910                           ; 1 bytes @ 0xF
  1911                           
  1912                           
  1913                           ; 1 bytes @ 0xF
  1914     002F                     	ds	1
  1915     0030                     ?___lldiv:
  1916     0030                     read_prec_or_width@n:	
  1917                           ; 4 bytes @ 0x10
  1918                           
  1919     0030                     fputs@i:	
  1920                           ; 2 bytes @ 0x10
  1921                           
  1922     0030                     ___lldiv@divisor:	
  1923                           ; 2 bytes @ 0x10
  1924                           
  1925                           
  1926                           ; 4 bytes @ 0x10
  1927     0030                     	ds	2
  1928     0032                     read_prec_or_width@fmt:
  1929     0032                     fputs@s:	
  1930                           ; 1 bytes @ 0x12
  1931                           
  1932                           
  1933                           ; 1 bytes @ 0x12
  1934     0032                     	ds	1
  1935     0033                     ?_pad:
  1936     0033                     pad@buf:	
  1937                           ; 1 bytes @ 0x13
  1938                           
  1939                           
  1940                           ; 1 bytes @ 0x13
  1941     0033                     	ds	1
  1942     0034                     pad@p:
  1943     0034                     ___lldiv@dividend:	
  1944                           ; 2 bytes @ 0x14
  1945                           
  1946                           
  1947                           ; 4 bytes @ 0x14
  1948     0034                     	ds	2
  1949     0036                     ??_pad:
  1950                           
  1951                           ; 1 bytes @ 0x16
  1952     0036                     	ds	1
  1953     0037                     pad@i:
  1954                           
  1955                           ; 2 bytes @ 0x17
  1956     0037                     	ds	1
  1957     0038                     ??___lldiv:
  1958                           
  1959                           ; 1 bytes @ 0x18
  1960     0038                     	ds	1
  1961     0039                     pad@fp:
  1962     0039                     ___lldiv@quotient:	
  1963                           ; 1 bytes @ 0x19
  1964                           
  1965                           
  1966                           ; 4 bytes @ 0x19
  1967     0039                     	ds	1
  1968     003A                     ?_dtoa:
  1969     003A                     ?_xtoa:	
  1970                           ; 1 bytes @ 0x1A
  1971                           
  1972     003A                     dtoa@d:	
  1973                           ; 1 bytes @ 0x1A
  1974                           
  1975     003A                     xtoa@d:	
  1976                           ; 2 bytes @ 0x1A
  1977                           
  1978                           
  1979                           ; 2 bytes @ 0x1A
  1980     003A                     	ds	2
  1981     003C                     ??_dtoa:
  1982     003C                     ??_xtoa:	
  1983                           ; 1 bytes @ 0x1C
  1984                           
  1985                           
  1986                           ; 1 bytes @ 0x1C
  1987     003C                     	ds	1
  1988     003D                     ___lldiv@counter:
  1989     003D                     dtoa@fp:	
  1990                           ; 1 bytes @ 0x1D
  1991                           
  1992     003D                     xtoa@fp:	
  1993                           ; 1 bytes @ 0x1D
  1994                           
  1995                           
  1996                           ; 1 bytes @ 0x1D
  1997     003D                     	ds	1
  1998     003E                     ?_uart_init:
  1999     003E                     xtoa@p:	
  2000                           ; 1 bytes @ 0x1E
  2001                           
  2002     003E                     _dtoa$1197:	
  2003                           ; 1 bytes @ 0x1E
  2004                           
  2005     003E                     uart_init@baud_rate:	
  2006                           ; 2 bytes @ 0x1E
  2007                           
  2008                           
  2009                           ; 4 bytes @ 0x1E
  2010     003E                     	ds	1
  2011     003F                     xtoa@w:
  2012                           
  2013                           ; 2 bytes @ 0x1F
  2014     003F                     	ds	1
  2015     0040                     dtoa@p:
  2016                           
  2017                           ; 1 bytes @ 0x20
  2018     0040                     	ds	1
  2019     0041                     xtoa@c:
  2020     0041                     dtoa@w:	
  2021                           ; 1 bytes @ 0x21
  2022                           
  2023                           
  2024                           ; 2 bytes @ 0x21
  2025     0041                     	ds	1
  2026     0042                     ??_uart_init:
  2027     0042                     xtoa@i:	
  2028                           ; 1 bytes @ 0x22
  2029                           
  2030                           
  2031                           ; 2 bytes @ 0x22
  2032     0042                     	ds	1
  2033     0043                     dtoa@s:
  2034                           
  2035                           ; 1 bytes @ 0x23
  2036     0043                     	ds	1
  2037     0044                     dtoa@i:
  2038                           
  2039                           ; 2 bytes @ 0x24
  2040     0044                     	ds	2
  2041     0046                     ?_vfpfcnvrt:
  2042     0046                     vfpfcnvrt@fmt:	
  2043                           ; 1 bytes @ 0x26
  2044                           
  2045     0046                     uart_init@n:	
  2046                           ; 1 bytes @ 0x26
  2047                           
  2048                           
  2049                           ; 4 bytes @ 0x26
  2050     0046                     	ds	1
  2051     0047                     vfpfcnvrt@ap:
  2052                           
  2053                           ; 1 bytes @ 0x27
  2054     0047                     	ds	1
  2055     0048                     ??_vfpfcnvrt:
  2056                           
  2057                           ; 1 bytes @ 0x28
  2058     0048                     	ds	2
  2059     004A                     uart_init@factor:
  2060                           
  2061                           ; 1 bytes @ 0x2A
  2062     004A                     	ds	2
  2063     004C                     vfpfcnvrt@done:
  2064                           
  2065                           ; 1 bytes @ 0x2C
  2066     004C                     	ds	1
  2067     004D                     vfpfcnvrt@convarg:
  2068                           
  2069                           ; 4 bytes @ 0x2D
  2070     004D                     	ds	4
  2071     0051                     vfpfcnvrt@fp:
  2072                           
  2073                           ; 1 bytes @ 0x31
  2074     0051                     	ds	1
  2075     0052                     vfpfcnvrt@cp:
  2076                           
  2077                           ; 2 bytes @ 0x32
  2078     0052                     	ds	2
  2079     0054                     ?_vfprintf:
  2080     0054                     vfprintf@fmt:	
  2081                           ; 2 bytes @ 0x34
  2082                           
  2083                           
  2084                           ; 2 bytes @ 0x34
  2085     0054                     	ds	2
  2086     0056                     vfprintf@ap:
  2087                           
  2088                           ; 1 bytes @ 0x36
  2089     0056                     	ds	1
  2090     0057                     ??_vfprintf:
  2091                           
  2092                           ; 1 bytes @ 0x37
  2093     0057                     	ds	1
  2094     0058                     vfprintf@fp:
  2095                           
  2096                           ; 1 bytes @ 0x38
  2097     0058                     	ds	1
  2098     0059                     vfprintf@cfmt:
  2099                           
  2100                           ; 2 bytes @ 0x39
  2101     0059                     	ds	2
  2102     005B                     ?_sprintf:
  2103     005B                     sprintf@fmt:	
  2104                           ; 2 bytes @ 0x3B
  2105                           
  2106                           
  2107                           ; 2 bytes @ 0x3B
  2108     005B                     	ds	4
  2109     005F                     ??_sprintf:
  2110                           
  2111                           ; 1 bytes @ 0x3F
  2112     005F                     	ds	1
  2113     0060                     ??_do_init:
  2114     0060                     ??_do_blank:	
  2115                           ; 1 bytes @ 0x40
  2116                           
  2117     0060                     ??_do_read:	
  2118                           ; 1 bytes @ 0x40
  2119                           
  2120     0060                     ??_do_write:	
  2121                           ; 1 bytes @ 0x40
  2122                           
  2123                           
  2124                           ; 1 bytes @ 0x40
  2125     0060                     	ds	2
  2126     0062                     ??_main:
  2127     0062                     main@cmd:	
  2128                           ; 1 bytes @ 0x42
  2129                           
  2130                           
  2131                           ; 1 bytes @ 0x42
  2132     0062                     	ds	1
  2133                           
  2134                           	psect	maintext
  2135     0553                     __pmaintext:	
  2136 ;;
  2137 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2138 ;;
  2139 ;; *************** function _main *****************
  2140 ;; Defined at:
  2141 ;;		line 497 in file "main.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  cmd             1   66[BANK0 ] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : B1F/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2158 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2159 ;;Total ram usage:        1 bytes
  2160 ;; Hardware stack levels required when called: 12
  2161 ;; This function calls:
  2162 ;;		_clear
  2163 ;;		_do_blank
  2164 ;;		_do_init
  2165 ;;		_do_read
  2166 ;;		_do_write
  2167 ;;		_pop
  2168 ;;		_ports_init
  2169 ;;		_uart_init
  2170 ;;		_uart_puts
  2171 ;; This function is called by:
  2172 ;;		Startup code after reset
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176     0553                     _main:	
  2177                           ;psect for function _main
  2178                           
  2179     0553                     l3302:	
  2180                           ;incstack = 0
  2181                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2182                           
  2183                           
  2184                           ;main.c: 500:     uart_init(0);
  2185     0553  3000               	movlw	0
  2186     0554  0020               	movlb	0	; select bank0
  2187     0555  00C1               	movwf	uart_init@baud_rate+3
  2188     0556  3000               	movlw	0
  2189     0557  00C0               	movwf	uart_init@baud_rate+2
  2190     0558  3000               	movlw	0
  2191     0559  00BF               	movwf	uart_init@baud_rate+1
  2192     055A  3000               	movlw	0
  2193     055B  00BE               	movwf	uart_init@baud_rate
  2194     055C  3182  2223  3185   	fcall	_uart_init
  2195                           
  2196                           ;main.c: 503:     ports_init();
  2197     055F  318E  26E4  3185   	fcall	_ports_init
  2198     0562                     l3304:
  2199                           
  2200                           ;main.c: 506:     do_init();
  2201     0562  318E  26BF  3185   	fcall	_do_init
  2202     0565                     l3306:
  2203                           
  2204                           ;main.c: 509:     PIE1bits.RCIE=1;
  2205     0565  0021               	movlb	1	; select bank1
  2206     0566  1691               	bsf	17,5	;volatile
  2207     0567                     l3308:
  2208                           
  2209                           ;main.c: 510:     INTCONbits.GIE = 1;
  2210     0567  178B               	bsf	11,7	;volatile
  2211     0568                     l3310:
  2212                           
  2213                           ;main.c: 514:         if (cmd_active) {
  2214     0568  0021               	movlb	1	; select bank1
  2215     0569  085C               	movf	_cmd_active^(0+128),w
  2216     056A  1903               	btfsc	3,2
  2217     056B  2D6D               	goto	u3221
  2218     056C  2D6E               	goto	u3220
  2219     056D                     u3221:
  2220     056D  2DB7               	goto	l163
  2221     056E                     u3220:
  2222     056E                     l3312:
  2223                           
  2224                           ;main.c: 516:             PORTCbits.RC3 = 0;
  2225     056E  0020               	movlb	0	; select bank0
  2226     056F  118E               	bcf	14,3	;volatile
  2227                           
  2228                           ;main.c: 517:             PORTCbits.RC4 = 1;
  2229     0570  160E               	bsf	14,4	;volatile
  2230     0571                     l3314:
  2231                           
  2232                           ;main.c: 520:             pop();
  2233     0571  318F  27B3  3185   	fcall	_pop
  2234                           
  2235                           ;main.c: 522:             char cmd = pop();
  2236     0574  318F  27B3  3185   	fcall	_pop
  2237     0577  0020               	movlb	0	; select bank0
  2238     0578  00E2               	movwf	main@cmd
  2239     0579                     l3316:
  2240                           
  2241                           ;main.c: 525:             if (cmd == '1') {
  2242     0579  3031               	movlw	49
  2243     057A  0662               	xorwf	main@cmd,w
  2244     057B  1D03               	btfss	3,2
  2245     057C  2D7E               	goto	u3231
  2246     057D  2D7F               	goto	u3230
  2247     057E                     u3231:
  2248     057E  2D83               	goto	l3320
  2249     057F                     u3230:
  2250     057F                     l3318:
  2251                           
  2252                           ;main.c: 526:                 do_read();
  2253     057F  3182  22D0  3185   	fcall	_do_read
  2254                           
  2255                           ;main.c: 527:             }
  2256     0582  2DB3               	goto	l3336
  2257     0583                     l3320:
  2258     0583  3032               	movlw	50
  2259     0584  0662               	xorwf	main@cmd,w
  2260     0585  1D03               	btfss	3,2
  2261     0586  2D88               	goto	u3241
  2262     0587  2D89               	goto	u3240
  2263     0588                     u3241:
  2264     0588  2D8D               	goto	l3324
  2265     0589                     u3240:
  2266     0589                     l3322:
  2267                           
  2268                           ;main.c: 529:                 do_write();
  2269     0589  3184  24DE  3185   	fcall	_do_write
  2270                           
  2271                           ;main.c: 530:             }
  2272     058C  2DB3               	goto	l3336
  2273     058D                     l3324:
  2274     058D  3033               	movlw	51
  2275     058E  0662               	xorwf	main@cmd,w
  2276     058F  1D03               	btfss	3,2
  2277     0590  2D92               	goto	u3251
  2278     0591  2D93               	goto	u3250
  2279     0592                     u3251:
  2280     0592  2D97               	goto	l3328
  2281     0593                     u3250:
  2282     0593                     l3326:
  2283                           
  2284                           ;main.c: 532:                 do_blank();
  2285     0593  3183  235C  3185   	fcall	_do_blank
  2286                           
  2287                           ;main.c: 533:             }
  2288     0596  2DB3               	goto	l3336
  2289     0597                     l3328:
  2290     0597  3055               	movlw	85
  2291     0598  0662               	xorwf	main@cmd,w
  2292     0599  1D03               	btfss	3,2
  2293     059A  2D9C               	goto	u3261
  2294     059B  2D9D               	goto	u3260
  2295     059C                     u3261:
  2296     059C  2DA5               	goto	l3332
  2297     059D                     u3260:
  2298     059D                     l3330:
  2299                           
  2300                           ;main.c: 535:                 uart_puts("Already init");
  2301     059D  3049               	movlw	low (STR_12| (0+32768))
  2302     059E  00A4               	movwf	uart_puts@s
  2303     059F  3090               	movlw	high (STR_12| (0+32768))
  2304     05A0  00A5               	movwf	uart_puts@s+1
  2305     05A1  3187  27D0  3185   	fcall	_uart_puts
  2306                           
  2307                           ;main.c: 536:             }
  2308     05A4  2DB3               	goto	l3336
  2309     05A5                     l3332:
  2310     05A5  3034               	movlw	52
  2311     05A6  0662               	xorwf	main@cmd,w
  2312     05A7  1D03               	btfss	3,2
  2313     05A8  2DAA               	goto	u3271
  2314     05A9  2DAB               	goto	u3270
  2315     05AA                     u3271:
  2316     05AA  2DB3               	goto	l167
  2317     05AB                     u3270:
  2318     05AB                     l3334:
  2319                           
  2320                           ;main.c: 538:                 uart_puts("2708");
  2321     05AB  306F               	movlw	low (STR_13| (0+32768))
  2322     05AC  00A4               	movwf	uart_puts@s
  2323     05AD  3090               	movlw	high (STR_13| (0+32768))
  2324     05AE  00A5               	movwf	uart_puts@s+1
  2325     05AF  3187  27D0  3185   	fcall	_uart_puts
  2326     05B2  2DB3               	goto	l3336
  2327     05B3                     l167:
  2328     05B3                     l3336:
  2329                           
  2330                           ;main.c: 542:             clear();
  2331     05B3  318D  25CC  3185   	fcall	_clear
  2332                           
  2333                           ;main.c: 543:         }
  2334     05B6  2DBA               	goto	l3338
  2335     05B7                     l163:	
  2336                           ;main.c: 544:         else {
  2337                           
  2338                           
  2339                           ;main.c: 546:             PORTCbits.RC3 = 1;
  2340     05B7  0020               	movlb	0	; select bank0
  2341     05B8  158E               	bsf	14,3	;volatile
  2342                           
  2343                           ;main.c: 547:             PORTCbits.RC4 = 0;
  2344     05B9  120E               	bcf	14,4	;volatile
  2345     05BA                     l3338:
  2346                           
  2347                           ;main.c: 551:         _delay((unsigned long)((10)*(20000000/4000000.0)));
  2348     05BA  3010               	movlw	16
  2349     05BB                     u3287:
  2350     05BB  0B89               	decfsz	9,f
  2351     05BC  2DBB               	goto	u3287
  2352     05BD  3200               	nop2
  2353     05BE  2D68               	goto	l3310
  2354     05BF  3180  2840         	ljmp	start
  2355     05C1                     __end_of_main:
  2356                           
  2357                           	psect	text1
  2358     0223                     __ptext1:	
  2359 ;; *************** function _uart_init *****************
  2360 ;; Defined at:
  2361 ;;		line 28 in file "uart.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  baud_rate       4   30[BANK0 ] const unsigned long 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  n               4   38[BANK0 ] unsigned long 
  2366 ;;  factor          1   42[BANK0 ] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, pclath, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2376 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2377 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2379 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2380 ;;Total ram usage:       13 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 4
  2383 ;; This function calls:
  2384 ;;		___lldiv
  2385 ;;		___lmul
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391     0223                     _uart_init:	
  2392                           ;psect for function _uart_init
  2393                           
  2394     0223                     l2624:	
  2395                           ;incstack = 0
  2396                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
  2397                           
  2398                           
  2399                           ;uart.c: 28: void uart_init(const uint32_t baud_rate);uart.c: 29: {;uart.c: 31:     INTC
      +                          ONbits.GIE = 0;
  2400     0223  138B               	bcf	11,7	;volatile
  2401                           
  2402                           ;uart.c: 33:     PIE1bits.TXIE = 1;
  2403     0224  0021               	movlb	1	; select bank1
  2404     0225  1611               	bsf	17,4	;volatile
  2405                           
  2406                           ;uart.c: 34:     PIE1bits.RCIE = 1;
  2407     0226  1691               	bsf	17,5	;volatile
  2408                           
  2409                           ;uart.c: 37:     TRISCbits.TRISC6=1;
  2410     0227  170E               	bsf	14,6	;volatile
  2411                           
  2412                           ;uart.c: 38:     TRISCbits.TRISC7=1;
  2413     0228  178E               	bsf	14,7	;volatile
  2414                           
  2415                           ;uart.c: 40:     BAUDCONbits.BRG16 = 1;
  2416     0229  0023               	movlb	3	; select bank3
  2417     022A  159F               	bsf	31,3	;volatile
  2418                           
  2419                           ;uart.c: 41:     BAUDCONbits.WUE = 0;
  2420     022B  109F               	bcf	31,1	;volatile
  2421                           
  2422                           ;uart.c: 43:     RCSTAbits.CREN = 1;
  2423     022C  161D               	bsf	29,4	;volatile
  2424                           
  2425                           ;uart.c: 44:     RCSTAbits.SPEN = 1;
  2426     022D  179D               	bsf	29,7	;volatile
  2427                           
  2428                           ;uart.c: 46:     TXSTAbits.SYNC = 0;
  2429     022E  121E               	bcf	30,4	;volatile
  2430                           
  2431                           ;uart.c: 47:     TXSTAbits.BRGH = 1;
  2432     022F  151E               	bsf	30,2	;volatile
  2433                           
  2434                           ;uart.c: 48:     TXSTAbits.TXEN = 1;
  2435     0230  169E               	bsf	30,5	;volatile
  2436     0231                     l2626:
  2437                           
  2438                           ;uart.c: 51:     if (baud_rate != 0) {
  2439     0231  0020               	movlb	0	; select bank0
  2440     0232  0841               	movf	uart_init@baud_rate+3,w
  2441     0233  0440               	iorwf	uart_init@baud_rate+2,w
  2442     0234  043F               	iorwf	uart_init@baud_rate+1,w
  2443     0235  043E               	iorwf	uart_init@baud_rate,w
  2444     0236  1903               	skipnz
  2445     0237  2A39               	goto	u2231
  2446     0238  2A3A               	goto	u2230
  2447     0239                     u2231:
  2448     0239  2ACA               	goto	l2656
  2449     023A                     u2230:
  2450     023A                     l2628:
  2451                           
  2452                           ;uart.c: 53:         uint8_t factor;;uart.c: 54:         if (BAUDCONbits.BRG16 && TXSTAb
      +                          its.BRGH)
  2453     023A  0023               	movlb	3	; select bank3
  2454     023B  1D9F               	btfss	31,3	;volatile
  2455     023C  2A3E               	goto	u2241
  2456     023D  2A3F               	goto	u2240
  2457     023E                     u2241:
  2458     023E  2A47               	goto	l210
  2459     023F                     u2240:
  2460     023F                     l2630:
  2461     023F  1D1E               	btfss	30,2	;volatile
  2462     0240  2A42               	goto	u2251
  2463     0241  2A43               	goto	u2250
  2464     0242                     u2251:
  2465     0242  2A47               	goto	l210
  2466     0243                     u2250:
  2467     0243                     l2632:
  2468                           
  2469                           ;uart.c: 55:             factor = 4;
  2470     0243  3004               	movlw	4
  2471     0244  0020               	movlb	0	; select bank0
  2472     0245  00CA               	movwf	uart_init@factor
  2473     0246  2A68               	goto	l2646
  2474     0247                     l210:	
  2475                           ;uart.c: 56:         else if (BAUDCONbits.BRG16 && !TXSTAbits.BRGH)
  2476                           
  2477     0247  1D9F               	btfss	31,3	;volatile
  2478     0248  2A4A               	goto	u2261
  2479     0249  2A4B               	goto	u2260
  2480     024A                     u2261:
  2481     024A  2A53               	goto	l212
  2482     024B                     u2260:
  2483     024B                     l2634:
  2484     024B  191E               	btfsc	30,2	;volatile
  2485     024C  2A4E               	goto	u2271
  2486     024D  2A4F               	goto	u2270
  2487     024E                     u2271:
  2488     024E  2A53               	goto	l212
  2489     024F                     u2270:
  2490     024F                     l2636:
  2491                           
  2492                           ;uart.c: 57:             factor = 16;
  2493     024F  3010               	movlw	16
  2494     0250  0020               	movlb	0	; select bank0
  2495     0251  00CA               	movwf	uart_init@factor
  2496     0252  2A68               	goto	l2646
  2497     0253                     l212:	
  2498                           ;uart.c: 58:         else if (!BAUDCONbits.BRG16 && TXSTAbits.BRGH)
  2499                           
  2500     0253  199F               	btfsc	31,3	;volatile
  2501     0254  2A56               	goto	u2281
  2502     0255  2A57               	goto	u2280
  2503     0256                     u2281:
  2504     0256  2A5C               	goto	l214
  2505     0257                     u2280:
  2506     0257                     l2638:
  2507     0257  1D1E               	btfss	30,2	;volatile
  2508     0258  2A5A               	goto	u2291
  2509     0259  2A5B               	goto	u2290
  2510     025A                     u2291:
  2511     025A  2A5C               	goto	l214
  2512     025B                     u2290:
  2513     025B  2A4F               	goto	l2636
  2514     025C                     l214:	
  2515                           ;uart.c: 60:         else if (!BAUDCONbits.BRG16 && !TXSTAbits.BRGH)
  2516                           
  2517     025C  199F               	btfsc	31,3	;volatile
  2518     025D  2A5F               	goto	u2301
  2519     025E  2A60               	goto	u2300
  2520     025F                     u2301:
  2521     025F  2A68               	goto	l213
  2522     0260                     u2300:
  2523     0260                     l2642:
  2524     0260  191E               	btfsc	30,2	;volatile
  2525     0261  2A63               	goto	u2311
  2526     0262  2A64               	goto	u2310
  2527     0263                     u2311:
  2528     0263  2A68               	goto	l213
  2529     0264                     u2310:
  2530     0264                     l2644:
  2531                           
  2532                           ;uart.c: 61:             factor = 64;
  2533     0264  3040               	movlw	64
  2534     0265  0020               	movlb	0	; select bank0
  2535     0266  00CA               	movwf	uart_init@factor
  2536     0267  2A68               	goto	l2646
  2537     0268                     l213:
  2538     0268                     l2646:
  2539                           
  2540                           ;uart.c: 62:         if (TXSTAbits.SYNC)
  2541     0268  0023               	movlb	3	; select bank3
  2542     0269  1E1E               	btfss	30,4	;volatile
  2543     026A  2A6C               	goto	u2321
  2544     026B  2A6D               	goto	u2320
  2545     026C                     u2321:
  2546     026C  2A70               	goto	l2650
  2547     026D                     u2320:
  2548     026D                     l2648:
  2549                           
  2550                           ;uart.c: 63:             factor = 64;
  2551     026D  3040               	movlw	64
  2552     026E  0020               	movlb	0	; select bank0
  2553     026F  00CA               	movwf	uart_init@factor
  2554     0270                     l2650:
  2555                           
  2556                           ;uart.c: 66:         uint32_t n = (int32_t) 20000000 / (factor * baud_rate) - 1u ;
  2557     0270  0020               	movlb	0	; select bank0
  2558     0271  084A               	movf	uart_init@factor,w
  2559     0272  00C2               	movwf	??_uart_init
  2560     0273  01C3               	clrf	??_uart_init+1
  2561     0274  01C4               	clrf	??_uart_init+2
  2562     0275  01C5               	clrf	??_uart_init+3
  2563     0276  0845               	movf	??_uart_init+3,w
  2564     0277  00A7               	movwf	___lmul@multiplier+3
  2565     0278  0844               	movf	??_uart_init+2,w
  2566     0279  00A6               	movwf	___lmul@multiplier+2
  2567     027A  0843               	movf	??_uart_init+1,w
  2568     027B  00A5               	movwf	___lmul@multiplier+1
  2569     027C  0842               	movf	??_uart_init,w
  2570     027D  00A4               	movwf	___lmul@multiplier
  2571     027E  0841               	movf	uart_init@baud_rate+3,w
  2572     027F  00AB               	movwf	___lmul@multiplicand+3
  2573     0280  0840               	movf	uart_init@baud_rate+2,w
  2574     0281  00AA               	movwf	___lmul@multiplicand+2
  2575     0282  083F               	movf	uart_init@baud_rate+1,w
  2576     0283  00A9               	movwf	___lmul@multiplicand+1
  2577     0284  083E               	movf	uart_init@baud_rate,w
  2578     0285  00A8               	movwf	___lmul@multiplicand
  2579     0286  318F  270B  3182   	fcall	___lmul
  2580     0289  0020               	movlb	0	; select bank0
  2581     028A  0827               	movf	?___lmul+3,w
  2582     028B  00B3               	movwf	___lldiv@divisor+3
  2583     028C  0826               	movf	?___lmul+2,w
  2584     028D  00B2               	movwf	___lldiv@divisor+2
  2585     028E  0825               	movf	?___lmul+1,w
  2586     028F  00B1               	movwf	___lldiv@divisor+1
  2587     0290  0824               	movf	?___lmul,w
  2588     0291  00B0               	movwf	___lldiv@divisor
  2589     0292  3001               	movlw	1
  2590     0293  00B7               	movwf	___lldiv@dividend+3
  2591     0294  3031               	movlw	49
  2592     0295  00B6               	movwf	___lldiv@dividend+2
  2593     0296  302D               	movlw	45
  2594     0297  00B5               	movwf	___lldiv@dividend+1
  2595     0298  3000               	movlw	0
  2596     0299  00B4               	movwf	___lldiv@dividend
  2597     029A  3186  2681  3182   	fcall	___lldiv
  2598     029D  30FF               	movlw	255
  2599     029E  0020               	movlb	0	; select bank0
  2600     029F  0730               	addwf	?___lldiv,w
  2601     02A0  00C6               	movwf	uart_init@n
  2602     02A1  30FF               	movlw	255
  2603     02A2  3D31               	addwfc	?___lldiv+1,w
  2604     02A3  00C7               	movwf	uart_init@n+1
  2605     02A4  30FF               	movlw	255
  2606     02A5  3D32               	addwfc	?___lldiv+2,w
  2607     02A6  00C8               	movwf	uart_init@n+2
  2608     02A7  30FF               	movlw	255
  2609     02A8  3D33               	addwfc	?___lldiv+3,w
  2610     02A9  00C9               	movwf	uart_init@n+3
  2611     02AA                     l2652:
  2612                           
  2613                           ;uart.c: 67:         SPBRGH = (n & 0xFF00) >> 8;
  2614     02AA  0846               	movf	uart_init@n,w
  2615     02AB  00C2               	movwf	??_uart_init
  2616     02AC  0847               	movf	uart_init@n+1,w
  2617     02AD  00C3               	movwf	??_uart_init+1
  2618     02AE  0848               	movf	uart_init@n+2,w
  2619     02AF  00C4               	movwf	??_uart_init+2
  2620     02B0  0849               	movf	uart_init@n+3,w
  2621     02B1  00C5               	movwf	??_uart_init+3
  2622     02B2  3008               	movlw	8
  2623     02B3                     u2335:
  2624     02B3  36C5               	lsrf	??_uart_init+3,f
  2625     02B4  0CC4               	rrf	??_uart_init+2,f
  2626     02B5  0CC3               	rrf	??_uart_init+1,f
  2627     02B6  0CC2               	rrf	??_uart_init,f
  2628     02B7                     u2330:
  2629     02B7  0B89               	decfsz	9,f
  2630     02B8  2AB3               	goto	u2335
  2631     02B9  0842               	movf	??_uart_init,w
  2632     02BA  0023               	movlb	3	; select bank3
  2633     02BB  009C               	movwf	28	;volatile
  2634     02BC                     l2654:
  2635                           
  2636                           ;uart.c: 68:         SPBRG = n & 0x00FF;
  2637     02BC  30FF               	movlw	255
  2638     02BD  0020               	movlb	0	; select bank0
  2639     02BE  0546               	andwf	uart_init@n,w
  2640     02BF  00C2               	movwf	??_uart_init
  2641     02C0  3000               	movlw	0
  2642     02C1  0547               	andwf	uart_init@n+1,w
  2643     02C2  00C3               	movwf	??_uart_init+1
  2644     02C3  0842               	movf	??_uart_init,w
  2645     02C4  0023               	movlb	3	; select bank3
  2646     02C5  009B               	movwf	27	;volatile
  2647     02C6  0020               	movlb	0	; select bank0
  2648     02C7  0843               	movf	??_uart_init+1,w
  2649     02C8  0023               	movlb	3	; select bank3
  2650     02C9  009C               	movwf	28	;volatile
  2651     02CA                     l2656:
  2652                           
  2653                           ;uart.c: 72:     INTCONbits.PEIE = 1;
  2654     02CA  170B               	bsf	11,6	;volatile
  2655     02CB                     l2658:
  2656                           
  2657                           ;uart.c: 76:     PIE1bits.RCIE=1;
  2658     02CB  0021               	movlb	1	; select bank1
  2659     02CC  1691               	bsf	17,5	;volatile
  2660     02CD                     l2660:
  2661                           
  2662                           ;uart.c: 79:     PIE1bits.TXIE=0;
  2663     02CD  1211               	bcf	17,4	;volatile
  2664     02CE                     l2662:
  2665                           
  2666                           ;uart.c: 82:     INTCONbits.GIE = 1;
  2667     02CE  178B               	bsf	11,7	;volatile
  2668     02CF                     l218:
  2669     02CF  0008               	return
  2670     02D0                     __end_of_uart_init:
  2671                           
  2672                           	psect	text2
  2673     0F0B                     __ptext2:	
  2674 ;; *************** function ___lmul *****************
  2675 ;; Defined at:
  2676 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul32.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  multiplier      4    4[BANK0 ] unsigned long 
  2679 ;;  multiplicand    4    8[BANK0 ] unsigned long 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  product         4   12[BANK0 ] unsigned long 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  4    4[BANK0 ] unsigned long 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2691 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2692 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2694 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2695 ;;Total ram usage:       12 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 3
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_uart_init
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705     0F0B                     ___lmul:	
  2706                           ;psect for function ___lmul
  2707                           
  2708     0F0B                     l2330:	
  2709                           ;incstack = 0
  2710                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2711                           
  2712     0F0B  3000               	movlw	0
  2713     0F0C  0020               	movlb	0	; select bank0
  2714     0F0D  00AF               	movwf	___lmul@product+3
  2715     0F0E  3000               	movlw	0
  2716     0F0F  00AE               	movwf	___lmul@product+2
  2717     0F10  3000               	movlw	0
  2718     0F11  00AD               	movwf	___lmul@product+1
  2719     0F12  3000               	movlw	0
  2720     0F13  00AC               	movwf	___lmul@product
  2721     0F14                     l2332:
  2722     0F14  1C24               	btfss	___lmul@multiplier,0
  2723     0F15  2F17               	goto	u1931
  2724     0F16  2F18               	goto	u1930
  2725     0F17                     u1931:
  2726     0F17  2F20               	goto	l2336
  2727     0F18                     u1930:
  2728     0F18                     l2334:
  2729     0F18  0828               	movf	___lmul@multiplicand,w
  2730     0F19  07AC               	addwf	___lmul@product,f
  2731     0F1A  0829               	movf	___lmul@multiplicand+1,w
  2732     0F1B  3DAD               	addwfc	___lmul@product+1,f
  2733     0F1C  082A               	movf	___lmul@multiplicand+2,w
  2734     0F1D  3DAE               	addwfc	___lmul@product+2,f
  2735     0F1E  082B               	movf	___lmul@multiplicand+3,w
  2736     0F1F  3DAF               	addwfc	___lmul@product+3,f
  2737     0F20                     l2336:
  2738     0F20  3001               	movlw	1
  2739     0F21                     u1945:
  2740     0F21  35A8               	lslf	___lmul@multiplicand,f
  2741     0F22  0DA9               	rlf	___lmul@multiplicand+1,f
  2742     0F23  0DAA               	rlf	___lmul@multiplicand+2,f
  2743     0F24  0DAB               	rlf	___lmul@multiplicand+3,f
  2744     0F25  0B89               	decfsz	9,f
  2745     0F26  2F21               	goto	u1945
  2746     0F27                     l2338:
  2747     0F27  3001               	movlw	1
  2748     0F28                     u1955:
  2749     0F28  36A7               	lsrf	___lmul@multiplier+3,f
  2750     0F29  0CA6               	rrf	___lmul@multiplier+2,f
  2751     0F2A  0CA5               	rrf	___lmul@multiplier+1,f
  2752     0F2B  0CA4               	rrf	___lmul@multiplier,f
  2753     0F2C  0B89               	decfsz	9,f
  2754     0F2D  2F28               	goto	u1955
  2755     0F2E  0827               	movf	___lmul@multiplier+3,w
  2756     0F2F  0426               	iorwf	___lmul@multiplier+2,w
  2757     0F30  0425               	iorwf	___lmul@multiplier+1,w
  2758     0F31  0424               	iorwf	___lmul@multiplier,w
  2759     0F32  1D03               	skipz
  2760     0F33  2F35               	goto	u1961
  2761     0F34  2F36               	goto	u1960
  2762     0F35                     u1961:
  2763     0F35  2F14               	goto	l2332
  2764     0F36                     u1960:
  2765     0F36                     l2340:
  2766     0F36  082F               	movf	___lmul@product+3,w
  2767     0F37  00A7               	movwf	?___lmul+3
  2768     0F38  082E               	movf	___lmul@product+2,w
  2769     0F39  00A6               	movwf	?___lmul+2
  2770     0F3A  082D               	movf	___lmul@product+1,w
  2771     0F3B  00A5               	movwf	?___lmul+1
  2772     0F3C  082C               	movf	___lmul@product,w
  2773     0F3D  00A4               	movwf	?___lmul
  2774     0F3E                     l419:
  2775     0F3E  0008               	return
  2776     0F3F                     __end_of___lmul:
  2777                           
  2778                           	psect	text3
  2779     0681                     __ptext3:	
  2780 ;; *************** function ___lldiv *****************
  2781 ;; Defined at:
  2782 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/__lldiv.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  divisor         4   16[BANK0 ] unsigned long 
  2785 ;;  dividend        4   20[BANK0 ] unsigned long 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  quotient        4   25[BANK0 ] unsigned long 
  2788 ;;  counter         1   29[BANK0 ] unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  4   16[BANK0 ] unsigned long 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2798 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2799 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2801 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2802 ;;Total ram usage:       14 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 3
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_uart_init
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812     0681                     ___lldiv:	
  2813                           ;psect for function ___lldiv
  2814                           
  2815     0681                     l2344:	
  2816                           ;incstack = 0
  2817                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2818                           
  2819     0681  3000               	movlw	0
  2820     0682  0020               	movlb	0	; select bank0
  2821     0683  00BC               	movwf	___lldiv@quotient+3
  2822     0684  3000               	movlw	0
  2823     0685  00BB               	movwf	___lldiv@quotient+2
  2824     0686  3000               	movlw	0
  2825     0687  00BA               	movwf	___lldiv@quotient+1
  2826     0688  3000               	movlw	0
  2827     0689  00B9               	movwf	___lldiv@quotient
  2828     068A  0833               	movf	___lldiv@divisor+3,w
  2829     068B  0432               	iorwf	___lldiv@divisor+2,w
  2830     068C  0431               	iorwf	___lldiv@divisor+1,w
  2831     068D  0430               	iorwf	___lldiv@divisor,w
  2832     068E  1903               	skipnz
  2833     068F  2E91               	goto	u1971
  2834     0690  2E92               	goto	u1970
  2835     0691                     u1971:
  2836     0691  2ED3               	goto	l2364
  2837     0692                     u1970:
  2838     0692                     l2346:
  2839     0692  01BD               	clrf	___lldiv@counter
  2840     0693  0ABD               	incf	___lldiv@counter,f
  2841     0694  2EA0               	goto	l2350
  2842     0695                     l2348:
  2843     0695  3001               	movlw	1
  2844     0696                     u1985:
  2845     0696  35B0               	lslf	___lldiv@divisor,f
  2846     0697  0DB1               	rlf	___lldiv@divisor+1,f
  2847     0698  0DB2               	rlf	___lldiv@divisor+2,f
  2848     0699  0DB3               	rlf	___lldiv@divisor+3,f
  2849     069A  0B89               	decfsz	9,f
  2850     069B  2E96               	goto	u1985
  2851     069C  3001               	movlw	1
  2852     069D  00B8               	movwf	??___lldiv
  2853     069E  0838               	movf	??___lldiv,w
  2854     069F  07BD               	addwf	___lldiv@counter,f
  2855     06A0                     l2350:
  2856     06A0  1FB3               	btfss	___lldiv@divisor+3,7
  2857     06A1  2EA3               	goto	u1991
  2858     06A2  2EA4               	goto	u1990
  2859     06A3                     u1991:
  2860     06A3  2E95               	goto	l2348
  2861     06A4                     u1990:
  2862     06A4                     l2352:
  2863     06A4  3001               	movlw	1
  2864     06A5                     u2005:
  2865     06A5  35B9               	lslf	___lldiv@quotient,f
  2866     06A6  0DBA               	rlf	___lldiv@quotient+1,f
  2867     06A7  0DBB               	rlf	___lldiv@quotient+2,f
  2868     06A8  0DBC               	rlf	___lldiv@quotient+3,f
  2869     06A9  0B89               	decfsz	9,f
  2870     06AA  2EA5               	goto	u2005
  2871     06AB                     l2354:
  2872     06AB  0833               	movf	___lldiv@divisor+3,w
  2873     06AC  0237               	subwf	___lldiv@dividend+3,w
  2874     06AD  1D03               	skipz
  2875     06AE  2EB9               	goto	u2015
  2876     06AF  0832               	movf	___lldiv@divisor+2,w
  2877     06B0  0236               	subwf	___lldiv@dividend+2,w
  2878     06B1  1D03               	skipz
  2879     06B2  2EB9               	goto	u2015
  2880     06B3  0831               	movf	___lldiv@divisor+1,w
  2881     06B4  0235               	subwf	___lldiv@dividend+1,w
  2882     06B5  1D03               	skipz
  2883     06B6  2EB9               	goto	u2015
  2884     06B7  0830               	movf	___lldiv@divisor,w
  2885     06B8  0234               	subwf	___lldiv@dividend,w
  2886     06B9                     u2015:
  2887     06B9  1C03               	skipc
  2888     06BA  2EBC               	goto	u2011
  2889     06BB  2EBD               	goto	u2010
  2890     06BC                     u2011:
  2891     06BC  2EC6               	goto	l2360
  2892     06BD                     u2010:
  2893     06BD                     l2356:
  2894     06BD  0830               	movf	___lldiv@divisor,w
  2895     06BE  02B4               	subwf	___lldiv@dividend,f
  2896     06BF  0831               	movf	___lldiv@divisor+1,w
  2897     06C0  3BB5               	subwfb	___lldiv@dividend+1,f
  2898     06C1  0832               	movf	___lldiv@divisor+2,w
  2899     06C2  3BB6               	subwfb	___lldiv@dividend+2,f
  2900     06C3  0833               	movf	___lldiv@divisor+3,w
  2901     06C4  3BB7               	subwfb	___lldiv@dividend+3,f
  2902     06C5                     l2358:
  2903     06C5  1439               	bsf	___lldiv@quotient,0
  2904     06C6                     l2360:
  2905     06C6  3001               	movlw	1
  2906     06C7                     u2025:
  2907     06C7  36B3               	lsrf	___lldiv@divisor+3,f
  2908     06C8  0CB2               	rrf	___lldiv@divisor+2,f
  2909     06C9  0CB1               	rrf	___lldiv@divisor+1,f
  2910     06CA  0CB0               	rrf	___lldiv@divisor,f
  2911     06CB  0B89               	decfsz	9,f
  2912     06CC  2EC7               	goto	u2025
  2913     06CD                     l2362:
  2914     06CD  3001               	movlw	1
  2915     06CE  02BD               	subwf	___lldiv@counter,f
  2916     06CF  1D03               	btfss	3,2
  2917     06D0  2ED2               	goto	u2031
  2918     06D1  2ED3               	goto	u2030
  2919     06D2                     u2031:
  2920     06D2  2EA4               	goto	l2352
  2921     06D3                     u2030:
  2922     06D3                     l2364:
  2923     06D3  083C               	movf	___lldiv@quotient+3,w
  2924     06D4  00B3               	movwf	?___lldiv+3
  2925     06D5  083B               	movf	___lldiv@quotient+2,w
  2926     06D6  00B2               	movwf	?___lldiv+2
  2927     06D7  083A               	movf	___lldiv@quotient+1,w
  2928     06D8  00B1               	movwf	?___lldiv+1
  2929     06D9  0839               	movf	___lldiv@quotient,w
  2930     06DA  00B0               	movwf	?___lldiv
  2931     06DB                     l441:
  2932     06DB  0008               	return
  2933     06DC                     __end_of___lldiv:
  2934                           
  2935                           	psect	text4
  2936     0EE4                     __ptext4:	
  2937 ;; *************** function _ports_init *****************
  2938 ;; Defined at:
  2939 ;;		line 197 in file "main.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2957 ;;Total ram usage:        0 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; Hardware stack levels required when called: 3
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_main
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967     0EE4                     _ports_init:	
  2968                           ;psect for function _ports_init
  2969                           
  2970     0EE4                     l2424:	
  2971                           ;incstack = 0
  2972                           ; Regs used in _ports_init: [wreg+status,2]
  2973                           
  2974                           
  2975                           ;main.c: 200:     ADCON0bits.ADON = 0;
  2976     0EE4  0021               	movlb	1	; select bank1
  2977     0EE5  101D               	bcf	29,0	;volatile
  2978     0EE6                     l2426:
  2979                           
  2980                           ;main.c: 201:     ANSELA = 0;
  2981     0EE6  0023               	movlb	3	; select bank3
  2982     0EE7  018C               	clrf	12	;volatile
  2983                           
  2984                           ;main.c: 202:     ANSELB = 0;
  2985     0EE8  018D               	clrf	13	;volatile
  2986                           
  2987                           ;main.c: 203:     ANSELC = 0;
  2988     0EE9  018E               	clrf	14	;volatile
  2989                           
  2990                           ;main.c: 204:     ANSELD = 0;
  2991     0EEA  018F               	clrf	15	;volatile
  2992                           
  2993                           ;main.c: 205:     ANSELE = 0;
  2994     0EEB  0190               	clrf	16	;volatile
  2995     0EEC                     l2428:
  2996                           
  2997                           ;main.c: 210:     TRISAbits.TRISA0 = 0;
  2998     0EEC  0021               	movlb	1	; select bank1
  2999     0EED  100C               	bcf	12,0	;volatile
  3000     0EEE                     l2430:
  3001                           
  3002                           ;main.c: 211:     TRISAbits.TRISA1 = 0;
  3003     0EEE  108C               	bcf	12,1	;volatile
  3004     0EEF                     l2432:
  3005                           
  3006                           ;main.c: 212:     TRISAbits.TRISA2 = 0;
  3007     0EEF  110C               	bcf	12,2	;volatile
  3008     0EF0                     l2434:
  3009                           
  3010                           ;main.c: 213:     TRISAbits.TRISA3 = 1;
  3011     0EF0  158C               	bsf	12,3	;volatile
  3012     0EF1                     l2436:
  3013                           
  3014                           ;main.c: 214:     TRISAbits.TRISA4 = 0;
  3015     0EF1  120C               	bcf	12,4	;volatile
  3016     0EF2                     l2438:
  3017                           
  3018                           ;main.c: 215:     TRISAbits.TRISA5 = 1;
  3019     0EF2  168C               	bsf	12,5	;volatile
  3020     0EF3                     l2440:
  3021                           
  3022                           ;main.c: 217:     PORTAbits.RA4 = 0;
  3023     0EF3  0020               	movlb	0	; select bank0
  3024     0EF4  120C               	bcf	12,4	;volatile
  3025                           
  3026                           ;main.c: 220:     TRISB = 0x00;
  3027     0EF5  0021               	movlb	1	; select bank1
  3028     0EF6  018D               	clrf	13	;volatile
  3029     0EF7                     l2442:
  3030                           
  3031                           ;main.c: 224:     TRISCbits.TRISC0 = 0;
  3032     0EF7  100E               	bcf	14,0	;volatile
  3033     0EF8                     l2444:
  3034                           
  3035                           ;main.c: 225:     TRISCbits.TRISC1 = 0;
  3036     0EF8  108E               	bcf	14,1	;volatile
  3037     0EF9                     l2446:
  3038                           
  3039                           ;main.c: 226:     TRISCbits.TRISC2 = 0;
  3040     0EF9  110E               	bcf	14,2	;volatile
  3041     0EFA                     l2448:
  3042                           
  3043                           ;main.c: 228:     TRISCbits.TRISC3 = 0;
  3044     0EFA  118E               	bcf	14,3	;volatile
  3045     0EFB                     l2450:
  3046                           
  3047                           ;main.c: 229:     TRISCbits.TRISC4 = 0;
  3048     0EFB  120E               	bcf	14,4	;volatile
  3049     0EFC                     l2452:
  3050                           
  3051                           ;main.c: 230:     TRISCbits.TRISC5 = 0;
  3052     0EFC  128E               	bcf	14,5	;volatile
  3053     0EFD                     l2454:
  3054                           
  3055                           ;main.c: 232:     TRISCbits.TRISC6 = 1;
  3056     0EFD  170E               	bsf	14,6	;volatile
  3057     0EFE                     l2456:
  3058                           
  3059                           ;main.c: 233:     TRISCbits.TRISC7 = 1;
  3060     0EFE  178E               	bsf	14,7	;volatile
  3061     0EFF                     l2458:
  3062                           
  3063                           ;main.c: 235:     PORTCbits.RC0 = 1;
  3064     0EFF  0020               	movlb	0	; select bank0
  3065     0F00  140E               	bsf	14,0	;volatile
  3066     0F01                     l2460:
  3067                           
  3068                           ;main.c: 236:     PORTCbits.RC1 = 1;
  3069     0F01  148E               	bsf	14,1	;volatile
  3070     0F02                     l2462:
  3071                           
  3072                           ;main.c: 237:     PORTCbits.RC2 = 1;
  3073     0F02  150E               	bsf	14,2	;volatile
  3074     0F03                     l2464:
  3075                           
  3076                           ;main.c: 238:     PORTCbits.RC3 = 0;
  3077     0F03  118E               	bcf	14,3	;volatile
  3078     0F04                     l2466:
  3079                           
  3080                           ;main.c: 239:     PORTCbits.RC4 = 0;
  3081     0F04  120E               	bcf	14,4	;volatile
  3082     0F05                     l2468:
  3083                           
  3084                           ;main.c: 240:     PORTCbits.RC5 = 0;
  3085     0F05  128E               	bcf	14,5	;volatile
  3086     0F06                     l2470:
  3087                           
  3088                           ;main.c: 243:     TRISD = 0xFF;
  3089     0F06  30FF               	movlw	255
  3090     0F07  0021               	movlb	1	; select bank1
  3091     0F08  008F               	movwf	15	;volatile
  3092     0F09                     l2472:
  3093                           
  3094                           ;main.c: 246:     TRISE = 0;
  3095     0F09  0190               	clrf	16	;volatile
  3096     0F0A                     l115:
  3097     0F0A  0008               	return
  3098     0F0B                     __end_of_ports_init:
  3099                           
  3100                           	psect	text5
  3101     04DE                     __ptext5:	
  3102 ;; *************** function _do_write *****************
  3103 ;; Defined at:
  3104 ;;		line 449 in file "main.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  s               2   13[BANK1 ] PTR unsigned char 
  3109 ;;		 -> STR_10(15), 
  3110 ;;  data            1   17[BANK1 ] unsigned char 
  3111 ;;  lo              1   16[BANK1 ] unsigned char 
  3112 ;;  hi              1   15[BANK1 ] unsigned char 
  3113 ;;  ads             2   18[BANK1 ] unsigned char [2]
  3114 ;;  addr            2   21[BANK1 ] unsigned short 
  3115 ;;  c               1   20[BANK1 ] unsigned char 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3126 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3127 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3128 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3129 ;;Total ram usage:       11 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; Hardware stack levels required when called: 11
  3132 ;; This function calls:
  3133 ;;		_charToHexDigit
  3134 ;;		_pop
  3135 ;;		_setup_address
  3136 ;;		_sprintf
  3137 ;;		_uart_puts
  3138 ;;		_write_port
  3139 ;; This function is called by:
  3140 ;;		_main
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144     04DE                     _do_write:	
  3145                           ;psect for function _do_write
  3146                           
  3147     04DE                     l3260:	
  3148                           ;incstack = 0
  3149                           ; Regs used in _do_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3150                           
  3151                           
  3152                           ;main.c: 451:     uint16_t addr;;main.c: 452:     char ads[2];;main.c: 453:     char c;;
      +                          main.c: 456:     TRISD = 0x00;
  3153     04DE  0021               	movlb	1	; select bank1
  3154     04DF  018F               	clrf	15	;volatile
  3155     04E0                     l3262:
  3156                           
  3157                           ;main.c: 459:     LATCbits.LATC0 = 0;
  3158     04E0  0022               	movlb	2	; select bank2
  3159     04E1  100E               	bcf	14,0	;volatile
  3160     04E2                     l3264:
  3161                           
  3162                           ;main.c: 460:     LATCbits.LATC1 = 0;
  3163     04E2  108E               	bcf	14,1	;volatile
  3164     04E3                     l3266:
  3165                           
  3166                           ;main.c: 461:     LATCbits.LATC2 = 1;
  3167     04E3  150E               	bsf	14,2	;volatile
  3168                           
  3169                           ;main.c: 463:     for (addr = 0; addr < 1024; addr++) {
  3170     04E4  0021               	movlb	1	; select bank1
  3171     04E5  01B5               	clrf	do_write@addr^(0+128)
  3172     04E6  01B6               	clrf	(do_write@addr+1)^(0+128)
  3173     04E7                     l3272:
  3174                           
  3175                           ;main.c: 464:         if (cmd_active == 0) {
  3176     04E7  085C               	movf	_cmd_active^(0+128),w
  3177     04E8  1D03               	btfss	3,2
  3178     04E9  2CEB               	goto	u3191
  3179     04EA  2CEC               	goto	u3190
  3180     04EB                     u3191:
  3181     04EB  2CFB               	goto	l3280
  3182     04EC                     u3190:
  3183     04EC                     l3274:
  3184                           
  3185                           ;main.c: 465:             char *s = "Write aborted\n";
  3186     04EC  301D               	movlw	low (STR_10| (0+32768))
  3187     04ED  00AD               	movwf	do_write@s^(0+128)
  3188     04EE  3090               	movlw	high (STR_10| (0+32768))
  3189     04EF  00AE               	movwf	(do_write@s^(0+128)+1)
  3190     04F0                     l3276:
  3191                           
  3192                           ;main.c: 466:             uart_puts(s);
  3193     04F0  082E               	movf	(do_write@s+1)^(0+128),w
  3194     04F1  0020               	movlb	0	; select bank0
  3195     04F2  00A5               	movwf	uart_puts@s+1
  3196     04F3  0021               	movlb	1	; select bank1
  3197     04F4  082D               	movf	do_write@s^(0+128),w
  3198     04F5  0020               	movlb	0	; select bank0
  3199     04F6  00A4               	movwf	uart_puts@s
  3200     04F7  3187  27D0  3184   	fcall	_uart_puts
  3201     04FA  2D52               	goto	l157
  3202     04FB                     l3280:
  3203                           
  3204                           ;main.c: 471:         c = pop();
  3205     04FB  318F  27B3  3184   	fcall	_pop
  3206     04FE  0021               	movlb	1	; select bank1
  3207     04FF  00B4               	movwf	do_write@c^(0+128)
  3208     0500                     l3282:
  3209                           
  3210                           ;main.c: 472:         uint8_t hi = charToHexDigit(c);
  3211     0500  0834               	movf	do_write@c^(0+128),w
  3212     0501  318D  259E  3184   	fcall	_charToHexDigit
  3213     0504  0021               	movlb	1	; select bank1
  3214     0505  00AF               	movwf	do_write@hi^(0+128)
  3215     0506                     l3284:
  3216                           
  3217                           ;main.c: 473:         c = pop();
  3218     0506  318F  27B3  3184   	fcall	_pop
  3219     0509  0021               	movlb	1	; select bank1
  3220     050A  00B4               	movwf	do_write@c^(0+128)
  3221                           
  3222                           ;main.c: 474:         uint8_t lo = charToHexDigit(c);
  3223     050B  0834               	movf	do_write@c^(0+128),w
  3224     050C  318D  259E  3184   	fcall	_charToHexDigit
  3225     050F  0021               	movlb	1	; select bank1
  3226     0510  00B0               	movwf	do_write@lo^(0+128)
  3227     0511                     l3286:
  3228                           
  3229                           ;main.c: 475:         uint8_t data = hi*16+lo;
  3230     0511  082F               	movf	do_write@hi^(0+128),w
  3231     0512  0020               	movlb	0	; select bank0
  3232     0513  00E0               	movwf	??_do_write
  3233     0514  3003               	movlw	3
  3234     0515                     u3205:
  3235     0515  35E0               	lslf	??_do_write,f
  3236     0516  3EFF               	addlw	-1
  3237     0517  1D03               	skipz
  3238     0518  2D15               	goto	u3205
  3239     0519  3560               	lslf	??_do_write,w
  3240     051A  0021               	movlb	1	; select bank1
  3241     051B  0730               	addwf	do_write@lo^(0+128),w
  3242     051C  00B1               	movwf	do_write@data^(0+128)
  3243     051D                     l3288:
  3244                           
  3245                           ;main.c: 478:         setup_address(addr);
  3246     051D  0836               	movf	(do_write@addr+1)^(0+128),w
  3247     051E  0020               	movlb	0	; select bank0
  3248     051F  00A5               	movwf	setup_address@addr+1
  3249     0520  0021               	movlb	1	; select bank1
  3250     0521  0835               	movf	do_write@addr^(0+128),w
  3251     0522  0020               	movlb	0	; select bank0
  3252     0523  00A4               	movwf	setup_address@addr
  3253     0524  318D  2532  3184   	fcall	_setup_address
  3254     0527                     l3290:
  3255                           
  3256                           ;main.c: 481:         write_port(data);
  3257     0527  0021               	movlb	1	; select bank1
  3258     0528  0831               	movf	do_write@data^(0+128),w
  3259     0529  318E  261E  3184   	fcall	_write_port
  3260     052C                     l3292:
  3261                           
  3262                           ;main.c: 482:     }
  3263     052C  3001               	movlw	1
  3264     052D  0021               	movlb	1	; select bank1
  3265     052E  07B5               	addwf	do_write@addr^(0+128),f
  3266     052F  3000               	movlw	0
  3267     0530  3DB6               	addwfc	(do_write@addr+1)^(0+128),f
  3268     0531                     l3294:
  3269     0531  3004               	movlw	4
  3270     0532  0236               	subwf	(do_write@addr+1)^(0+128),w
  3271     0533  3000               	movlw	0
  3272     0534  1903               	skipnz
  3273     0535  0235               	subwf	do_write@addr^(0+128),w
  3274     0536  1C03               	skipc
  3275     0537  2D39               	goto	u3211
  3276     0538  2D3A               	goto	u3210
  3277     0539                     u3211:
  3278     0539  2CE7               	goto	l3272
  3279     053A                     u3210:
  3280     053A                     l155:
  3281                           
  3282                           ;main.c: 484:     LATCbits.LATC0 = 0;
  3283     053A  0022               	movlb	2	; select bank2
  3284     053B  100E               	bcf	14,0	;volatile
  3285                           
  3286                           ;main.c: 485:     LATCbits.LATC1 = 0;
  3287     053C  108E               	bcf	14,1	;volatile
  3288                           
  3289                           ;main.c: 486:     LATCbits.LATC2 = 1;
  3290     053D  150E               	bsf	14,2	;volatile
  3291     053E                     l3296:
  3292                           
  3293                           ;main.c: 489:     TRISD = 0xFF;
  3294     053E  30FF               	movlw	255
  3295     053F  0021               	movlb	1	; select bank1
  3296     0540  008F               	movwf	15	;volatile
  3297     0541                     l3298:
  3298                           
  3299                           ;main.c: 491:     sprintf(ads, "OK");
  3300     0541  307D               	movlw	low (STR_6| (0+32768))
  3301     0542  0020               	movlb	0	; select bank0
  3302     0543  00DB               	movwf	sprintf@fmt
  3303     0544  3090               	movlw	high (STR_6| (0+32768))
  3304     0545  00DC               	movwf	sprintf@fmt+1
  3305     0546  30B2               	movlw	(low (do_write@ads| 0))& (0+255)
  3306     0547  318E  263B  3184   	fcall	_sprintf
  3307     054A                     l3300:
  3308                           
  3309                           ;main.c: 492:     uart_puts(ads);
  3310     054A  30B2               	movlw	low do_write@ads
  3311     054B  0020               	movlb	0	; select bank0
  3312     054C  00A4               	movwf	uart_puts@s
  3313     054D  3000               	movlw	high do_write@ads
  3314     054E  00A5               	movwf	uart_puts@s+1
  3315     054F  3187  27D0  3184   	fcall	_uart_puts
  3316     0552                     l157:
  3317     0552  0008               	return
  3318     0553                     __end_of_do_write:
  3319                           
  3320                           	psect	text6
  3321     0E1E                     __ptext6:	
  3322 ;; *************** function _write_port *****************
  3323 ;; Defined at:
  3324 ;;		line 429 in file "main.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  data            1    wreg     unsigned char 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  data            1    5[BANK0 ] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3341 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3342 ;;Total ram usage:        2 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 3
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_do_write
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352     0E1E                     _write_port:	
  3353                           ;psect for function _write_port
  3354                           
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _write_port: [wreg]
  3358                           ;write_port@data stored from wreg
  3359     0E1E  0020               	movlb	0	; select bank0
  3360     0E1F  00A5               	movwf	write_port@data
  3361     0E20                     l3158:
  3362                           
  3363                           ;main.c: 429: void write_port(uint8_t data);main.c: 430: {;main.c: 432:      _delay((uns
      +                          igned long)((1)*(20000000/4000000.0)));
  3364     0E20  3200               	nop2	;2 cycle nop
  3365     0E21  3200               	nop2	;2 cycle nop
  3366     0E22  0000               	nop
  3367     0E23                     l3160:
  3368                           
  3369                           ;main.c: 433:     LATD = data;
  3370     0E23  0020               	movlb	0	; select bank0
  3371     0E24  0825               	movf	write_port@data,w
  3372     0E25  0022               	movlb	2	; select bank2
  3373     0E26  008F               	movwf	15	;volatile
  3374                           
  3375                           ;main.c: 436:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  3376     0E27  3010               	movlw	16
  3377     0E28                     u3297:
  3378     0E28  0B89               	decfsz	9,f
  3379     0E29  2E28               	goto	u3297
  3380     0E2A  3200               	nop2
  3381     0E2B                     l3162:
  3382                           
  3383                           ;main.c: 437:     LATCbits.LATC2 = 0;
  3384     0E2B  0022               	movlb	2	; select bank2
  3385     0E2C  110E               	bcf	14,2	;volatile
  3386                           
  3387                           ;main.c: 438:     _delay((unsigned long)((1)*(20000000/4000.0)));
  3388     0E2D  3007               	movlw	7
  3389     0E2E  0020               	movlb	0	; select bank0
  3390     0E2F  00A4               	movwf	??_write_port
  3391     0E30  307D               	movlw	125
  3392     0E31                     u3307:
  3393     0E31  0B89               	decfsz	9,f
  3394     0E32  2E31               	goto	u3307
  3395     0E33  0BA4               	decfsz	??_write_port,f
  3396     0E34  2E31               	goto	u3307
  3397     0E35                     l3164:
  3398                           
  3399                           ;main.c: 441:     LATCbits.LATC2 = 1;
  3400     0E35  0022               	movlb	2	; select bank2
  3401     0E36  150E               	bsf	14,2	;volatile
  3402     0E37                     l3166:
  3403                           
  3404                           ;main.c: 442:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3405     0E37  3200               	nop2	;2 cycle nop
  3406     0E38  3200               	nop2	;2 cycle nop
  3407     0E39  0000               	nop
  3408     0E3A                     l151:
  3409     0E3A  0008               	return
  3410     0E3B                     __end_of_write_port:
  3411                           
  3412                           	psect	text7
  3413     0FB3                     __ptext7:	
  3414 ;; *************** function _pop *****************
  3415 ;; Defined at:
  3416 ;;		line 146 in file "main.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;		None
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  c               1    8[BANK0 ] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      unsigned char 
  3423 ;; Registers used:
  3424 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3431 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3432 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3433 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3434 ;;Total ram usage:        3 bytes
  3435 ;; Hardware stack levels used: 1
  3436 ;; Hardware stack levels required when called: 5
  3437 ;; This function calls:
  3438 ;;		_addone
  3439 ;;		_empty
  3440 ;; This function is called by:
  3441 ;;		_do_write
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446     0FB3                     _pop:	
  3447                           ;psect for function _pop
  3448                           
  3449     0FB3                     l3062:	
  3450                           ;incstack = 0
  3451                           ; Regs used in _pop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3452                           
  3453                           
  3454                           ;main.c: 150:     while (empty()) {
  3455     0FB3  2FD2               	goto	l3068
  3456     0FB4                     l100:
  3457                           
  3458                           ;main.c: 152:         PORTCbits.RC5 = 1;
  3459     0FB4  0020               	movlb	0	; select bank0
  3460     0FB5  168E               	bsf	14,5	;volatile
  3461     0FB6                     l3064:
  3462                           
  3463                           ;main.c: 153:         _delay((unsigned long)((100)*(20000000/4000.0)));
  3464     0FB6  3003               	movlw	3
  3465     0FB7  0020               	movlb	0	; select bank0
  3466     0FB8  00A7               	movwf	??_pop+1
  3467     0FB9  308A               	movlw	138
  3468     0FBA  00A6               	movwf	??_pop
  3469     0FBB  3055               	movlw	85
  3470     0FBC                     u3317:
  3471     0FBC  0B89               	decfsz	9,f
  3472     0FBD  2FBC               	goto	u3317
  3473     0FBE  0BA6               	decfsz	??_pop,f
  3474     0FBF  2FBC               	goto	u3317
  3475     0FC0  0BA7               	decfsz	??_pop+1,f
  3476     0FC1  2FBC               	goto	u3317
  3477     0FC2  3200               	nop2
  3478     0FC3                     l3066:
  3479                           
  3480                           ;main.c: 154:         PORTCbits.RC5 = 0;
  3481     0FC3  0020               	movlb	0	; select bank0
  3482     0FC4  128E               	bcf	14,5	;volatile
  3483                           
  3484                           ;main.c: 155:         _delay((unsigned long)((100)*(20000000/4000.0)));
  3485     0FC5  3003               	movlw	3
  3486     0FC6  0020               	movlb	0	; select bank0
  3487     0FC7  00A7               	movwf	??_pop+1
  3488     0FC8  308A               	movlw	138
  3489     0FC9  00A6               	movwf	??_pop
  3490     0FCA  3055               	movlw	85
  3491     0FCB                     u3327:
  3492     0FCB  0B89               	decfsz	9,f
  3493     0FCC  2FCB               	goto	u3327
  3494     0FCD  0BA6               	decfsz	??_pop,f
  3495     0FCE  2FCB               	goto	u3327
  3496     0FCF  0BA7               	decfsz	??_pop+1,f
  3497     0FD0  2FCB               	goto	u3327
  3498     0FD1  3200               	nop2
  3499     0FD2                     l3068:
  3500                           
  3501                           ;main.c: 150:     while (empty()) {
  3502     0FD2  318D  25B5  318F   	fcall	_empty
  3503     0FD5  3A00               	xorlw	0
  3504     0FD6  1D03               	skipz
  3505     0FD7  2FD9               	goto	u3031
  3506     0FD8  2FDA               	goto	u3030
  3507     0FD9                     u3031:
  3508     0FD9  2FB4               	goto	l100
  3509     0FDA                     u3030:
  3510     0FDA                     l101:
  3511                           
  3512                           ;main.c: 159:     INTCONbits.GIE = 0;
  3513     0FDA  138B               	bcf	11,7	;volatile
  3514                           
  3515                           ;main.c: 160:     PIE1bits.RCIE=0;
  3516     0FDB  0021               	movlb	1	; select bank1
  3517     0FDC  1291               	bcf	17,5	;volatile
  3518     0FDD                     l3070:
  3519                           
  3520                           ;main.c: 163:     char c = queue[head];
  3521     0FDD  30F0               	movlw	240
  3522     0FDE  0020               	movlb	0	; select bank0
  3523     0FDF  00A6               	movwf	??_pop
  3524     0FE0  3023               	movlw	35
  3525     0FE1  00A7               	movwf	??_pop+1
  3526     0FE2  087C               	movf	_head,w
  3527     0FE3  0726               	addwf	??_pop,w
  3528     0FE4  0086               	movwf	6
  3529     0FE5  087D               	movf	_head+1,w
  3530     0FE6  3D27               	addwfc	??_pop+1,w
  3531     0FE7  0087               	movwf	7
  3532     0FE8  0801               	movf	1,w
  3533     0FE9  00A8               	movwf	pop@c
  3534     0FEA                     l3072:
  3535                           
  3536                           ;main.c: 164:     head = addone(head);
  3537     0FEA  087D               	movf	_head+1,w
  3538     0FEB  00A5               	movwf	addone@i+1
  3539     0FEC  087C               	movf	_head,w
  3540     0FED  00A4               	movwf	addone@i
  3541     0FEE  318D  2577  318F   	fcall	_addone
  3542     0FF1  0020               	movlb	0	; select bank0
  3543     0FF2  0825               	movf	?_addone+1,w
  3544     0FF3  00FD               	movwf	_head+1
  3545     0FF4  0824               	movf	?_addone,w
  3546     0FF5  00FC               	movwf	_head
  3547     0FF6                     l3074:
  3548                           
  3549                           ;main.c: 165:     bytes_popped++;
  3550     0FF6  3001               	movlw	1
  3551     0FF7  0021               	movlb	1	; select bank1
  3552     0FF8  07D7               	addwf	_bytes_popped^(0+128),f
  3553     0FF9  3000               	movlw	0
  3554     0FFA  3DD8               	addwfc	(_bytes_popped+1)^(0+128),f
  3555     0FFB                     l3076:
  3556                           
  3557                           ;main.c: 168:     INTCONbits.GIE = 1;
  3558     0FFB  178B               	bsf	11,7	;volatile
  3559     0FFC                     l3078:
  3560                           
  3561                           ;main.c: 169:     PIE1bits.RCIE=1;
  3562     0FFC  1691               	bsf	17,5	;volatile
  3563     0FFD                     l3080:
  3564                           
  3565                           ;main.c: 171:     return c;
  3566     0FFD  0020               	movlb	0	; select bank0
  3567     0FFE  0828               	movf	pop@c,w
  3568     0FFF                     l102:
  3569     0FFF  0008               	return
  3570     1000                     __end_of_pop:
  3571                           
  3572                           	psect	text8
  3573     0DB5                     __ptext8:	
  3574 ;; *************** function _empty *****************
  3575 ;; Defined at:
  3576 ;;		line 99 in file "main.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      _Bool 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0, pclath, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3594 ;;Total ram usage:        0 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 4
  3597 ;; This function calls:
  3598 ;;		_addone
  3599 ;; This function is called by:
  3600 ;;		_pop
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604     0DB5                     _empty:	
  3605                           ;psect for function _empty
  3606                           
  3607     0DB5                     l3042:	
  3608                           ;incstack = 0
  3609                           ; Regs used in _empty: [wreg+status,2+status,0+pclath+cstack]
  3610                           
  3611                           
  3612                           ;main.c: 101:     if (addone(tail) == head)
  3613     0DB5  0020               	movlb	0	; select bank0
  3614     0DB6  0866               	movf	_tail+1,w
  3615     0DB7  00A5               	movwf	addone@i+1
  3616     0DB8  0865               	movf	_tail,w
  3617     0DB9  00A4               	movwf	addone@i
  3618     0DBA  318D  2577  318D   	fcall	_addone
  3619     0DBD  087D               	movf	_head+1,w
  3620     0DBE  0020               	movlb	0	; select bank0
  3621     0DBF  0625               	xorwf	?_addone+1,w
  3622     0DC0  1D03               	skipz
  3623     0DC1  2DC4               	goto	u3015
  3624     0DC2  087C               	movf	_head,w
  3625     0DC3  0624               	xorwf	?_addone,w
  3626     0DC4                     u3015:
  3627     0DC4  1D03               	skipz
  3628     0DC5  2DC7               	goto	u3011
  3629     0DC6  2DC8               	goto	u3010
  3630     0DC7                     u3011:
  3631     0DC7  2DCA               	goto	l3048
  3632     0DC8                     u3010:
  3633     0DC8                     l3044:
  3634                           
  3635                           ;main.c: 102:         return 1;
  3636     0DC8  3001               	movlw	1
  3637     0DC9  2DCB               	goto	l89
  3638     0DCA                     l3048:
  3639                           
  3640                           ;main.c: 103:     return 0;
  3641     0DCA  3000               	movlw	0
  3642     0DCB                     l89:
  3643     0DCB  0008               	return
  3644     0DCC                     __end_of_empty:
  3645                           
  3646                           	psect	text9
  3647     0D77                     __ptext9:	
  3648 ;; *************** function _addone *****************
  3649 ;; Defined at:
  3650 ;;		line 73 in file "main.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  i               2    4[BANK0 ] short 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  2    4[BANK0 ] short 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3664 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3667 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3668 ;;Total ram usage:        2 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; Hardware stack levels required when called: 3
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_empty
  3675 ;;		_pop
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679     0D77                     _addone:	
  3680                           ;psect for function _addone
  3681                           
  3682     0D77                     l2968:	
  3683                           ;incstack = 0
  3684                           ; Regs used in _addone: [wreg+status,2+status,0]
  3685                           
  3686                           
  3687                           ;main.c: 73: int16_t addone(int16_t i);main.c: 74: {;main.c: 75:     if (i == 1024 -1)
  3688     0D77  0020               	movlb	0	; select bank0
  3689     0D78  0A24               	incf	addone@i,w
  3690     0D79  3003               	movlw	3
  3691     0D7A  1903               	skipnz
  3692     0D7B  0625               	xorwf	addone@i+1,w
  3693     0D7C  1D03               	btfss	3,2
  3694     0D7D  2D7F               	goto	u2941
  3695     0D7E  2D80               	goto	u2940
  3696     0D7F                     u2941:
  3697     0D7F  2D83               	goto	l2974
  3698     0D80                     u2940:
  3699     0D80                     l2970:
  3700                           
  3701                           ;main.c: 76:         return 0;
  3702     0D80  01A4               	clrf	?_addone
  3703     0D81  01A5               	clrf	?_addone+1
  3704     0D82  2D89               	goto	l80
  3705     0D83                     l2974:
  3706                           
  3707                           ;main.c: 77:     return i+1;
  3708     0D83  0824               	movf	addone@i,w
  3709     0D84  3E01               	addlw	1
  3710     0D85  00A4               	movwf	?_addone
  3711     0D86  3000               	movlw	0
  3712     0D87  3D25               	addwfc	addone@i+1,w
  3713     0D88  00A5               	movwf	?_addone+1
  3714     0D89                     l80:
  3715     0D89  0008               	return
  3716     0D8A                     __end_of_addone:
  3717                           
  3718                           	psect	text10
  3719     0D9E                     __ptext10:	
  3720 ;; *************** function _charToHexDigit *****************
  3721 ;; Defined at:
  3722 ;;		line 184 in file "main.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  c               1    wreg     unsigned char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  c               1    4[BANK0 ] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      unsigned char 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3737 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3739 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3740 ;;Total ram usage:        1 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 3
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_do_write
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750     0D9E                     _charToHexDigit:	
  3751                           ;psect for function _charToHexDigit
  3752                           
  3753                           
  3754                           ;incstack = 0
  3755                           ; Regs used in _charToHexDigit: [wreg+status,2+status,0]
  3756                           ;charToHexDigit@c stored from wreg
  3757     0D9E  0020               	movlb	0	; select bank0
  3758     0D9F  00A4               	movwf	charToHexDigit@c
  3759     0DA0                     l3084:
  3760                           
  3761                           ;main.c: 184: uint8_t charToHexDigit(char c);main.c: 185: {;main.c: 186:   if (c >= 'a')
  3762     0DA0  3061               	movlw	97
  3763     0DA1  0224               	subwf	charToHexDigit@c,w
  3764     0DA2  1C03               	skipc
  3765     0DA3  2DA5               	goto	u3041
  3766     0DA4  2DA6               	goto	u3040
  3767     0DA5                     u3041:
  3768     0DA5  2DA9               	goto	l3092
  3769     0DA6                     u3040:
  3770     0DA6                     l3086:
  3771                           
  3772                           ;main.c: 187:     return c - 'a' + 10;
  3773     0DA6  0824               	movf	charToHexDigit@c,w
  3774     0DA7  3EA9               	addlw	169
  3775     0DA8  2DB4               	goto	l109
  3776     0DA9                     l3092:
  3777     0DA9  3041               	movlw	65
  3778     0DAA  0224               	subwf	charToHexDigit@c,w
  3779     0DAB  1C03               	skipc
  3780     0DAC  2DAE               	goto	u3051
  3781     0DAD  2DAF               	goto	u3050
  3782     0DAE                     u3051:
  3783     0DAE  2DB2               	goto	l3100
  3784     0DAF                     u3050:
  3785     0DAF                     l3094:
  3786                           
  3787                           ;main.c: 189:     return c - 'A' + 10;
  3788     0DAF  0824               	movf	charToHexDigit@c,w
  3789     0DB0  3EC9               	addlw	201
  3790     0DB1  2DB4               	goto	l109
  3791     0DB2                     l3100:
  3792                           
  3793                           ;main.c: 191:     return c - '0';
  3794     0DB2  0824               	movf	charToHexDigit@c,w
  3795     0DB3  3ED0               	addlw	208
  3796     0DB4                     l109:
  3797     0DB4  0008               	return
  3798     0DB5                     __end_of_charToHexDigit:
  3799                           
  3800                           	psect	text11
  3801     02D0                     __ptext11:	
  3802 ;; *************** function _do_read *****************
  3803 ;; Defined at:
  3804 ;;		line 381 in file "main.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;		None
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  s               2   29[BANK1 ] PTR unsigned char 
  3809 ;;		 -> STR_7(14), 
  3810 ;;  data            1   31[BANK1 ] unsigned char 
  3811 ;;  ads            16   13[BANK1 ] unsigned char [16]
  3812 ;;  addr            2   33[BANK1 ] unsigned short 
  3813 ;;  col             1   32[BANK1 ] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3824 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3825 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3826 ;;      Totals:         0       2      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3827 ;;Total ram usage:       24 bytes
  3828 ;; Hardware stack levels used: 1
  3829 ;; Hardware stack levels required when called: 11
  3830 ;; This function calls:
  3831 ;;		_read_port
  3832 ;;		_setup_address
  3833 ;;		_sprintf
  3834 ;;		_uart_putc
  3835 ;;		_uart_puts
  3836 ;; This function is called by:
  3837 ;;		_main
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841     02D0                     _do_read:	
  3842                           ;psect for function _do_read
  3843                           
  3844     02D0                     l3214:	
  3845                           ;incstack = 0
  3846                           ; Regs used in _do_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3847                           
  3848                           
  3849                           ;main.c: 383:     uint16_t addr;;main.c: 384:     char ads[16];;main.c: 385:     uint8_t
      +                           col=0;
  3850     02D0  0021               	movlb	1	; select bank1
  3851     02D1  01C0               	clrf	do_read@col^(0+128)
  3852     02D2                     l3216:
  3853                           
  3854                           ;main.c: 388:     LATCbits.LATC0 = 1;
  3855     02D2  0022               	movlb	2	; select bank2
  3856     02D3  140E               	bsf	14,0	;volatile
  3857     02D4                     l3218:
  3858                           
  3859                           ;main.c: 389:     LATCbits.LATC1 = 0;
  3860     02D4  108E               	bcf	14,1	;volatile
  3861     02D5                     l3220:
  3862                           
  3863                           ;main.c: 390:     LATCbits.LATC2 = 1;
  3864     02D5  150E               	bsf	14,2	;volatile
  3865                           
  3866                           ;main.c: 392:     for (addr = 0; addr < 1024; ++addr) {
  3867     02D6  0021               	movlb	1	; select bank1
  3868     02D7  01C1               	clrf	do_read@addr^(0+128)
  3869     02D8  01C2               	clrf	(do_read@addr+1)^(0+128)
  3870     02D9                     l3226:
  3871                           
  3872                           ;main.c: 393:         if (cmd_active == 0) {
  3873     02D9  085C               	movf	_cmd_active^(0+128),w
  3874     02DA  1D03               	btfss	3,2
  3875     02DB  2ADD               	goto	u3151
  3876     02DC  2ADE               	goto	u3150
  3877     02DD                     u3151:
  3878     02DD  2AED               	goto	l3234
  3879     02DE                     u3150:
  3880     02DE                     l3228:
  3881                           
  3882                           ;main.c: 394:             char *s = "Read aborted\n";
  3883     02DE  303B               	movlw	low (STR_7| (0+32768))
  3884     02DF  00BD               	movwf	do_read@s^(0+128)
  3885     02E0  3090               	movlw	high (STR_7| (0+32768))
  3886     02E1  00BE               	movwf	(do_read@s^(0+128)+1)
  3887     02E2                     l3230:
  3888                           
  3889                           ;main.c: 395:             uart_puts(s);
  3890     02E2  083E               	movf	(do_read@s+1)^(0+128),w
  3891     02E3  0020               	movlb	0	; select bank0
  3892     02E4  00A5               	movwf	uart_puts@s+1
  3893     02E5  0021               	movlb	1	; select bank1
  3894     02E6  083D               	movf	do_read@s^(0+128),w
  3895     02E7  0020               	movlb	0	; select bank0
  3896     02E8  00A4               	movwf	uart_puts@s
  3897     02E9  3187  27D0  3182   	fcall	_uart_puts
  3898     02EC  2B5B               	goto	l145
  3899     02ED                     l3234:
  3900                           
  3901                           ;main.c: 400:         setup_address(addr);
  3902     02ED  0842               	movf	(do_read@addr+1)^(0+128),w
  3903     02EE  0020               	movlb	0	; select bank0
  3904     02EF  00A5               	movwf	setup_address@addr+1
  3905     02F0  0021               	movlb	1	; select bank1
  3906     02F1  0841               	movf	do_read@addr^(0+128),w
  3907     02F2  0020               	movlb	0	; select bank0
  3908     02F3  00A4               	movwf	setup_address@addr
  3909     02F4  318D  2532  3182   	fcall	_setup_address
  3910     02F7                     l3236:
  3911                           
  3912                           ;main.c: 403:         uint8_t data = read_port();
  3913     02F7  318D  2542  3182   	fcall	_read_port
  3914     02FA  0021               	movlb	1	; select bank1
  3915     02FB  00BF               	movwf	do_read@data^(0+128)
  3916     02FC                     l3238:
  3917                           
  3918                           ;main.c: 406:         if (col == 0) {
  3919     02FC  0840               	movf	do_read@col^(0+128),w
  3920     02FD  1D03               	btfss	3,2
  3921     02FE  2B00               	goto	u3161
  3922     02FF  2B01               	goto	u3160
  3923     0300                     u3161:
  3924     0300  2B1A               	goto	l3244
  3925     0301                     u3160:
  3926     0301                     l3240:
  3927                           
  3928                           ;main.c: 407:             sprintf(ads, "%04x: ", addr);
  3929     0301  3068               	movlw	low (STR_8| (0+32768))
  3930     0302  0020               	movlb	0	; select bank0
  3931     0303  00DB               	movwf	sprintf@fmt
  3932     0304  3090               	movlw	high (STR_8| (0+32768))
  3933     0305  00DC               	movwf	sprintf@fmt+1
  3934     0306  0021               	movlb	1	; select bank1
  3935     0307  0842               	movf	(do_read@addr+1)^(0+128),w
  3936     0308  0020               	movlb	0	; select bank0
  3937     0309  00DE               	movwf	?_sprintf+3
  3938     030A  0021               	movlb	1	; select bank1
  3939     030B  0841               	movf	do_read@addr^(0+128),w
  3940     030C  0020               	movlb	0	; select bank0
  3941     030D  00DD               	movwf	?_sprintf+2
  3942     030E  30AD               	movlw	(low (do_read@ads| 0))& (0+255)
  3943     030F  318E  263B  3182   	fcall	_sprintf
  3944     0312                     l3242:
  3945                           
  3946                           ;main.c: 408:             uart_puts(ads);
  3947     0312  30AD               	movlw	low do_read@ads
  3948     0313  0020               	movlb	0	; select bank0
  3949     0314  00A4               	movwf	uart_puts@s
  3950     0315  3000               	movlw	high do_read@ads
  3951     0316  00A5               	movwf	uart_puts@s+1
  3952     0317  3187  27D0  3182   	fcall	_uart_puts
  3953     031A                     l3244:
  3954                           
  3955                           ;main.c: 411:         sprintf(ads, "%02x", data);
  3956     031A  3074               	movlw	low (STR_9| (0+32768))
  3957     031B  0020               	movlb	0	; select bank0
  3958     031C  00DB               	movwf	sprintf@fmt
  3959     031D  3090               	movlw	high (STR_9| (0+32768))
  3960     031E  00DC               	movwf	sprintf@fmt+1
  3961     031F  0021               	movlb	1	; select bank1
  3962     0320  083F               	movf	do_read@data^(0+128),w
  3963     0321  0020               	movlb	0	; select bank0
  3964     0322  00E0               	movwf	??_do_read
  3965     0323  01E1               	clrf	??_do_read+1
  3966     0324  0860               	movf	??_do_read,w
  3967     0325  00DD               	movwf	?_sprintf+2
  3968     0326  0861               	movf	??_do_read+1,w
  3969     0327  00DE               	movwf	?_sprintf+3
  3970     0328  30AD               	movlw	(low (do_read@ads| 0))& (0+255)
  3971     0329  318E  263B  3182   	fcall	_sprintf
  3972                           
  3973                           ;main.c: 412:         uart_puts(ads);
  3974     032C  30AD               	movlw	low do_read@ads
  3975     032D  0020               	movlb	0	; select bank0
  3976     032E  00A4               	movwf	uart_puts@s
  3977     032F  3000               	movlw	high do_read@ads
  3978     0330  00A5               	movwf	uart_puts@s+1
  3979     0331  3187  27D0  3182   	fcall	_uart_puts
  3980     0334                     l3246:
  3981                           
  3982                           ;main.c: 413:         if (col == 15) {
  3983     0334  300F               	movlw	15
  3984     0335  0021               	movlb	1	; select bank1
  3985     0336  0640               	xorwf	do_read@col^(0+128),w
  3986     0337  1D03               	btfss	3,2
  3987     0338  2B3A               	goto	u3171
  3988     0339  2B3B               	goto	u3170
  3989     033A                     u3171:
  3990     033A  2B41               	goto	l3252
  3991     033B                     u3170:
  3992     033B                     l3248:
  3993                           
  3994                           ;main.c: 414:             col = 0;
  3995     033B  01C0               	clrf	do_read@col^(0+128)
  3996     033C                     l3250:
  3997                           
  3998                           ;main.c: 415:             uart_putc('\n');
  3999     033C  300A               	movlw	10
  4000     033D  318D  258A  3182   	fcall	_uart_putc
  4001                           
  4002                           ;main.c: 416:         } else {
  4003     0340  2B4B               	goto	l3256
  4004     0341                     l3252:
  4005                           
  4006                           ;main.c: 417:             uart_putc(' ');
  4007     0341  3020               	movlw	32
  4008     0342  318D  258A  3182   	fcall	_uart_putc
  4009     0345                     l3254:
  4010                           
  4011                           ;main.c: 418:             col++;
  4012     0345  3001               	movlw	1
  4013     0346  0020               	movlb	0	; select bank0
  4014     0347  00E0               	movwf	??_do_read
  4015     0348  0860               	movf	??_do_read,w
  4016     0349  0021               	movlb	1	; select bank1
  4017     034A  07C0               	addwf	do_read@col^(0+128),f
  4018     034B                     l3256:
  4019                           
  4020                           ;main.c: 420:     }
  4021     034B  3001               	movlw	1
  4022     034C  0021               	movlb	1	; select bank1
  4023     034D  07C1               	addwf	do_read@addr^(0+128),f
  4024     034E  3000               	movlw	0
  4025     034F  3DC2               	addwfc	(do_read@addr+1)^(0+128),f
  4026     0350                     l3258:
  4027     0350  3004               	movlw	4
  4028     0351  0242               	subwf	(do_read@addr+1)^(0+128),w
  4029     0352  3000               	movlw	0
  4030     0353  1903               	skipnz
  4031     0354  0241               	subwf	do_read@addr^(0+128),w
  4032     0355  1C03               	skipc
  4033     0356  2B58               	goto	u3181
  4034     0357  2B59               	goto	u3180
  4035     0358                     u3181:
  4036     0358  2AD9               	goto	l3226
  4037     0359                     u3180:
  4038     0359                     l143:
  4039                           
  4040                           ;main.c: 423:     LATCbits.LATC1 = 1;
  4041     0359  0022               	movlb	2	; select bank2
  4042     035A  148E               	bsf	14,1	;volatile
  4043     035B                     l145:
  4044     035B  0008               	return
  4045     035C                     __end_of_do_read:
  4046                           
  4047                           	psect	text12
  4048     0D8A                     __ptext12:	
  4049 ;; *************** function _uart_putc *****************
  4050 ;; Defined at:
  4051 ;;		line 160 in file "uart.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;  c               1    wreg     unsigned char 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  c               1    4[BANK0 ] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4068 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4069 ;;Total ram usage:        1 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; Hardware stack levels required when called: 3
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_do_read
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079     0D8A                     _uart_putc:	
  4080                           ;psect for function _uart_putc
  4081                           
  4082                           
  4083                           ;incstack = 0
  4084                           ; Regs used in _uart_putc: [wreg]
  4085                           ;uart_putc@c stored from wreg
  4086     0D8A  0020               	movlb	0	; select bank0
  4087     0D8B  00A4               	movwf	uart_putc@c
  4088     0D8C                     l2316:
  4089                           
  4090                           ;uart.c: 160: void uart_putc(char c);uart.c: 161: {;uart.c: 163:     while (PIR1bits.TXI
      +                          F == 0) {
  4091     0D8C  2D8E               	goto	l237
  4092     0D8D                     l238:
  4093                           
  4094                           ;uart.c: 164:         __nop();
  4095     0D8D  0000               	nop
  4096     0D8E                     l237:	
  4097                           ;uart.c: 165:     }
  4098                           
  4099                           
  4100                           ;uart.c: 163:     while (PIR1bits.TXIF == 0) {
  4101     0D8E  0020               	movlb	0	; select bank0
  4102     0D8F  1E11               	btfss	17,4	;volatile
  4103     0D90  2D92               	goto	u1911
  4104     0D91  2D93               	goto	u1910
  4105     0D92                     u1911:
  4106     0D92  2D8D               	goto	l238
  4107     0D93                     u1910:
  4108     0D93                     l2318:
  4109                           
  4110                           ;uart.c: 168:     TXREG = c;
  4111     0D93  0824               	movf	uart_putc@c,w
  4112     0D94  0023               	movlb	3	; select bank3
  4113     0D95  009A               	movwf	26	;volatile
  4114                           
  4115                           ;uart.c: 171:     while(TXSTAbits.TRMT == 0) {
  4116     0D96  2D98               	goto	l240
  4117     0D97                     l241:
  4118                           
  4119                           ;uart.c: 172:         __nop();
  4120     0D97  0000               	nop
  4121     0D98                     l240:	
  4122                           ;uart.c: 173:     }
  4123                           
  4124                           
  4125                           ;uart.c: 171:     while(TXSTAbits.TRMT == 0) {
  4126     0D98  0023               	movlb	3	; select bank3
  4127     0D99  1C9E               	btfss	30,1	;volatile
  4128     0D9A  2D9C               	goto	u1921
  4129     0D9B  2D9D               	goto	u1920
  4130     0D9C                     u1921:
  4131     0D9C  2D97               	goto	l241
  4132     0D9D                     u1920:
  4133     0D9D                     l243:
  4134     0D9D  0008               	return
  4135     0D9E                     __end_of_uart_putc:
  4136                           
  4137                           	psect	text13
  4138     0EBF                     __ptext13:	
  4139 ;; *************** function _do_init *****************
  4140 ;; Defined at:
  4141 ;;		line 317 in file "main.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  s               8   13[BANK1 ] unsigned char [8]
  4146 ;;  rate            2   21[BANK1 ] unsigned short 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4157 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4159 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4160 ;;Total ram usage:       10 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 11
  4163 ;; This function calls:
  4164 ;;		_sprintf
  4165 ;;		_uart_init_brg
  4166 ;;		_uart_puts
  4167 ;; This function is called by:
  4168 ;;		_main
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172     0EBF                     _do_init:	
  4173                           ;psect for function _do_init
  4174                           
  4175     0EBF                     l3168:	
  4176                           ;incstack = 0
  4177                           ; Regs used in _do_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4178                           
  4179                           
  4180                           ;main.c: 319:     uint16_t rate;;main.c: 320:     char s[8];;main.c: 322:     rate = uar
      +                          t_init_brg();
  4181     0EBF  3187  2782  318E   	fcall	_uart_init_brg
  4182     0EC2  0020               	movlb	0	; select bank0
  4183     0EC3  0825               	movf	?_uart_init_brg+1,w
  4184     0EC4  0021               	movlb	1	; select bank1
  4185     0EC5  00B6               	movwf	(do_init@rate+1)^(0+128)
  4186     0EC6  0020               	movlb	0	; select bank0
  4187     0EC7  0824               	movf	?_uart_init_brg,w
  4188     0EC8  0021               	movlb	1	; select bank1
  4189     0EC9  00B5               	movwf	do_init@rate^(0+128)
  4190     0ECA                     l3170:
  4191                           
  4192                           ;main.c: 324:     sprintf(s, "%d\n", rate);
  4193     0ECA  3079               	movlw	low (STR_1| (0+32768))
  4194     0ECB  0020               	movlb	0	; select bank0
  4195     0ECC  00DB               	movwf	sprintf@fmt
  4196     0ECD  3090               	movlw	high (STR_1| (0+32768))
  4197     0ECE  00DC               	movwf	sprintf@fmt+1
  4198     0ECF  0021               	movlb	1	; select bank1
  4199     0ED0  0836               	movf	(do_init@rate+1)^(0+128),w
  4200     0ED1  0020               	movlb	0	; select bank0
  4201     0ED2  00DE               	movwf	?_sprintf+3
  4202     0ED3  0021               	movlb	1	; select bank1
  4203     0ED4  0835               	movf	do_init@rate^(0+128),w
  4204     0ED5  0020               	movlb	0	; select bank0
  4205     0ED6  00DD               	movwf	?_sprintf+2
  4206     0ED7  30AD               	movlw	(low (do_init@s| 0))& (0+255)
  4207     0ED8  318E  263B  318E   	fcall	_sprintf
  4208     0EDB                     l3172:
  4209                           
  4210                           ;main.c: 325:     uart_puts(s);
  4211     0EDB  30AD               	movlw	low do_init@s
  4212     0EDC  0020               	movlb	0	; select bank0
  4213     0EDD  00A4               	movwf	uart_puts@s
  4214     0EDE  3000               	movlw	high do_init@s
  4215     0EDF  00A5               	movwf	uart_puts@s+1
  4216     0EE0  3187  27D0  318E   	fcall	_uart_puts
  4217     0EE3                     l131:
  4218     0EE3  0008               	return
  4219     0EE4                     __end_of_do_init:
  4220                           
  4221                           	psect	text14
  4222     0782                     __ptext14:	
  4223 ;; *************** function _uart_init_brg *****************
  4224 ;; Defined at:
  4225 ;;		line 89 in file "uart.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  c               1    0        unsigned char 
  4230 ;;  rate            2   11[BANK0 ] unsigned short 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  2    4[BANK0 ] unsigned short 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4240 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4241 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4242 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4243 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4244 ;;Total ram usage:        9 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; Hardware stack levels required when called: 3
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_do_init
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254     0782                     _uart_init_brg:	
  4255                           ;psect for function _uart_init_brg
  4256                           
  4257     0782                     l3110:	
  4258                           ;incstack = 0
  4259                           ; Regs used in _uart_init_brg: [wreg+status,2]
  4260                           
  4261     0782                     l3112:
  4262                           
  4263                           ;uart.c: 93:     PIE1bits.RCIE=0;
  4264     0782  0021               	movlb	1	; select bank1
  4265     0783  1291               	bcf	17,5	;volatile
  4266     0784                     l3114:
  4267                           
  4268                           ;uart.c: 96:     BAUDCONbits.ABDEN = 1;
  4269     0784  0023               	movlb	3	; select bank3
  4270     0785  141F               	bsf	31,0	;volatile
  4271     0786                     l3116:
  4272                           
  4273                           ;uart.c: 102:         if (PIR1bits.RCIF) {
  4274     0786  0020               	movlb	0	; select bank0
  4275     0787  1E91               	btfss	17,5	;volatile
  4276     0788  2F8A               	goto	u3061
  4277     0789  2F8B               	goto	u3060
  4278     078A                     u3061:
  4279     078A  2F8E               	goto	l222
  4280     078B                     u3060:
  4281     078B                     l3118:
  4282     078B  0023               	movlb	3	; select bank3
  4283     078C  0819               	movf	25,w	;volatile
  4284                           
  4285                           ;uart.c: 104:             break;
  4286     078D  2FB2               	goto	l3128
  4287     078E                     l222:	
  4288                           ;uart.c: 105:         }
  4289                           
  4290                           
  4291                           ;uart.c: 108:         PORTCbits.RC4 = 1;
  4292     078E  160E               	bsf	14,4	;volatile
  4293     078F                     l3120:
  4294                           
  4295                           ;uart.c: 109:         _delay((unsigned long)((250)*(20000000/4000.0)));
  4296     078F  3007               	movlw	7
  4297     0790  0020               	movlb	0	; select bank0
  4298     0791  00A7               	movwf	??_uart_init_brg+1
  4299     0792  3058               	movlw	88
  4300     0793  00A6               	movwf	??_uart_init_brg
  4301     0794  3059               	movlw	89
  4302     0795                     u3337:
  4303     0795  0B89               	decfsz	9,f
  4304     0796  2F95               	goto	u3337
  4305     0797  0BA6               	decfsz	??_uart_init_brg,f
  4306     0798  2F95               	goto	u3337
  4307     0799  0BA7               	decfsz	??_uart_init_brg+1,f
  4308     079A  2F95               	goto	u3337
  4309     079B  3200               	nop2
  4310     079C                     l3122:
  4311                           
  4312                           ;uart.c: 110:         PORTCbits.RC4 = 0;
  4313     079C  0020               	movlb	0	; select bank0
  4314     079D  120E               	bcf	14,4	;volatile
  4315                           
  4316                           ;uart.c: 111:         _delay((unsigned long)((250)*(20000000/4000.0)));
  4317     079E  3007               	movlw	7
  4318     079F  0020               	movlb	0	; select bank0
  4319     07A0  00A7               	movwf	??_uart_init_brg+1
  4320     07A1  3058               	movlw	88
  4321     07A2  00A6               	movwf	??_uart_init_brg
  4322     07A3  3059               	movlw	89
  4323     07A4                     u3347:
  4324     07A4  0B89               	decfsz	9,f
  4325     07A5  2FA4               	goto	u3347
  4326     07A6  0BA6               	decfsz	??_uart_init_brg,f
  4327     07A7  2FA4               	goto	u3347
  4328     07A8  0BA7               	decfsz	??_uart_init_brg+1,f
  4329     07A9  2FA4               	goto	u3347
  4330     07AA  3200               	nop2
  4331     07AB                     l3124:
  4332                           
  4333                           ;uart.c: 113:         if ( BAUDCONbits.ABDOVF ) {
  4334     07AB  0023               	movlb	3	; select bank3
  4335     07AC  1F9F               	btfss	31,7	;volatile
  4336     07AD  2FAF               	goto	u3071
  4337     07AE  2FB0               	goto	u3070
  4338     07AF                     u3071:
  4339     07AF  2F86               	goto	l3116
  4340     07B0                     u3070:
  4341     07B0                     l3126:
  4342                           
  4343                           ;uart.c: 114:             BAUDCONbits.ABDOVF = 0;
  4344     07B0  139F               	bcf	31,7	;volatile
  4345     07B1  2F86               	goto	l3116
  4346     07B2                     l3128:
  4347                           
  4348                           ;uart.c: 119:     rate = (SPBRGH << 8) | SPBRG;
  4349     07B2  081C               	movf	28,w	;volatile
  4350     07B3  0020               	movlb	0	; select bank0
  4351     07B4  00A6               	movwf	??_uart_init_brg
  4352     07B5  01A7               	clrf	??_uart_init_brg+1
  4353     07B6  0826               	movf	??_uart_init_brg,w
  4354     07B7  00A7               	movwf	??_uart_init_brg+1
  4355     07B8  01A6               	clrf	??_uart_init_brg
  4356     07B9  0023               	movlb	3	; select bank3
  4357     07BA  081B               	movf	27,w	;volatile
  4358     07BB  0020               	movlb	0	; select bank0
  4359     07BC  0426               	iorwf	??_uart_init_brg,w
  4360     07BD  00A9               	movwf	??_uart_init_brg+3
  4361     07BE  0023               	movlb	3	; select bank3
  4362     07BF  081C               	movf	28,w	;volatile
  4363     07C0  0020               	movlb	0	; select bank0
  4364     07C1  0427               	iorwf	??_uart_init_brg+1,w
  4365     07C2  00AA               	movwf	??_uart_init_brg+4
  4366     07C3  0829               	movf	??_uart_init_brg+3,w
  4367     07C4  00AB               	movwf	uart_init_brg@rate
  4368     07C5  082A               	movf	??_uart_init_brg+4,w
  4369     07C6  00AC               	movwf	uart_init_brg@rate+1
  4370     07C7                     l3130:
  4371                           
  4372                           ;uart.c: 122:     PORTCbits.RC4 = 0;
  4373     07C7  120E               	bcf	14,4	;volatile
  4374     07C8                     l3132:
  4375                           
  4376                           ;uart.c: 125:     PIE1bits.RCIE=1;
  4377     07C8  0021               	movlb	1	; select bank1
  4378     07C9  1691               	bsf	17,5	;volatile
  4379                           
  4380                           ;uart.c: 127:     return rate;
  4381     07CA  0020               	movlb	0	; select bank0
  4382     07CB  082C               	movf	uart_init_brg@rate+1,w
  4383     07CC  00A5               	movwf	?_uart_init_brg+1
  4384     07CD  082B               	movf	uart_init_brg@rate,w
  4385     07CE  00A4               	movwf	?_uart_init_brg
  4386     07CF                     l226:
  4387     07CF  0008               	return
  4388     07D0                     __end_of_uart_init_brg:
  4389                           
  4390                           	psect	text15
  4391     035C                     __ptext15:	
  4392 ;; *************** function _do_blank *****************
  4393 ;; Defined at:
  4394 ;;		line 332 in file "main.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  data            1   46[BANK1 ] unsigned char 
  4399 ;;  ads            32   13[BANK1 ] unsigned char [32]
  4400 ;;  addr            2   49[BANK1 ] unsigned short 
  4401 ;;  s               2   47[BANK1 ] PTR unsigned char 
  4402 ;;		 -> STR_6(3), STR_2(15), 
  4403 ;;  ok              1   45[BANK1 ] _Bool 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4414 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4415 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4416 ;;      Totals:         0       2      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4417 ;;Total ram usage:       40 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 11
  4420 ;; This function calls:
  4421 ;;		_read_port
  4422 ;;		_setup_address
  4423 ;;		_sprintf
  4424 ;;		_uart_puts
  4425 ;; This function is called by:
  4426 ;;		_main
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430     035C                     _do_blank:	
  4431                           ;psect for function _do_blank
  4432                           
  4433     035C                     l3174:	
  4434                           ;incstack = 0
  4435                           ; Regs used in _do_blank: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4436                           
  4437                           
  4438                           ;main.c: 334:     uint16_t addr;;main.c: 335:     char ads[32];;main.c: 336:     _Bool o
      +                          k = 1;
  4439     035C  0021               	movlb	1	; select bank1
  4440     035D  01CD               	clrf	do_blank@ok^(0+128)
  4441     035E  0ACD               	incf	do_blank@ok^(0+128),f
  4442                           
  4443                           ;main.c: 337:     char *s;;main.c: 340:     LATCbits.LATC0 = 1;
  4444     035F  0022               	movlb	2	; select bank2
  4445     0360  140E               	bsf	14,0	;volatile
  4446                           
  4447                           ;main.c: 341:     LATCbits.LATC1 = 0;
  4448     0361  108E               	bcf	14,1	;volatile
  4449                           
  4450                           ;main.c: 342:     LATCbits.LATC2 = 1;
  4451     0362  150E               	bsf	14,2	;volatile
  4452     0363                     l3176:
  4453                           
  4454                           ;main.c: 344:     for (addr = 0; addr < 1048; ++addr) {
  4455     0363  0021               	movlb	1	; select bank1
  4456     0364  01D1               	clrf	do_blank@addr^(0+128)
  4457     0365  01D2               	clrf	(do_blank@addr+1)^(0+128)
  4458     0366                     l3182:
  4459                           
  4460                           ;main.c: 345:         if (cmd_active == 0) {
  4461     0366  085C               	movf	_cmd_active^(0+128),w
  4462     0367  1D03               	btfss	3,2
  4463     0368  2B6A               	goto	u3111
  4464     0369  2B6B               	goto	u3110
  4465     036A                     u3111:
  4466     036A  2B7A               	goto	l3190
  4467     036B                     u3110:
  4468     036B                     l3184:
  4469                           
  4470                           ;main.c: 346:             s = "Check aborted\n";
  4471     036B  302C               	movlw	low (STR_2| (0+32768))
  4472     036C  00CF               	movwf	do_blank@s^(0+128)
  4473     036D  3090               	movlw	high (STR_2| (0+32768))
  4474     036E  00D0               	movwf	(do_blank@s^(0+128)+1)
  4475     036F                     l3186:
  4476                           
  4477                           ;main.c: 347:             uart_puts(s);
  4478     036F  0850               	movf	(do_blank@s+1)^(0+128),w
  4479     0370  0020               	movlb	0	; select bank0
  4480     0371  00A5               	movwf	uart_puts@s+1
  4481     0372  0021               	movlb	1	; select bank1
  4482     0373  084F               	movf	do_blank@s^(0+128),w
  4483     0374  0020               	movlb	0	; select bank0
  4484     0375  00A4               	movwf	uart_puts@s
  4485     0376  3187  27D0  3183   	fcall	_uart_puts
  4486     0379  2BE6               	goto	l137
  4487     037A                     l3190:
  4488                           
  4489                           ;main.c: 352:         setup_address(addr);
  4490     037A  0852               	movf	(do_blank@addr+1)^(0+128),w
  4491     037B  0020               	movlb	0	; select bank0
  4492     037C  00A5               	movwf	setup_address@addr+1
  4493     037D  0021               	movlb	1	; select bank1
  4494     037E  0851               	movf	do_blank@addr^(0+128),w
  4495     037F  0020               	movlb	0	; select bank0
  4496     0380  00A4               	movwf	setup_address@addr
  4497     0381  318D  2532  3183   	fcall	_setup_address
  4498     0384                     l3192:
  4499                           
  4500                           ;main.c: 355:         uint8_t data = read_port();
  4501     0384  318D  2542  3183   	fcall	_read_port
  4502     0387  0021               	movlb	1	; select bank1
  4503     0388  00CE               	movwf	do_blank@data^(0+128)
  4504     0389                     l3194:
  4505                           
  4506                           ;main.c: 357:         if (data != 0xff) {
  4507     0389  0A4E               	incf	do_blank@data^(0+128),w
  4508     038A  1903               	btfsc	3,2
  4509     038B  2B8D               	goto	u3121
  4510     038C  2B8E               	goto	u3120
  4511     038D                     u3121:
  4512     038D  2BCC               	goto	l3206
  4513     038E                     u3120:
  4514     038E                     l3196:
  4515                           
  4516                           ;main.c: 358:             uart_puts("Erase check fail at address ");
  4517     038E  3000               	movlw	low (STR_3| (0+32768))
  4518     038F  0020               	movlb	0	; select bank0
  4519     0390  00A4               	movwf	uart_puts@s
  4520     0391  3090               	movlw	high (STR_3| (0+32768))
  4521     0392  00A5               	movwf	uart_puts@s+1
  4522     0393  3187  27D0  3183   	fcall	_uart_puts
  4523     0396                     l3198:
  4524                           
  4525                           ;main.c: 359:             sprintf(ads, "0x%04x = ", addr);
  4526     0396  3056               	movlw	low (STR_4| (0+32768))
  4527     0397  0020               	movlb	0	; select bank0
  4528     0398  00DB               	movwf	sprintf@fmt
  4529     0399  3090               	movlw	high (STR_4| (0+32768))
  4530     039A  00DC               	movwf	sprintf@fmt+1
  4531     039B  0021               	movlb	1	; select bank1
  4532     039C  0852               	movf	(do_blank@addr+1)^(0+128),w
  4533     039D  0020               	movlb	0	; select bank0
  4534     039E  00DE               	movwf	?_sprintf+3
  4535     039F  0021               	movlb	1	; select bank1
  4536     03A0  0851               	movf	do_blank@addr^(0+128),w
  4537     03A1  0020               	movlb	0	; select bank0
  4538     03A2  00DD               	movwf	?_sprintf+2
  4539     03A3  30AD               	movlw	(low (do_blank@ads| 0))& (0+255)
  4540     03A4  318E  263B  3183   	fcall	_sprintf
  4541     03A7                     l3200:
  4542                           
  4543                           ;main.c: 360:             uart_puts(ads);
  4544     03A7  30AD               	movlw	low do_blank@ads
  4545     03A8  0020               	movlb	0	; select bank0
  4546     03A9  00A4               	movwf	uart_puts@s
  4547     03AA  3000               	movlw	high do_blank@ads
  4548     03AB  00A5               	movwf	uart_puts@s+1
  4549     03AC  3187  27D0  3183   	fcall	_uart_puts
  4550                           
  4551                           ;main.c: 361:             sprintf(ads, "0x%02x\n", data);
  4552     03AF  3060               	movlw	low (STR_5| (0+32768))
  4553     03B0  0020               	movlb	0	; select bank0
  4554     03B1  00DB               	movwf	sprintf@fmt
  4555     03B2  3090               	movlw	high (STR_5| (0+32768))
  4556     03B3  00DC               	movwf	sprintf@fmt+1
  4557     03B4  0021               	movlb	1	; select bank1
  4558     03B5  084E               	movf	do_blank@data^(0+128),w
  4559     03B6  0020               	movlb	0	; select bank0
  4560     03B7  00E0               	movwf	??_do_blank
  4561     03B8  01E1               	clrf	??_do_blank+1
  4562     03B9  0860               	movf	??_do_blank,w
  4563     03BA  00DD               	movwf	?_sprintf+2
  4564     03BB  0861               	movf	??_do_blank+1,w
  4565     03BC  00DE               	movwf	?_sprintf+3
  4566     03BD  30AD               	movlw	(low (do_blank@ads| 0))& (0+255)
  4567     03BE  318E  263B  3183   	fcall	_sprintf
  4568     03C1                     l3202:
  4569                           
  4570                           ;main.c: 362:             uart_puts(ads);
  4571     03C1  30AD               	movlw	low do_blank@ads
  4572     03C2  0020               	movlb	0	; select bank0
  4573     03C3  00A4               	movwf	uart_puts@s
  4574     03C4  3000               	movlw	high do_blank@ads
  4575     03C5  00A5               	movwf	uart_puts@s+1
  4576     03C6  3187  27D0  3183   	fcall	_uart_puts
  4577     03C9                     l3204:
  4578                           
  4579                           ;main.c: 363:             ok = 0;
  4580     03C9  0021               	movlb	1	; select bank1
  4581     03CA  01CD               	clrf	do_blank@ok^(0+128)
  4582                           
  4583                           ;main.c: 364:             break;
  4584     03CB  2BD9               	goto	l135
  4585     03CC                     l3206:
  4586                           
  4587                           ;main.c: 366:     }
  4588     03CC  3001               	movlw	1
  4589     03CD  07D1               	addwf	do_blank@addr^(0+128),f
  4590     03CE  3000               	movlw	0
  4591     03CF  3DD2               	addwfc	(do_blank@addr+1)^(0+128),f
  4592     03D0  3004               	movlw	4
  4593     03D1  0252               	subwf	(do_blank@addr+1)^(0+128),w
  4594     03D2  3018               	movlw	24
  4595     03D3  1903               	skipnz
  4596     03D4  0251               	subwf	do_blank@addr^(0+128),w
  4597     03D5  1C03               	skipc
  4598     03D6  2BD8               	goto	u3131
  4599     03D7  2BD9               	goto	u3130
  4600     03D8                     u3131:
  4601     03D8  2B66               	goto	l3182
  4602     03D9                     u3130:
  4603     03D9                     l135:
  4604                           
  4605                           ;main.c: 369:     LATCbits.LATC1 = 1;
  4606     03D9  0022               	movlb	2	; select bank2
  4607     03DA  148E               	bsf	14,1	;volatile
  4608     03DB                     l3208:
  4609                           
  4610                           ;main.c: 371:     if (ok) {
  4611     03DB  0021               	movlb	1	; select bank1
  4612     03DC  084D               	movf	do_blank@ok^(0+128),w
  4613     03DD  1903               	btfsc	3,2
  4614     03DE  2BE0               	goto	u3141
  4615     03DF  2BE1               	goto	u3140
  4616     03E0                     u3141:
  4617     03E0  2BE6               	goto	l137
  4618     03E1                     u3140:
  4619     03E1                     l3210:
  4620                           
  4621                           ;main.c: 372:         s = "OK";
  4622     03E1  307D               	movlw	low (STR_6| (0+32768))
  4623     03E2  00CF               	movwf	do_blank@s^(0+128)
  4624     03E3  3090               	movlw	high (STR_6| (0+32768))
  4625     03E4  00D0               	movwf	(do_blank@s^(0+128)+1)
  4626     03E5  2B6F               	goto	l3186
  4627     03E6                     l137:
  4628     03E6  0008               	return
  4629     03E7                     __end_of_do_blank:
  4630                           
  4631                           	psect	text16
  4632     07D0                     __ptext16:	
  4633 ;; *************** function _uart_puts *****************
  4634 ;; Defined at:
  4635 ;;		line 180 in file "uart.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  s               2    4[BANK0 ] PTR unsigned char 
  4638 ;;		 -> STR_13(5), STR_12(13), do_write@ads(2), STR_10(15), 
  4639 ;;		 -> do_read@ads(16), STR_7(14), STR_6(3), do_blank@ads(32), 
  4640 ;;		 -> STR_3(29), STR_2(15), do_init@s(8), 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  p               2    7[BANK0 ] PTR unsigned char 
  4643 ;;		 -> STR_13(5), STR_12(13), do_write@ads(2), STR_10(15), 
  4644 ;;		 -> do_read@ads(16), STR_7(14), STR_6(3), do_blank@ads(32), 
  4645 ;;		 -> STR_3(29), STR_2(15), do_init@s(8), 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4655 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4656 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4658 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4659 ;;Total ram usage:        5 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 3
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_do_init
  4666 ;;		_do_blank
  4667 ;;		_do_read
  4668 ;;		_do_write
  4669 ;;		_main
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673     07D0                     _uart_puts:	
  4674                           ;psect for function _uart_puts
  4675                           
  4676     07D0                     l3148:	
  4677                           ;incstack = 0
  4678                           ; Regs used in _uart_puts: [wreg-fsr0h+status,2+status,0+pclath]
  4679                           
  4680                           
  4681                           ;uart.c: 180: void uart_puts(char *s);uart.c: 181: {;uart.c: 183:     while (PIR1bits.TX
      +                          IF == 0) {
  4682     07D0  2FD2               	goto	l246
  4683     07D1                     l247:
  4684                           
  4685                           ;uart.c: 184:         __nop();
  4686     07D1  0000               	nop
  4687     07D2                     l246:	
  4688                           ;uart.c: 185:     }
  4689                           
  4690                           
  4691                           ;uart.c: 183:     while (PIR1bits.TXIF == 0) {
  4692     07D2  0020               	movlb	0	; select bank0
  4693     07D3  1E11               	btfss	17,4	;volatile
  4694     07D4  2FD6               	goto	u3081
  4695     07D5  2FD7               	goto	u3080
  4696     07D6                     u3081:
  4697     07D6  2FD1               	goto	l247
  4698     07D7                     u3080:
  4699     07D7                     l3150:
  4700                           
  4701                           ;uart.c: 188:     char *p = s;
  4702     07D7  0825               	movf	uart_puts@s+1,w
  4703     07D8  00A8               	movwf	uart_puts@p+1
  4704     07D9  0824               	movf	uart_puts@s,w
  4705     07DA  00A7               	movwf	uart_puts@p
  4706                           
  4707                           ;uart.c: 189:     while (*p) {
  4708     07DB  2FEF               	goto	l3156
  4709     07DC                     l3152:
  4710                           
  4711                           ;uart.c: 190:         TXREG = *p++;
  4712     07DC  0827               	movf	uart_puts@p,w
  4713     07DD  0084               	movwf	4
  4714     07DE  0828               	movf	uart_puts@p+1,w
  4715     07DF  0085               	movwf	5
  4716     07E0  0800               	movf	0,w	;code access
  4717     07E1  0023               	movlb	3	; select bank3
  4718     07E2  009A               	movwf	26	;volatile
  4719     07E3                     l3154:
  4720     07E3  3001               	movlw	1
  4721     07E4  0020               	movlb	0	; select bank0
  4722     07E5  07A7               	addwf	uart_puts@p,f
  4723     07E6  3000               	movlw	0
  4724     07E7  3DA8               	addwfc	uart_puts@p+1,f
  4725                           
  4726                           ;uart.c: 191:         while(TXSTAbits.TRMT == 0) {
  4727     07E8  2FEA               	goto	l251
  4728     07E9                     l252:
  4729                           
  4730                           ;uart.c: 192:             __nop();
  4731     07E9  0000               	nop
  4732     07EA                     l251:	
  4733                           ;uart.c: 193:         }
  4734                           
  4735                           
  4736                           ;uart.c: 191:         while(TXSTAbits.TRMT == 0) {
  4737     07EA  0023               	movlb	3	; select bank3
  4738     07EB  1C9E               	btfss	30,1	;volatile
  4739     07EC  2FEE               	goto	u3091
  4740     07ED  2FEF               	goto	u3090
  4741     07EE                     u3091:
  4742     07EE  2FE9               	goto	l252
  4743     07EF                     u3090:
  4744     07EF                     l3156:
  4745                           
  4746                           ;uart.c: 189:     while (*p) {
  4747     07EF  0020               	movlb	0	; select bank0
  4748     07F0  0827               	movf	uart_puts@p,w
  4749     07F1  0084               	movwf	4
  4750     07F2  0828               	movf	uart_puts@p+1,w
  4751     07F3  0085               	movwf	5
  4752     07F4  0012               	moviw fsr0++
  4753     07F5  1D03               	btfss	3,2
  4754     07F6  2FF8               	goto	u3101
  4755     07F7  2FF9               	goto	u3100
  4756     07F8                     u3101:
  4757     07F8  2FDC               	goto	l3152
  4758     07F9                     u3100:
  4759     07F9                     l255:
  4760     07F9  0008               	return
  4761     07FA                     __end_of_uart_puts:
  4762                           
  4763                           	psect	text17
  4764     0E3B                     __ptext17:	
  4765 ;; *************** function _sprintf *****************
  4766 ;; Defined at:
  4767 ;;		line 9 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_sprintf.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  s               1    wreg     PTR unsigned char 
  4770 ;;		 -> do_write@ads(2), do_read@ads(16), do_blank@ads(32), do_init@s(8), 
  4771 ;;  fmt             2   59[BANK0 ] PTR const unsigned char 
  4772 ;;		 -> STR_11(3), STR_9(5), STR_8(7), STR_5(8), 
  4773 ;;		 -> STR_4(10), STR_1(4), 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  s               1    1[BANK1 ] PTR unsigned char 
  4776 ;;		 -> do_write@ads(2), do_read@ads(16), do_blank@ads(32), do_init@s(8), 
  4777 ;;  f              11    2[BANK1 ] struct _IO_FILE
  4778 ;;  ret             2    0        int 
  4779 ;;  ap              1    0[BANK1 ] PTR void [1]
  4780 ;;		 -> ?_sprintf(2), 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  2   59[BANK0 ] int 
  4783 ;; Registers used:
  4784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4790 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4791 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4792 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4793 ;;      Totals:         0       5      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4794 ;;Total ram usage:       18 bytes
  4795 ;; Hardware stack levels used: 1
  4796 ;; Hardware stack levels required when called: 10
  4797 ;; This function calls:
  4798 ;;		_vfprintf
  4799 ;; This function is called by:
  4800 ;;		_do_init
  4801 ;;		_do_blank
  4802 ;;		_do_read
  4803 ;;		_do_write
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807     0E3B                     _sprintf:	
  4808                           ;psect for function _sprintf
  4809                           
  4810                           
  4811                           ;incstack = 0
  4812                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4813                           ;sprintf@s stored from wreg
  4814     0E3B  0021               	movlb	1	; select bank1
  4815     0E3C  00A1               	movwf	sprintf@s^(0+128)
  4816     0E3D                     l3136:
  4817     0E3D  305D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4818     0E3E  00A0               	movwf	sprintf@ap^(0+128)
  4819     0E3F  0821               	movf	sprintf@s^(0+128),w
  4820     0E40  00A2               	movwf	sprintf@f^(0+128)
  4821     0E41                     l3138:
  4822     0E41  01A4               	clrf	(sprintf@f^(0+128)+2)
  4823     0E42  01A5               	clrf	((sprintf@f+1)^(0+128)+2)
  4824     0E43                     l3140:
  4825     0E43  01AB               	clrf	(sprintf@f^(0+128)+9)
  4826     0E44  01AC               	clrf	((sprintf@f+1)^(0+128)+9)
  4827     0E45                     l3142:
  4828     0E45  0020               	movlb	0	; select bank0
  4829     0E46  085C               	movf	sprintf@fmt+1,w
  4830     0E47  00D5               	movwf	vfprintf@fmt+1
  4831     0E48  085B               	movf	sprintf@fmt,w
  4832     0E49  00D4               	movwf	vfprintf@fmt
  4833     0E4A  30A0               	movlw	(low (sprintf@ap| 0))& (0+255)
  4834     0E4B  00D6               	movwf	vfprintf@ap
  4835     0E4C  30A2               	movlw	(low (sprintf@f| 0))& (0+255)
  4836     0E4D  318D  25E5  318E   	fcall	_vfprintf
  4837     0E50                     l3144:
  4838     0E50  0021               	movlb	1	; select bank1
  4839     0E51  0824               	movf	(sprintf@f^(0+128)+2),w
  4840     0E52  0721               	addwf	sprintf@s^(0+128),w
  4841     0E53  0020               	movlb	0	; select bank0
  4842     0E54  00DF               	movwf	??_sprintf
  4843     0E55  085F               	movf	??_sprintf,w
  4844     0E56  0086               	movwf	6
  4845     0E57  0187               	clrf	7
  4846     0E58  0181               	clrf	1
  4847     0E59                     l874:
  4848     0E59  0008               	return
  4849     0E5A                     __end_of_sprintf:
  4850                           
  4851                           	psect	text18
  4852     0DE5                     __ptext18:	
  4853 ;; *************** function _vfprintf *****************
  4854 ;; Defined at:
  4855 ;;		line 1817 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  fp              1    wreg     PTR struct _IO_FILE
  4858 ;;		 -> sprintf@f(11), 
  4859 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  4860 ;;		 -> STR_11(3), STR_9(5), STR_8(7), STR_5(8), 
  4861 ;;		 -> STR_4(10), STR_1(4), 
  4862 ;;  ap              1   54[BANK0 ] PTR PTR void 
  4863 ;;		 -> sprintf@ap(1), 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  fp              1   56[BANK0 ] PTR struct _IO_FILE
  4866 ;;		 -> sprintf@f(11), 
  4867 ;;  cfmt            2   57[BANK0 ] PTR unsigned char 
  4868 ;;		 -> STR_11(3), STR_9(5), STR_8(7), STR_5(8), 
  4869 ;;		 -> STR_4(10), STR_1(4), 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  2   52[BANK0 ] int 
  4872 ;; Registers used:
  4873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4879 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4880 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4881 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4882 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4883 ;;Total ram usage:        7 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 9
  4886 ;; This function calls:
  4887 ;;		_vfpfcnvrt
  4888 ;; This function is called by:
  4889 ;;		_sprintf
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893     0DE5                     _vfprintf:	
  4894                           ;psect for function _vfprintf
  4895                           
  4896                           
  4897                           ;incstack = 0
  4898                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4899                           ;vfprintf@fp stored from wreg
  4900     0DE5  0020               	movlb	0	; select bank0
  4901     0DE6  00D8               	movwf	vfprintf@fp
  4902     0DE7                     l3052:
  4903                           
  4904                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  4905     0DE7  0855               	movf	vfprintf@fmt+1,w
  4906     0DE8  00DA               	movwf	vfprintf@cfmt+1
  4907     0DE9  0854               	movf	vfprintf@fmt,w
  4908     0DEA  00D9               	movwf	vfprintf@cfmt
  4909                           
  4910                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4911     0DEB  2DF4               	goto	l3056
  4912     0DEC                     l3054:
  4913                           
  4914                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(f
      +                          p, &cfmt, ap);
  4915     0DEC  3059               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4916     0DED  00C6               	movwf	vfpfcnvrt@fmt
  4917     0DEE  0856               	movf	vfprintf@ap,w
  4918     0DEF  00C7               	movwf	vfpfcnvrt@ap
  4919     0DF0  0858               	movf	vfprintf@fp,w
  4920     0DF1  3180  2073  318D   	fcall	_vfpfcnvrt
  4921     0DF4                     l3056:
  4922                           
  4923                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4924     0DF4  0020               	movlb	0	; select bank0
  4925     0DF5  0859               	movf	vfprintf@cfmt,w
  4926     0DF6  0084               	movwf	4
  4927     0DF7  085A               	movf	vfprintf@cfmt+1,w
  4928     0DF8  0085               	movwf	5
  4929     0DF9  0012               	moviw fsr0++
  4930     0DFA  1D03               	btfss	3,2
  4931     0DFB  2DFD               	goto	u3021
  4932     0DFC  2DFE               	goto	u3020
  4933     0DFD                     u3021:
  4934     0DFD  2DEC               	goto	l3054
  4935     0DFE                     u3020:
  4936     0DFE                     l3058:
  4937                           
  4938                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  4939     0DFE  01D4               	clrf	?_vfprintf
  4940     0DFF  01D5               	clrf	?_vfprintf+1
  4941     0E00                     l962:
  4942     0E00  0008               	return
  4943     0E01                     __end_of_vfprintf:
  4944                           
  4945                           	psect	text19
  4946     0073                     __ptext19:	
  4947 ;; *************** function _vfpfcnvrt *****************
  4948 ;; Defined at:
  4949 ;;		line 1177 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  fp              1    wreg     PTR struct _IO_FILE
  4952 ;;		 -> sprintf@f(11), 
  4953 ;;  fmt             1   38[BANK0 ] PTR PTR unsigned char 
  4954 ;;		 -> vfprintf@cfmt(2), 
  4955 ;;  ap              1   39[BANK0 ] PTR PTR void 
  4956 ;;		 -> sprintf@ap(1), 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
  4959 ;;		 -> sprintf@f(11), 
  4960 ;;  convarg         4   45[BANK0 ] struct .
  4961 ;;  cp              2   50[BANK0 ] PTR unsigned char 
  4962 ;;		 -> STR_11(3), STR_9(5), STR_8(7), STR_5(8), 
  4963 ;;		 -> STR_4(10), STR_1(4), 
  4964 ;;  done            1   44[BANK0 ] _Bool 
  4965 ;;  c               1    0        unsigned char 
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4976 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4977 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4978 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4979 ;;Total ram usage:       14 bytes
  4980 ;; Hardware stack levels used: 1
  4981 ;; Hardware stack levels required when called: 8
  4982 ;; This function calls:
  4983 ;;		_dtoa
  4984 ;;		_fputc
  4985 ;;		_read_prec_or_width
  4986 ;;		_xtoa
  4987 ;; This function is called by:
  4988 ;;		_vfprintf
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992     0073                     _vfpfcnvrt:	
  4993                           ;psect for function _vfpfcnvrt
  4994                           
  4995                           
  4996                           ;incstack = 0
  4997                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4998                           ;vfpfcnvrt@fp stored from wreg
  4999     0073  0020               	movlb	0	; select bank0
  5000     0074  00D1               	movwf	vfpfcnvrt@fp
  5001     0075                     l2978:
  5002                           
  5003                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 120
      +                          1:     if ((*fmt)[0] == '%') {
  5004     0075  0846               	movf	vfpfcnvrt@fmt,w
  5005     0076  0086               	movwf	6
  5006     0077  0187               	clrf	7
  5007     0078  3F40               	moviw [0]fsr1
  5008     0079  00C8               	movwf	??_vfpfcnvrt
  5009     007A  3F41               	moviw [1]fsr1
  5010     007B  00C9               	movwf	??_vfpfcnvrt+1
  5011     007C  0848               	movf	??_vfpfcnvrt,w
  5012     007D  0084               	movwf	4
  5013     007E  0849               	movf	??_vfpfcnvrt+1,w
  5014     007F  0085               	movwf	5
  5015     0080  0012               	moviw fsr0++
  5016     0081  3A25               	xorlw	37
  5017     0082  1D03               	btfss	3,2
  5018     0083  2885               	goto	u2951
  5019     0084  2886               	goto	u2950
  5020     0085                     u2951:
  5021     0085  2959               	goto	l3036
  5022     0086                     u2950:
  5023     0086                     l2980:
  5024                           
  5025                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  5026     0086  0846               	movf	vfpfcnvrt@fmt,w
  5027     0087  0086               	movwf	6
  5028     0088  0187               	clrf	7
  5029     0089  3001               	movlw	1
  5030     008A  0781               	addwf	1,f
  5031     008B  3141               	addfsr 1,1
  5032     008C  1803               	skipnc
  5033     008D  0A81               	incf	1,f
  5034     008E                     l2982:
  5035                           
  5036                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  5037     008E  0021               	movlb	1	; select bank1
  5038     008F  01D3               	clrf	_width^(0+128)
  5039     0090  01D4               	clrf	(_width+1)^(0+128)
  5040     0091  1003               	clrc
  5041     0092  3000               	movlw	0
  5042     0093  1803               	btfsc	3,0
  5043     0094  3001               	movlw	1
  5044     0095  0020               	movlb	0	; select bank0
  5045     0096  00E3               	movwf	_flags
  5046     0097                     l2984:
  5047                           
  5048                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  5049     0097  30FF               	movlw	255
  5050     0098  0021               	movlb	1	; select bank1
  5051     0099  00D5               	movwf	_prec^(0+128)
  5052     009A  30FF               	movlw	255
  5053     009B  00D6               	movwf	(_prec^(0+128)+1)
  5054     009C                     l2986:
  5055                           
  5056                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1209:         done =
      +                           0;
  5057     009C  0020               	movlb	0	; select bank0
  5058     009D  01CC               	clrf	vfpfcnvrt@done
  5059                           
  5060                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  5061     009E  28BC               	goto	l2994
  5062     009F                     l942:	
  5063                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1219:               
      +                            case '0' :
  5064                           
  5065                           
  5066                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1220:               
      +                                flags |= (1 << 1);
  5067     009F  14E3               	bsf	_flags,1
  5068     00A0                     l2988:
  5069                           
  5070                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1221:               
      +                                ++*fmt;
  5071     00A0  0846               	movf	vfpfcnvrt@fmt,w
  5072     00A1  0086               	movwf	6
  5073     00A2  0187               	clrf	7
  5074     00A3  3001               	movlw	1
  5075     00A4  0781               	addwf	1,f
  5076     00A5  3141               	addfsr 1,1
  5077     00A6  1803               	skipnc
  5078     00A7  0A81               	incf	1,f
  5079                           
  5080                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1222:               
      +                                break;
  5081     00A8  28BC               	goto	l2994
  5082     00A9                     l944:	
  5083                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1242:               
      +                            default:
  5084                           
  5085                           
  5086                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1243:               
      +                                done = 1;
  5087     00A9  01CC               	clrf	vfpfcnvrt@done
  5088     00AA  0ACC               	incf	vfpfcnvrt@done,f
  5089                           
  5090                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1244:               
      +                                break;
  5091     00AB  28BC               	goto	l2994
  5092     00AC                     l2992:
  5093     00AC  0846               	movf	vfpfcnvrt@fmt,w
  5094     00AD  0086               	movwf	6
  5095     00AE  0187               	clrf	7
  5096     00AF  3F40               	moviw [0]fsr1
  5097     00B0  00C8               	movwf	??_vfpfcnvrt
  5098     00B1  3F41               	moviw [1]fsr1
  5099     00B2  00C9               	movwf	??_vfpfcnvrt+1
  5100     00B3  0848               	movf	??_vfpfcnvrt,w
  5101     00B4  0084               	movwf	4
  5102     00B5  0849               	movf	??_vfpfcnvrt+1,w
  5103     00B6  0085               	movwf	5
  5104     00B7  0800               	movf	0,w	;code access
  5105                           
  5106                           ; Switch size 1, requested type "simple"
  5107                           ; Number of cases is 1, Range of values is 48 to 48
  5108                           ; switch strategies available:
  5109                           ; Name         Instructions Cycles
  5110                           ; simple_byte            4     3 (average)
  5111                           ; direct_byte           11     9 (fixed)
  5112                           ; jumptable            263     9 (fixed)
  5113                           ;	Chosen strategy is simple_byte
  5114     00B8  3A30               	xorlw	48	; case 48
  5115     00B9  1903               	skipnz
  5116     00BA  289F               	goto	l942
  5117     00BB  28A9               	goto	l944
  5118     00BC                     l2994:
  5119                           
  5120                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  5121     00BC  084C               	movf	vfpfcnvrt@done,w
  5122     00BD  1903               	btfsc	3,2
  5123     00BE  28C0               	goto	u2961
  5124     00BF  28C1               	goto	u2960
  5125     00C0                     u2961:
  5126     00C0  28AC               	goto	l2992
  5127     00C1                     u2960:
  5128     00C1                     l2996:
  5129                           
  5130                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1256:   width = read
      +                          _prec_or_width(fmt, ap);
  5131     00C1  0847               	movf	vfpfcnvrt@ap,w
  5132     00C2  00AA               	movwf	read_prec_or_width@ap
  5133     00C3  0846               	movf	vfpfcnvrt@fmt,w
  5134     00C4  3185  25C1  3180   	fcall	_read_prec_or_width
  5135     00C7  0020               	movlb	0	; select bank0
  5136     00C8  082B               	movf	?_read_prec_or_width+1,w
  5137     00C9  0021               	movlb	1	; select bank1
  5138     00CA  00D4               	movwf	(_width+1)^(0+128)
  5139     00CB  0020               	movlb	0	; select bank0
  5140     00CC  082A               	movf	?_read_prec_or_width,w
  5141     00CD  0021               	movlb	1	; select bank1
  5142     00CE  00D3               	movwf	_width^(0+128)
  5143     00CF                     l2998:
  5144                           
  5145                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1257:   if (width < 
      +                          0) {
  5146     00CF  1FD4               	btfss	(_width+1)^(0+128),7
  5147     00D0  28D2               	goto	u2971
  5148     00D1  28D3               	goto	u2970
  5149     00D2                     u2971:
  5150     00D2  28DB               	goto	l3004
  5151     00D3                     u2970:
  5152     00D3                     l3000:
  5153                           
  5154                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1
      +                           << 0);
  5155     00D3  0020               	movlb	0	; select bank0
  5156     00D4  1463               	bsf	_flags,0
  5157     00D5                     l3002:
  5158                           
  5159                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1259:    width = -wi
      +                          dth;
  5160     00D5  0021               	movlb	1	; select bank1
  5161     00D6  09D3               	comf	_width^(0+128),f
  5162     00D7  09D4               	comf	(_width+1)^(0+128),f
  5163     00D8  0AD3               	incf	_width^(0+128),f
  5164     00D9  1903               	skipnz
  5165     00DA  0AD4               	incf	(_width+1)^(0+128),f
  5166     00DB                     l3004:
  5167                           
  5168                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  5169     00DB  0020               	movlb	0	; select bank0
  5170     00DC  0846               	movf	vfpfcnvrt@fmt,w
  5171     00DD  0086               	movwf	6
  5172     00DE  0187               	clrf	7
  5173     00DF  3F40               	moviw [0]fsr1
  5174     00E0  00D2               	movwf	vfpfcnvrt@cp
  5175     00E1  3F41               	moviw [1]fsr1
  5176     00E2  00D3               	movwf	vfpfcnvrt@cp+1
  5177     00E3                     l3006:
  5178                           
  5179                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == '
      +                          d' || *cp == 'i') {
  5180     00E3  0852               	movf	vfpfcnvrt@cp,w
  5181     00E4  0084               	movwf	4
  5182     00E5  0853               	movf	vfpfcnvrt@cp+1,w
  5183     00E6  0085               	movwf	5
  5184     00E7  0012               	moviw fsr0++
  5185     00E8  3A64               	xorlw	100
  5186     00E9  1903               	btfsc	3,2
  5187     00EA  28EC               	goto	u2981
  5188     00EB  28ED               	goto	u2980
  5189     00EC                     u2981:
  5190     00EC  28F7               	goto	l3010
  5191     00ED                     u2980:
  5192     00ED                     l3008:
  5193     00ED  0852               	movf	vfpfcnvrt@cp,w
  5194     00EE  0084               	movwf	4
  5195     00EF  0853               	movf	vfpfcnvrt@cp+1,w
  5196     00F0  0085               	movwf	5
  5197     00F1  0012               	moviw fsr0++
  5198     00F2  3A69               	xorlw	105
  5199     00F3  1D03               	btfss	3,2
  5200     00F4  28F6               	goto	u2991
  5201     00F5  28F7               	goto	u2990
  5202     00F6                     u2991:
  5203     00F6  2919               	goto	l3018
  5204     00F7                     u2990:
  5205     00F7                     l3010:
  5206                           
  5207                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1404:    convarg.sin
      +                          t = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5208     00F7  0847               	movf	vfpfcnvrt@ap,w
  5209     00F8  0086               	movwf	6
  5210     00F9  0187               	clrf	7
  5211     00FA  0801               	movf	1,w
  5212     00FB  0084               	movwf	4
  5213     00FC  0185               	clrf	5
  5214     00FD  3002               	movlw	2
  5215     00FE  0781               	addwf	1,f
  5216     00FF  3F00               	moviw [0]fsr0
  5217     0100  00CD               	movwf	vfpfcnvrt@convarg
  5218     0101  3F01               	moviw [1]fsr0
  5219     0102  00CE               	movwf	vfpfcnvrt@convarg+1
  5220     0103                     l3012:
  5221                           
  5222                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1
      +                          ;
  5223     0103  0852               	movf	vfpfcnvrt@cp,w
  5224     0104  3E01               	addlw	1
  5225     0105  00C8               	movwf	??_vfpfcnvrt
  5226     0106  3000               	movlw	0
  5227     0107  3D53               	addwfc	vfpfcnvrt@cp+1,w
  5228     0108  00C9               	movwf	??_vfpfcnvrt+1
  5229     0109  0846               	movf	vfpfcnvrt@fmt,w
  5230     010A  0086               	movwf	6
  5231     010B  0187               	clrf	7
  5232     010C  0848               	movf	??_vfpfcnvrt,w
  5233     010D  3FC0               	movwi [0]fsr1
  5234     010E  0849               	movf	??_vfpfcnvrt+1,w
  5235     010F  3FC1               	movwi [1]fsr1
  5236     0110                     l3014:
  5237                           
  5238                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1432:    return (voi
      +                          d) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5239     0110  084E               	movf	vfpfcnvrt@convarg+1,w
  5240     0111  00BB               	movwf	dtoa@d+1
  5241     0112  084D               	movf	vfpfcnvrt@convarg,w
  5242     0113  00BA               	movwf	dtoa@d
  5243     0114  0851               	movf	vfpfcnvrt@fp,w
  5244     0115  3181  2172  3180   	fcall	_dtoa
  5245     0118  2971               	goto	l950
  5246     0119                     l3018:
  5247     0119  0852               	movf	vfpfcnvrt@cp,w
  5248     011A  0084               	movwf	4
  5249     011B  0853               	movf	vfpfcnvrt@cp+1,w
  5250     011C  0085               	movwf	5
  5251     011D  0012               	moviw fsr0++
  5252     011E  3A78               	xorlw	120
  5253     011F  1D03               	btfss	3,2
  5254     0120  2922               	goto	u3001
  5255     0121  2923               	goto	u3000
  5256     0122                     u3001:
  5257     0122  294F               	goto	l3032
  5258     0123                     u3000:
  5259     0123                     l3020:
  5260                           
  5261                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1452:     ) {;/Appli
      +                          cations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1495:    convarg.uint = (vf
      +                          pf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  5262     0123  0847               	movf	vfpfcnvrt@ap,w
  5263     0124  0086               	movwf	6
  5264     0125  0187               	clrf	7
  5265     0126  0801               	movf	1,w
  5266     0127  0084               	movwf	4
  5267     0128  0185               	clrf	5
  5268     0129  3002               	movlw	2
  5269     012A  0781               	addwf	1,f
  5270     012B  3F00               	moviw [0]fsr0
  5271     012C  00CD               	movwf	vfpfcnvrt@convarg
  5272     012D  3F01               	moviw [1]fsr0
  5273     012E  00CE               	movwf	vfpfcnvrt@convarg+1
  5274     012F                     l3022:
  5275                           
  5276                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1497:    *fmt = cp+1
      +                          ;
  5277     012F  0852               	movf	vfpfcnvrt@cp,w
  5278     0130  3E01               	addlw	1
  5279     0131  00C8               	movwf	??_vfpfcnvrt
  5280     0132  3000               	movlw	0
  5281     0133  3D53               	addwfc	vfpfcnvrt@cp+1,w
  5282     0134  00C9               	movwf	??_vfpfcnvrt+1
  5283     0135  0846               	movf	vfpfcnvrt@fmt,w
  5284     0136  0086               	movwf	6
  5285     0137  0187               	clrf	7
  5286     0138  0848               	movf	??_vfpfcnvrt,w
  5287     0139  3FC0               	movwi [0]fsr1
  5288     013A  0849               	movf	??_vfpfcnvrt+1,w
  5289     013B  3FC1               	movwi [1]fsr1
  5290                           
  5291                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1498:    switch (*cp
      +                          ) {
  5292     013C  2946               	goto	l3030
  5293     013D                     l3024:
  5294                           
  5295                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1586:      return (v
      +                          oid) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  5296     013D  084E               	movf	vfpfcnvrt@convarg+1,w
  5297     013E  00BB               	movwf	xtoa@d+1
  5298     013F  084D               	movf	vfpfcnvrt@convarg,w
  5299     0140  00BA               	movwf	xtoa@d
  5300     0141  0851               	movf	vfpfcnvrt@fp,w
  5301     0142  3184  2467  3180   	fcall	_xtoa
  5302     0145  2971               	goto	l950
  5303     0146                     l3030:
  5304     0146  0852               	movf	vfpfcnvrt@cp,w
  5305     0147  0084               	movwf	4
  5306     0148  0853               	movf	vfpfcnvrt@cp+1,w
  5307     0149  0085               	movwf	5
  5308     014A  0800               	movf	0,w	;code access
  5309                           
  5310                           ; Switch size 1, requested type "simple"
  5311                           ; Number of cases is 1, Range of values is 120 to 120
  5312                           ; switch strategies available:
  5313                           ; Name         Instructions Cycles
  5314                           ; simple_byte            4     3 (average)
  5315                           ; direct_byte           11     9 (fixed)
  5316                           ; jumptable            263     9 (fixed)
  5317                           ;	Chosen strategy is simple_byte
  5318     014B  3A78               	xorlw	120	; case 120
  5319     014C  1903               	skipnz
  5320     014D  293D               	goto	l3024
  5321     014E  294F               	goto	l3032
  5322     014F                     l3032:
  5323                           
  5324                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  5325     014F  0020               	movlb	0	; select bank0
  5326     0150  0846               	movf	vfpfcnvrt@fmt,w
  5327     0151  0086               	movwf	6
  5328     0152  0187               	clrf	7
  5329     0153  3001               	movlw	1
  5330     0154  0781               	addwf	1,f
  5331     0155  3141               	addfsr 1,1
  5332     0156  1803               	skipnc
  5333     0157  0A81               	incf	1,f
  5334     0158  2971               	goto	l950
  5335     0159                     l3036:
  5336                           
  5337                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  5338     0159  0846               	movf	vfpfcnvrt@fmt,w
  5339     015A  0086               	movwf	6
  5340     015B  0187               	clrf	7
  5341     015C  3F40               	moviw [0]fsr1
  5342     015D  00C8               	movwf	??_vfpfcnvrt
  5343     015E  3F41               	moviw [1]fsr1
  5344     015F  00C9               	movwf	??_vfpfcnvrt+1
  5345     0160  0848               	movf	??_vfpfcnvrt,w
  5346     0161  0084               	movwf	4
  5347     0162  0849               	movf	??_vfpfcnvrt+1,w
  5348     0163  0085               	movwf	5
  5349     0164  0800               	movf	0,w	;code access
  5350     0165  00CA               	movwf	??_vfpfcnvrt+2
  5351     0166  01CB               	clrf	??_vfpfcnvrt+3
  5352     0167  084A               	movf	??_vfpfcnvrt+2,w
  5353     0168  00A4               	movwf	fputc@c
  5354     0169  084B               	movf	??_vfpfcnvrt+3,w
  5355     016A  00A5               	movwf	fputc@c+1
  5356     016B  0851               	movf	vfpfcnvrt@fp,w
  5357     016C  00A6               	movwf	fputc@fp
  5358     016D  3187  2730  3180   	fcall	_fputc
  5359     0170  294F               	goto	l3032
  5360     0171                     l950:
  5361     0171  0008               	return
  5362     0172                     __end_of_vfpfcnvrt:
  5363                           
  5364                           	psect	text20
  5365     0467                     __ptext20:	
  5366 ;; *************** function _xtoa *****************
  5367 ;; Defined at:
  5368 ;;		line 1055 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  fp              1    wreg     PTR struct _IO_FILE
  5371 ;;		 -> sprintf@f(11), 
  5372 ;;  d               2   26[BANK0 ] unsigned int 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  5375 ;;		 -> sprintf@f(11), 
  5376 ;;  i               2   34[BANK0 ] int 
  5377 ;;  w               2   31[BANK0 ] int 
  5378 ;;  c               1   33[BANK0 ] unsigned char 
  5379 ;;  p               1   30[BANK0 ] _Bool 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5390 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5391 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5392 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5393 ;;Total ram usage:       10 bytes
  5394 ;; Hardware stack levels used: 1
  5395 ;; Hardware stack levels required when called: 7
  5396 ;; This function calls:
  5397 ;;		_pad
  5398 ;; This function is called by:
  5399 ;;		_vfpfcnvrt
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403     0467                     _xtoa:	
  5404                           ;psect for function _xtoa
  5405                           
  5406                           
  5407                           ;incstack = 0
  5408                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5409                           ;xtoa@fp stored from wreg
  5410     0467  0020               	movlb	0	; select bank0
  5411     0468  00BD               	movwf	xtoa@fp
  5412     0469                     l2912:
  5413                           
  5414                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1055: static void xt
      +                          oa(FILE *fp, vfpf_uint_t d);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/dop
      +                          rnt.c: 1058: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1059: 
      +                           char c;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1063:     in
      +                          t i, w;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1067:  _Bool 
      +                          p = 1;
  5415     0469  01BE               	clrf	xtoa@p
  5416     046A  0ABE               	incf	xtoa@p,f
  5417     046B                     l2914:
  5418                           
  5419                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1082:     w = width;
  5420     046B  0021               	movlb	1	; select bank1
  5421     046C  0854               	movf	(_width+1)^(0+128),w
  5422     046D  0020               	movlb	0	; select bank0
  5423     046E  00C0               	movwf	xtoa@w+1
  5424     046F  0021               	movlb	1	; select bank1
  5425     0470  0853               	movf	_width^(0+128),w
  5426     0471  0020               	movlb	0	; select bank0
  5427     0472  00BF               	movwf	xtoa@w
  5428                           
  5429                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1095:     i = sizeof
      +                          (dbuf) - 1;
  5430     0473  301F               	movlw	31
  5431     0474  00C2               	movwf	xtoa@i
  5432     0475  3000               	movlw	0
  5433     0476  00C3               	movwf	xtoa@i+1
  5434     0477                     l2916:
  5435                           
  5436                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1096:     dbuf[i] = 
      +                          '\0';
  5437     0477  0022               	movlb	2	; select bank2
  5438     0478  01BF               	clrf	(_dbuf^(0+256)+31)
  5439                           
  5440                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  5441     0479  2CA5               	goto	l2936
  5442     047A                     l2918:
  5443                           
  5444                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1106:     )) {;/Appl
      +                          ications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1107:         --i;
  5445     047A  30FF               	movlw	255
  5446     047B  07C2               	addwf	xtoa@i,f
  5447     047C  30FF               	movlw	255
  5448     047D  3DC3               	addwfc	xtoa@i+1,f
  5449     047E                     l2920:
  5450                           
  5451                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1108:         c = d 
      +                          & 0x0f;
  5452     047E  083A               	movf	xtoa@d,w
  5453     047F  390F               	andlw	15
  5454     0480  00C1               	movwf	xtoa@c
  5455     0481                     l2922:
  5456                           
  5457                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1109:   if (c < 10) 
      +                          {
  5458     0481  300A               	movlw	10
  5459     0482  0241               	subwf	xtoa@c,w
  5460     0483  1803               	skipnc
  5461     0484  2C86               	goto	u2861
  5462     0485  2C87               	goto	u2860
  5463     0486                     u2861:
  5464     0486  2C8C               	goto	l2926
  5465     0487                     u2860:
  5466     0487                     l2924:
  5467                           
  5468                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1110:    c += '0';
  5469     0487  3030               	movlw	48
  5470     0488  00BC               	movwf	??_xtoa
  5471     0489  083C               	movf	??_xtoa,w
  5472     048A  07C1               	addwf	xtoa@c,f
  5473                           
  5474                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1111:   }
  5475     048B  2C90               	goto	l2928
  5476     048C                     l2926:
  5477                           
  5478                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1116:    c += 'a' - 
      +                          10;
  5479     048C  3057               	movlw	87
  5480     048D  00BC               	movwf	??_xtoa
  5481     048E  083C               	movf	??_xtoa,w
  5482     048F  07C1               	addwf	xtoa@c,f
  5483     0490                     l2928:
  5484                           
  5485                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1121:   dbuf[i] = c;
  5486     0490  0842               	movf	xtoa@i,w
  5487     0491  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5488     0492  0086               	movwf	6
  5489     0493  3001               	movlw	1	; select bank2/3
  5490     0494  0087               	movwf	7
  5491     0495  0841               	movf	xtoa@c,w
  5492     0496  0081               	movwf	1
  5493     0497                     l2930:
  5494                           
  5495                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1125:   p = 0;
  5496     0497  01BE               	clrf	xtoa@p
  5497     0498                     l2932:
  5498                           
  5499                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1127:         --w;
  5500     0498  30FF               	movlw	255
  5501     0499  07BF               	addwf	xtoa@w,f
  5502     049A  30FF               	movlw	255
  5503     049B  3DC0               	addwfc	xtoa@w+1,f
  5504     049C                     l2934:
  5505                           
  5506                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1128:         d = d 
      +                          >> 4;
  5507     049C  0E3A               	swapf	xtoa@d,w
  5508     049D  390F               	andlw	15
  5509     049E  00BA               	movwf	xtoa@d
  5510     049F  0E3B               	swapf	xtoa@d+1,w
  5511     04A0  39F0               	andlw	240
  5512     04A1  04BA               	iorwf	xtoa@d,f
  5513     04A2  0E3B               	swapf	xtoa@d+1,w
  5514     04A3  390F               	andlw	15
  5515     04A4  00BB               	movwf	xtoa@d+1
  5516     04A5                     l2936:
  5517                           
  5518                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  5519     04A5  0020               	movlb	0	; select bank0
  5520     04A6  0843               	movf	xtoa@i+1,w
  5521     04A7  3A80               	xorlw	128
  5522     04A8  00BC               	movwf	??_xtoa
  5523     04A9  3080               	movlw	128
  5524     04AA  023C               	subwf	??_xtoa,w
  5525     04AB  1D03               	skipz
  5526     04AC  2CAF               	goto	u2875
  5527     04AD  3002               	movlw	2
  5528     04AE  0242               	subwf	xtoa@i,w
  5529     04AF                     u2875:
  5530     04AF  1C03               	skipc
  5531     04B0  2CB2               	goto	u2871
  5532     04B1  2CB3               	goto	u2870
  5533     04B2                     u2871:
  5534     04B2  2CD1               	goto	l2946
  5535     04B3                     u2870:
  5536     04B3                     l2938:
  5537     04B3  0020               	movlb	0	; select bank0
  5538     04B4  083A               	movf	xtoa@d,w
  5539     04B5  043B               	iorwf	xtoa@d+1,w
  5540     04B6  1D03               	btfss	3,2
  5541     04B7  2CB9               	goto	u2881
  5542     04B8  2CBA               	goto	u2880
  5543     04B9                     u2881:
  5544     04B9  2C7A               	goto	l2918
  5545     04BA                     u2880:
  5546     04BA                     l2940:
  5547     04BA  083E               	movf	xtoa@p,w
  5548     04BB  1D03               	btfss	3,2
  5549     04BC  2CBE               	goto	u2891
  5550     04BD  2CBF               	goto	u2890
  5551     04BE                     u2891:
  5552     04BE  2C7A               	goto	l2918
  5553     04BF                     u2890:
  5554     04BF                     l2942:
  5555     04BF  0840               	movf	xtoa@w+1,w
  5556     04C0  3A80               	xorlw	128
  5557     04C1  00BC               	movwf	??_xtoa
  5558     04C2  3080               	movlw	128
  5559     04C3  023C               	subwf	??_xtoa,w
  5560     04C4  1D03               	skipz
  5561     04C5  2CC8               	goto	u2905
  5562     04C6  3001               	movlw	1
  5563     04C7  023F               	subwf	xtoa@w,w
  5564     04C8                     u2905:
  5565     04C8  1C03               	skipc
  5566     04C9  2CCB               	goto	u2901
  5567     04CA  2CCC               	goto	u2900
  5568     04CB                     u2901:
  5569     04CB  2CD1               	goto	l2946
  5570     04CC                     u2900:
  5571     04CC                     l2944:
  5572     04CC  0020               	movlb	0	; select bank0
  5573     04CD  18E3               	btfsc	_flags,1
  5574     04CE  2CD0               	goto	u2911
  5575     04CF  2CD1               	goto	u2910
  5576     04D0                     u2911:
  5577     04D0  2C7A               	goto	l2918
  5578     04D1                     u2910:
  5579     04D1                     l2946:
  5580                           
  5581                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1152:     return (vo
      +                          id) pad(fp, &dbuf[i], w);
  5582     04D1  0020               	movlb	0	; select bank0
  5583     04D2  0842               	movf	xtoa@i,w
  5584     04D3  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5585     04D4  00B3               	movwf	pad@buf
  5586     04D5  0840               	movf	xtoa@w+1,w
  5587     04D6  00B5               	movwf	pad@p+1
  5588     04D7  083F               	movf	xtoa@w,w
  5589     04D8  00B4               	movwf	pad@p
  5590     04D9  083D               	movf	xtoa@fp,w
  5591     04DA  318F  2774  3184   	fcall	_pad
  5592     04DD                     l927:
  5593     04DD  0008               	return
  5594     04DE                     __end_of_xtoa:
  5595                           
  5596                           	psect	text21
  5597     05C1                     __ptext21:	
  5598 ;; *************** function _read_prec_or_width *****************
  5599 ;; Defined at:
  5600 ;;		line 1158 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  fmt             1    wreg     PTR PTR const unsigned c
  5603 ;;		 -> vfprintf@cfmt(2), 
  5604 ;;  ap              1   10[BANK0 ] PTR PTR void [1]
  5605 ;;		 -> sprintf@ap(1), 
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;  fmt             1   18[BANK0 ] PTR PTR const unsigned c
  5608 ;;		 -> vfprintf@cfmt(2), 
  5609 ;;  c               1   15[BANK0 ] unsigned char 
  5610 ;;  n               2   16[BANK0 ] int 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  2   10[BANK0 ] int 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5621 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5622 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5623 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5624 ;;Total ram usage:        9 bytes
  5625 ;; Hardware stack levels used: 1
  5626 ;; Hardware stack levels required when called: 4
  5627 ;; This function calls:
  5628 ;;		___wmul
  5629 ;; This function is called by:
  5630 ;;		_vfpfcnvrt
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634     05C1                     _read_prec_or_width:	
  5635                           ;psect for function _read_prec_or_width
  5636                           
  5637                           
  5638                           ;incstack = 0
  5639                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5640                           ;read_prec_or_width@fmt stored from wreg
  5641     05C1  0020               	movlb	0	; select bank0
  5642     05C2  00B2               	movwf	read_prec_or_width@fmt
  5643     05C3                     l2950:
  5644                           
  5645                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  5646     05C3  01B0               	clrf	read_prec_or_width@n
  5647     05C4  01B1               	clrf	read_prec_or_width@n+1
  5648     05C5                     l2952:
  5649                           
  5650                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)
      +                          [0] == '*') {
  5651     05C5  0832               	movf	read_prec_or_width@fmt,w
  5652     05C6  0086               	movwf	6
  5653     05C7  0187               	clrf	7
  5654     05C8  3F40               	moviw [0]fsr1
  5655     05C9  00AC               	movwf	??_read_prec_or_width
  5656     05CA  3F41               	moviw [1]fsr1
  5657     05CB  00AD               	movwf	??_read_prec_or_width+1
  5658     05CC  082C               	movf	??_read_prec_or_width,w
  5659     05CD  0084               	movwf	4
  5660     05CE  082D               	movf	??_read_prec_or_width+1,w
  5661     05CF  0085               	movwf	5
  5662     05D0  0012               	moviw fsr0++
  5663     05D1  3A2A               	xorlw	42
  5664     05D2  1D03               	btfss	3,2
  5665     05D3  2DD5               	goto	u2921
  5666     05D4  2DD6               	goto	u2920
  5667     05D5                     u2921:
  5668     05D5  2E08               	goto	l2962
  5669     05D6                     u2920:
  5670     05D6                     l2954:
  5671                           
  5672                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt
      +                          ;
  5673     05D6  0832               	movf	read_prec_or_width@fmt,w
  5674     05D7  0086               	movwf	6
  5675     05D8  0187               	clrf	7
  5676     05D9  3001               	movlw	1
  5677     05DA  0781               	addwf	1,f
  5678     05DB  3141               	addfsr 1,1
  5679     05DC  1803               	skipnc
  5680     05DD  0A81               	incf	1,f
  5681     05DE                     l2956:
  5682                           
  5683                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1162:         n = (*
      +                          (int *)__va_arg(*(int **)*ap, (int)0));
  5684     05DE  082A               	movf	read_prec_or_width@ap,w
  5685     05DF  0086               	movwf	6
  5686     05E0  0187               	clrf	7
  5687     05E1  0801               	movf	1,w
  5688     05E2  0084               	movwf	4
  5689     05E3  0185               	clrf	5
  5690     05E4  3002               	movlw	2
  5691     05E5  0781               	addwf	1,f
  5692     05E6  3F00               	moviw [0]fsr0
  5693     05E7  00B0               	movwf	read_prec_or_width@n
  5694     05E8  3F01               	moviw [1]fsr0
  5695     05E9  00B1               	movwf	read_prec_or_width@n+1
  5696                           
  5697                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1163:     } else {
  5698     05EA  2E1C               	goto	l2964
  5699     05EB                     l2958:
  5700                           
  5701                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1166:             n 
      +                          = n * 10 + c;
  5702     05EB  082F               	movf	read_prec_or_width@c,w
  5703     05EC  00AC               	movwf	??_read_prec_or_width
  5704     05ED  01AD               	clrf	??_read_prec_or_width+1
  5705     05EE  0831               	movf	read_prec_or_width@n+1,w
  5706     05EF  00A5               	movwf	___wmul@multiplier+1
  5707     05F0  0830               	movf	read_prec_or_width@n,w
  5708     05F1  00A4               	movwf	___wmul@multiplier
  5709     05F2  300A               	movlw	10
  5710     05F3  00A6               	movwf	___wmul@multiplicand
  5711     05F4  3000               	movlw	0
  5712     05F5  00A7               	movwf	___wmul@multiplicand+1
  5713     05F6  318E  267A  3185   	fcall	___wmul
  5714     05F9  0020               	movlb	0	; select bank0
  5715     05FA  082C               	movf	??_read_prec_or_width,w
  5716     05FB  0724               	addwf	?___wmul,w
  5717     05FC  00B0               	movwf	read_prec_or_width@n
  5718     05FD  082D               	movf	??_read_prec_or_width+1,w
  5719     05FE  3D25               	addwfc	?___wmul+1,w
  5720     05FF  00B1               	movwf	read_prec_or_width@n+1
  5721     0600                     l2960:
  5722                           
  5723                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1167:             ++
      +                          *fmt;
  5724     0600  0832               	movf	read_prec_or_width@fmt,w
  5725     0601  0086               	movwf	6
  5726     0602  0187               	clrf	7
  5727     0603  3001               	movlw	1
  5728     0604  0781               	addwf	1,f
  5729     0605  3141               	addfsr 1,1
  5730     0606  1803               	skipnc
  5731     0607  0A81               	incf	1,f
  5732     0608                     l2962:
  5733                           
  5734                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1165:         while 
      +                          ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  5735     0608  0832               	movf	read_prec_or_width@fmt,w
  5736     0609  0086               	movwf	6
  5737     060A  0187               	clrf	7
  5738     060B  3F40               	moviw [0]fsr1
  5739     060C  00AC               	movwf	??_read_prec_or_width
  5740     060D  3F41               	moviw [1]fsr1
  5741     060E  00AD               	movwf	??_read_prec_or_width+1
  5742     060F  082C               	movf	??_read_prec_or_width,w
  5743     0610  0084               	movwf	4
  5744     0611  082D               	movf	??_read_prec_or_width+1,w
  5745     0612  0085               	movwf	5
  5746     0613  0800               	movf	0,w	;code access
  5747     0614  3ED0               	addlw	208
  5748     0615  00AF               	movwf	read_prec_or_width@c
  5749     0616  300A               	movlw	10
  5750     0617  022F               	subwf	read_prec_or_width@c,w
  5751     0618  1C03               	skipc
  5752     0619  2E1B               	goto	u2931
  5753     061A  2E1C               	goto	u2930
  5754     061B                     u2931:
  5755     061B  2DEB               	goto	l2958
  5756     061C                     u2930:
  5757     061C                     l2964:
  5758                           
  5759                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1170:     return n;
  5760     061C  0831               	movf	read_prec_or_width@n+1,w
  5761     061D  00AB               	movwf	?_read_prec_or_width+1
  5762     061E  0830               	movf	read_prec_or_width@n,w
  5763     061F  00AA               	movwf	?_read_prec_or_width
  5764     0620                     l935:
  5765     0620  0008               	return
  5766     0621                     __end_of_read_prec_or_width:
  5767                           
  5768                           	psect	text22
  5769     0E7A                     __ptext22:	
  5770 ;; *************** function ___wmul *****************
  5771 ;; Defined at:
  5772 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul16.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5775 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  product         2    8[BANK0 ] unsigned int 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  2    4[BANK0 ] unsigned int 
  5780 ;; Registers used:
  5781 ;;		wreg, status,2, status,0
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5787 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5788 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5790 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5791 ;;Total ram usage:        6 bytes
  5792 ;; Hardware stack levels used: 1
  5793 ;; Hardware stack levels required when called: 3
  5794 ;; This function calls:
  5795 ;;		Nothing
  5796 ;; This function is called by:
  5797 ;;		_read_prec_or_width
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801     0E7A                     ___wmul:	
  5802                           ;psect for function ___wmul
  5803                           
  5804     0E7A                     l2746:	
  5805                           ;incstack = 0
  5806                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5807                           
  5808     0E7A  0020               	movlb	0	; select bank0
  5809     0E7B  01A8               	clrf	___wmul@product
  5810     0E7C  01A9               	clrf	___wmul@product+1
  5811     0E7D                     l2748:
  5812     0E7D  1C24               	btfss	___wmul@multiplier,0
  5813     0E7E  2E80               	goto	u2481
  5814     0E7F  2E81               	goto	u2480
  5815     0E80                     u2481:
  5816     0E80  2E85               	goto	l405
  5817     0E81                     u2480:
  5818     0E81                     l2750:
  5819     0E81  0826               	movf	___wmul@multiplicand,w
  5820     0E82  07A8               	addwf	___wmul@product,f
  5821     0E83  0827               	movf	___wmul@multiplicand+1,w
  5822     0E84  3DA9               	addwfc	___wmul@product+1,f
  5823     0E85                     l405:
  5824     0E85  3001               	movlw	1
  5825     0E86                     u2495:
  5826     0E86  35A6               	lslf	___wmul@multiplicand,f
  5827     0E87  0DA7               	rlf	___wmul@multiplicand+1,f
  5828     0E88  0B89               	decfsz	9,f
  5829     0E89  2E86               	goto	u2495
  5830     0E8A                     l2752:
  5831     0E8A  3001               	movlw	1
  5832     0E8B                     u2505:
  5833     0E8B  36A5               	lsrf	___wmul@multiplier+1,f
  5834     0E8C  0CA4               	rrf	___wmul@multiplier,f
  5835     0E8D  0B89               	decfsz	9,f
  5836     0E8E  2E8B               	goto	u2505
  5837     0E8F                     l2754:
  5838     0E8F  0824               	movf	___wmul@multiplier,w
  5839     0E90  0425               	iorwf	___wmul@multiplier+1,w
  5840     0E91  1D03               	btfss	3,2
  5841     0E92  2E94               	goto	u2511
  5842     0E93  2E95               	goto	u2510
  5843     0E94                     u2511:
  5844     0E94  2E7D               	goto	l2748
  5845     0E95                     u2510:
  5846     0E95                     l2756:
  5847     0E95  0829               	movf	___wmul@product+1,w
  5848     0E96  00A5               	movwf	?___wmul+1
  5849     0E97  0828               	movf	___wmul@product,w
  5850     0E98  00A4               	movwf	?___wmul
  5851     0E99                     l407:
  5852     0E99  0008               	return
  5853     0E9A                     __end_of___wmul:
  5854                           
  5855                           	psect	text23
  5856     0172                     __ptext23:	
  5857 ;; *************** function _dtoa *****************
  5858 ;; Defined at:
  5859 ;;		line 513 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  fp              1    wreg     PTR struct _IO_FILE
  5862 ;;		 -> sprintf@f(11), 
  5863 ;;  d               2   26[BANK0 ] int 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  5866 ;;		 -> sprintf@f(11), 
  5867 ;;  i               2   36[BANK0 ] int 
  5868 ;;  w               2   33[BANK0 ] int 
  5869 ;;  s               1   35[BANK0 ] unsigned char 
  5870 ;;  p               1   32[BANK0 ] _Bool 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5880 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5881 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5882 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5883 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5884 ;;Total ram usage:       12 bytes
  5885 ;; Hardware stack levels used: 1
  5886 ;; Hardware stack levels required when called: 7
  5887 ;; This function calls:
  5888 ;;		___awdiv
  5889 ;;		___awmod
  5890 ;;		_abs
  5891 ;;		_pad
  5892 ;; This function is called by:
  5893 ;;		_vfpfcnvrt
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897     0172                     _dtoa:	
  5898                           ;psect for function _dtoa
  5899                           
  5900                           
  5901                           ;incstack = 0
  5902                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5903                           ;dtoa@fp stored from wreg
  5904     0172  0020               	movlb	0	; select bank0
  5905     0173  00BD               	movwf	dtoa@fp
  5906     0174                     l2866:
  5907                           
  5908                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 513: static void dto
      +                          a(FILE *fp, vfpf_sint_t d);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/dopr
      +                          nt.c: 514: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 515:  ch
      +                          ar s;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 516:     int i,
      +                           w;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 520:  _Bool p = 1
      +                          ;
  5909     0174  01C0               	clrf	dtoa@p
  5910     0175  0AC0               	incf	dtoa@p,f
  5911     0176                     l2868:
  5912                           
  5913                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 524:     s = d < 0 ?
      +                           1 : 0;
  5914     0176  1BBB               	btfsc	dtoa@d+1,7
  5915     0177  2979               	goto	u2761
  5916     0178  297B               	goto	u2760
  5917     0179                     u2761:
  5918     0179  3001               	movlw	1
  5919     017A  297C               	goto	u2770
  5920     017B                     u2760:
  5921     017B  3000               	movlw	0
  5922     017C                     u2770:
  5923     017C  00C3               	movwf	dtoa@s
  5924                           
  5925                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 535:     w = width;
  5926     017D  0021               	movlb	1	; select bank1
  5927     017E  0854               	movf	(_width+1)^(0+128),w
  5928     017F  0020               	movlb	0	; select bank0
  5929     0180  00C2               	movwf	dtoa@w+1
  5930     0181  0021               	movlb	1	; select bank1
  5931     0182  0853               	movf	_width^(0+128),w
  5932     0183  0020               	movlb	0	; select bank0
  5933     0184  00C1               	movwf	dtoa@w
  5934     0185                     l2870:
  5935                           
  5936                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 536:     if (s
  5937     0185  0843               	movf	dtoa@s,w
  5938     0186  1903               	btfsc	3,2
  5939     0187  2989               	goto	u2781
  5940     0188  298A               	goto	u2780
  5941     0189                     u2781:
  5942     0189  299E               	goto	l902
  5943     018A                     u2780:
  5944     018A                     l2872:
  5945                           
  5946                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 540:     ) {;/Applic
      +                          ations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 541:         --w;
  5947     018A  30FF               	movlw	255
  5948     018B  07C1               	addwf	dtoa@w,f
  5949     018C  30FF               	movlw	255
  5950     018D  3DC2               	addwfc	dtoa@w+1,f
  5951     018E                     l2874:
  5952                           
  5953                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' :
      +                           '+';
  5954     018E  0843               	movf	dtoa@s,w
  5955     018F  1D03               	btfss	3,2
  5956     0190  2992               	goto	u2791
  5957     0191  2993               	goto	u2790
  5958     0192                     u2791:
  5959     0192  2998               	goto	l2878
  5960     0193                     u2790:
  5961     0193                     l2876:
  5962     0193  302B               	movlw	43
  5963     0194  00BE               	movwf	_dtoa$1197
  5964     0195  3000               	movlw	0
  5965     0196  00BF               	movwf	_dtoa$1197+1
  5966     0197  299C               	goto	l906
  5967     0198                     l2878:
  5968     0198  302D               	movlw	45
  5969     0199  00BE               	movwf	_dtoa$1197
  5970     019A  3000               	movlw	0
  5971     019B  00BF               	movwf	_dtoa$1197+1
  5972     019C                     l906:
  5973     019C  083E               	movf	_dtoa$1197,w
  5974     019D  00C3               	movwf	dtoa@s
  5975     019E                     l902:	
  5976                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 543:     }
  5977                           
  5978                           
  5979                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(
      +                          dbuf) - 1;
  5980     019E  301F               	movlw	31
  5981     019F  00C4               	movwf	dtoa@i
  5982     01A0  3000               	movlw	0
  5983     01A1  00C5               	movwf	dtoa@i+1
  5984     01A2                     l2880:
  5985                           
  5986                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '
      +                          \0';
  5987     01A2  0022               	movlb	2	; select bank2
  5988     01A3  01BF               	clrf	(_dbuf^(0+256)+31)
  5989                           
  5990                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 554:     while (!(i 
      +                          < 1) && (d != 0
  5991     01A4  29DA               	goto	l2892
  5992     01A5                     l2882:
  5993                           
  5994                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 563:     )) {;/Appli
      +                          cations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 564:         --i;
  5995     01A5  30FF               	movlw	255
  5996     01A6  07C4               	addwf	dtoa@i,f
  5997     01A7  30FF               	movlw	255
  5998     01A8  3DC5               	addwfc	dtoa@i+1,f
  5999     01A9                     l2884:
  6000                           
  6001                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 565:         dbuf[i]
      +                           = (char)((int)'0' + abs(d % 10));
  6002     01A9  0844               	movf	dtoa@i,w
  6003     01AA  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6004     01AB  0086               	movwf	6
  6005     01AC  3001               	movlw	1	; select bank2/3
  6006     01AD  0087               	movwf	7
  6007     01AE  300A               	movlw	10
  6008     01AF  00A4               	movwf	___awmod@divisor
  6009     01B0  3000               	movlw	0
  6010     01B1  00A5               	movwf	___awmod@divisor+1
  6011     01B2  083B               	movf	dtoa@d+1,w
  6012     01B3  00A7               	movwf	___awmod@dividend+1
  6013     01B4  083A               	movf	dtoa@d,w
  6014     01B5  00A6               	movwf	___awmod@dividend
  6015     01B6  3186  26DC  3181   	fcall	___awmod
  6016     01B9  0020               	movlb	0	; select bank0
  6017     01BA  0825               	movf	?___awmod+1,w
  6018     01BB  00AC               	movwf	abs@a+1
  6019     01BC  0824               	movf	?___awmod,w
  6020     01BD  00AB               	movwf	abs@a
  6021     01BE  318D  2565  3181   	fcall	_abs
  6022     01C1  0020               	movlb	0	; select bank0
  6023     01C2  082B               	movf	?_abs,w
  6024     01C3  3E30               	addlw	48
  6025     01C4  0081               	movwf	1
  6026     01C5                     l2886:
  6027                           
  6028                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 569:   p = 0;
  6029     01C5  01C0               	clrf	dtoa@p
  6030     01C6                     l2888:
  6031                           
  6032                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 571:         --w;
  6033     01C6  30FF               	movlw	255
  6034     01C7  07C1               	addwf	dtoa@w,f
  6035     01C8  30FF               	movlw	255
  6036     01C9  3DC2               	addwfc	dtoa@w+1,f
  6037     01CA                     l2890:
  6038                           
  6039                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 572:         d = d /
      +                           10;
  6040     01CA  300A               	movlw	10
  6041     01CB  00A4               	movwf	___awdiv@divisor
  6042     01CC  3000               	movlw	0
  6043     01CD  00A5               	movwf	___awdiv@divisor+1
  6044     01CE  083B               	movf	dtoa@d+1,w
  6045     01CF  00A7               	movwf	___awdiv@dividend+1
  6046     01D0  083A               	movf	dtoa@d,w
  6047     01D1  00A6               	movwf	___awdiv@dividend
  6048     01D2  3186  2621  3181   	fcall	___awdiv
  6049     01D5  0020               	movlb	0	; select bank0
  6050     01D6  0825               	movf	?___awdiv+1,w
  6051     01D7  00BB               	movwf	dtoa@d+1
  6052     01D8  0824               	movf	?___awdiv,w
  6053     01D9  00BA               	movwf	dtoa@d
  6054     01DA                     l2892:
  6055                           
  6056                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 554:     while (!(i 
      +                          < 1) && (d != 0
  6057     01DA  0020               	movlb	0	; select bank0
  6058     01DB  0845               	movf	dtoa@i+1,w
  6059     01DC  3A80               	xorlw	128
  6060     01DD  00BC               	movwf	??_dtoa
  6061     01DE  3080               	movlw	128
  6062     01DF  023C               	subwf	??_dtoa,w
  6063     01E0  1D03               	skipz
  6064     01E1  29E4               	goto	u2805
  6065     01E2  3001               	movlw	1
  6066     01E3  0244               	subwf	dtoa@i,w
  6067     01E4                     u2805:
  6068     01E4  1C03               	skipc
  6069     01E5  29E7               	goto	u2801
  6070     01E6  29E8               	goto	u2800
  6071     01E7                     u2801:
  6072     01E7  2A06               	goto	l2902
  6073     01E8                     u2800:
  6074     01E8                     l2894:
  6075     01E8  0020               	movlb	0	; select bank0
  6076     01E9  083A               	movf	dtoa@d,w
  6077     01EA  043B               	iorwf	dtoa@d+1,w
  6078     01EB  1D03               	btfss	3,2
  6079     01EC  29EE               	goto	u2811
  6080     01ED  29EF               	goto	u2810
  6081     01EE                     u2811:
  6082     01EE  29A5               	goto	l2882
  6083     01EF                     u2810:
  6084     01EF                     l2896:
  6085     01EF  0840               	movf	dtoa@p,w
  6086     01F0  1D03               	btfss	3,2
  6087     01F1  29F3               	goto	u2821
  6088     01F2  29F4               	goto	u2820
  6089     01F3                     u2821:
  6090     01F3  29A5               	goto	l2882
  6091     01F4                     u2820:
  6092     01F4                     l2898:
  6093     01F4  0842               	movf	dtoa@w+1,w
  6094     01F5  3A80               	xorlw	128
  6095     01F6  00BC               	movwf	??_dtoa
  6096     01F7  3080               	movlw	128
  6097     01F8  023C               	subwf	??_dtoa,w
  6098     01F9  1D03               	skipz
  6099     01FA  29FD               	goto	u2835
  6100     01FB  3001               	movlw	1
  6101     01FC  0241               	subwf	dtoa@w,w
  6102     01FD                     u2835:
  6103     01FD  1C03               	skipc
  6104     01FE  2A00               	goto	u2831
  6105     01FF  2A01               	goto	u2830
  6106     0200                     u2831:
  6107     0200  2A06               	goto	l2902
  6108     0201                     u2830:
  6109     0201                     l2900:
  6110     0201  0020               	movlb	0	; select bank0
  6111     0202  18E3               	btfsc	_flags,1
  6112     0203  2A05               	goto	u2841
  6113     0204  2A06               	goto	u2840
  6114     0205                     u2841:
  6115     0205  29A5               	goto	l2882
  6116     0206                     u2840:
  6117     0206                     l2902:
  6118                           
  6119                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 576:     if (s != 0)
      +                           {
  6120     0206  0020               	movlb	0	; select bank0
  6121     0207  0843               	movf	dtoa@s,w
  6122     0208  1903               	btfsc	3,2
  6123     0209  2A0B               	goto	u2851
  6124     020A  2A0C               	goto	u2850
  6125     020B                     u2851:
  6126     020B  2A17               	goto	l2908
  6127     020C                     u2850:
  6128     020C                     l2904:
  6129                           
  6130                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 577:         --i;
  6131     020C  30FF               	movlw	255
  6132     020D  07C4               	addwf	dtoa@i,f
  6133     020E  30FF               	movlw	255
  6134     020F  3DC5               	addwfc	dtoa@i+1,f
  6135     0210                     l2906:
  6136                           
  6137                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 578:         dbuf[i]
      +                           = s;
  6138     0210  0844               	movf	dtoa@i,w
  6139     0211  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6140     0212  0086               	movwf	6
  6141     0213  3001               	movlw	1	; select bank2/3
  6142     0214  0087               	movwf	7
  6143     0215  0843               	movf	dtoa@s,w
  6144     0216  0081               	movwf	1
  6145     0217                     l2908:
  6146                           
  6147                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 582:     return (voi
      +                          d) pad(fp, &dbuf[i], w);
  6148     0217  0844               	movf	dtoa@i,w
  6149     0218  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6150     0219  00B3               	movwf	pad@buf
  6151     021A  0842               	movf	dtoa@w+1,w
  6152     021B  00B5               	movwf	pad@p+1
  6153     021C  0841               	movf	dtoa@w,w
  6154     021D  00B4               	movwf	pad@p
  6155     021E  083D               	movf	dtoa@fp,w
  6156     021F  318F  2774  3181   	fcall	_pad
  6157     0222                     l915:
  6158     0222  0008               	return
  6159     0223                     __end_of_dtoa:
  6160                           
  6161                           	psect	text24
  6162     0F74                     __ptext24:	
  6163 ;; *************** function _pad *****************
  6164 ;; Defined at:
  6165 ;;		line 193 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  fp              1    wreg     PTR struct _IO_FILE
  6168 ;;		 -> sprintf@f(11), 
  6169 ;;  buf             1   19[BANK0 ] PTR unsigned char 
  6170 ;;		 -> dbuf(32), 
  6171 ;;  p               2   20[BANK0 ] int 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  fp              1   25[BANK0 ] PTR struct _IO_FILE
  6174 ;;		 -> sprintf@f(11), 
  6175 ;;  i               2   23[BANK0 ] int 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  1    wreg      void 
  6178 ;; Registers used:
  6179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6185 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6186 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6187 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6188 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6189 ;;Total ram usage:        7 bytes
  6190 ;; Hardware stack levels used: 1
  6191 ;; Hardware stack levels required when called: 6
  6192 ;; This function calls:
  6193 ;;		_fputc
  6194 ;;		_fputs
  6195 ;; This function is called by:
  6196 ;;		_dtoa
  6197 ;;		_xtoa
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201     0F74                     _pad:	
  6202                           ;psect for function _pad
  6203                           
  6204                           
  6205                           ;incstack = 0
  6206                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6207                           ;pad@fp stored from wreg
  6208     0F74  0020               	movlb	0	; select bank0
  6209     0F75  00B9               	movwf	pad@fp
  6210     0F76                     l2842:
  6211                           
  6212                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 193: static void pad
      +                          (FILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/do
      +                          prnt.c: 194: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 195:  
      +                             int i;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 199:     if
      +                           (flags & (1 << 0)) {
  6213     0F76  1C63               	btfss	_flags,0
  6214     0F77  2F79               	goto	u2711
  6215     0F78  2F7A               	goto	u2710
  6216     0F79                     u2711:
  6217     0F79  2F80               	goto	l2846
  6218     0F7A                     u2710:
  6219     0F7A                     l2844:
  6220                           
  6221                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 200:         fputs((
      +                          const char *)buf, fp);
  6222     0F7A  0839               	movf	pad@fp,w
  6223     0F7B  00AC               	movwf	fputs@fp
  6224     0F7C  0833               	movf	pad@buf,w
  6225     0F7D  318E  269A  318F   	fcall	_fputs
  6226     0F80                     l2846:
  6227                           
  6228                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  6229     0F80  0020               	movlb	0	; select bank0
  6230     0F81  1FB5               	btfss	pad@p+1,7
  6231     0F82  2F84               	goto	u2721
  6232     0F83  2F85               	goto	u2720
  6233     0F84                     u2721:
  6234     0F84  2F87               	goto	l894
  6235     0F85                     u2720:
  6236     0F85                     l2848:
  6237                           
  6238                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  6239     0F85  01B4               	clrf	pad@p
  6240     0F86  01B5               	clrf	pad@p+1
  6241     0F87                     l894:	
  6242                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 207:  }
  6243                           
  6244                           
  6245                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  6246     0F87  01B7               	clrf	pad@i
  6247     0F88  01B8               	clrf	pad@i+1
  6248                           
  6249                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6250     0F89  2F99               	goto	l2854
  6251     0F8A                     l2850:
  6252                           
  6253                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 210:         fputc('
      +                           ', fp);
  6254     0F8A  3020               	movlw	32
  6255     0F8B  0020               	movlb	0	; select bank0
  6256     0F8C  00A4               	movwf	fputc@c
  6257     0F8D  3000               	movlw	0
  6258     0F8E  00A5               	movwf	fputc@c+1
  6259     0F8F  0839               	movf	pad@fp,w
  6260     0F90  00A6               	movwf	fputc@fp
  6261     0F91  3187  2730  318F   	fcall	_fputc
  6262     0F94                     l2852:
  6263                           
  6264                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 211:         ++i;
  6265     0F94  3001               	movlw	1
  6266     0F95  0020               	movlb	0	; select bank0
  6267     0F96  07B7               	addwf	pad@i,f
  6268     0F97  3000               	movlw	0
  6269     0F98  3DB8               	addwfc	pad@i+1,f
  6270     0F99                     l2854:
  6271                           
  6272                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6273     0F99  0838               	movf	pad@i+1,w
  6274     0F9A  3A80               	xorlw	128
  6275     0F9B  00B6               	movwf	??_pad
  6276     0F9C  0835               	movf	pad@p+1,w
  6277     0F9D  3A80               	xorlw	128
  6278     0F9E  0236               	subwf	??_pad,w
  6279     0F9F  1D03               	skipz
  6280     0FA0  2FA3               	goto	u2735
  6281     0FA1  0834               	movf	pad@p,w
  6282     0FA2  0237               	subwf	pad@i,w
  6283     0FA3                     u2735:
  6284     0FA3  1C03               	skipc
  6285     0FA4  2FA6               	goto	u2731
  6286     0FA5  2FA7               	goto	u2730
  6287     0FA6                     u2731:
  6288     0FA6  2F8A               	goto	l2850
  6289     0FA7                     u2730:
  6290     0FA7                     l897:
  6291                           
  6292                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 216:     if (!(flags
      +                           & (1 << 0))) {
  6293     0FA7  0020               	movlb	0	; select bank0
  6294     0FA8  1863               	btfsc	_flags,0
  6295     0FA9  2FAB               	goto	u2741
  6296     0FAA  2FAC               	goto	u2740
  6297     0FAB                     u2741:
  6298     0FAB  2FB2               	goto	l899
  6299     0FAC                     u2740:
  6300     0FAC                     l2856:
  6301                           
  6302                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 218:         fputs((
      +                          const char *)buf, fp);
  6303     0FAC  0839               	movf	pad@fp,w
  6304     0FAD  00AC               	movwf	fputs@fp
  6305     0FAE  0833               	movf	pad@buf,w
  6306     0FAF  318E  269A  318F   	fcall	_fputs
  6307     0FB2                     l899:
  6308     0FB2  0008               	return
  6309     0FB3                     __end_of_pad:
  6310                           
  6311                           	psect	text25
  6312     0E9A                     __ptext25:	
  6313 ;; *************** function _fputs *****************
  6314 ;; Defined at:
  6315 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputs.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  s               1    wreg     PTR const unsigned char 
  6318 ;;		 -> dbuf(32), 
  6319 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  6320 ;;		 -> sprintf@f(11), 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  s               1   18[BANK0 ] PTR const unsigned char 
  6323 ;;		 -> dbuf(32), 
  6324 ;;  i               2   16[BANK0 ] int 
  6325 ;;  c               1   15[BANK0 ] unsigned char 
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  2   12[BANK0 ] int 
  6328 ;; Registers used:
  6329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6335 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6336 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6337 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6338 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6339 ;;Total ram usage:        7 bytes
  6340 ;; Hardware stack levels used: 1
  6341 ;; Hardware stack levels required when called: 5
  6342 ;; This function calls:
  6343 ;;		_fputc
  6344 ;; This function is called by:
  6345 ;;		_pad
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349     0E9A                     _fputs:	
  6350                           ;psect for function _fputs
  6351                           
  6352                           
  6353                           ;incstack = 0
  6354                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6355                           ;fputs@s stored from wreg
  6356     0E9A  0020               	movlb	0	; select bank0
  6357     0E9B  00B2               	movwf	fputs@s
  6358     0E9C                     l2738:
  6359     0E9C  01B0               	clrf	fputs@i
  6360     0E9D  01B1               	clrf	fputs@i+1
  6361     0E9E  2EB0               	goto	l2744
  6362     0E9F                     l2740:
  6363     0E9F  082F               	movf	fputs@c,w
  6364     0EA0  00AD               	movwf	??_fputs
  6365     0EA1  01AE               	clrf	??_fputs+1
  6366     0EA2  082D               	movf	??_fputs,w
  6367     0EA3  00A4               	movwf	fputc@c
  6368     0EA4  082E               	movf	??_fputs+1,w
  6369     0EA5  00A5               	movwf	fputc@c+1
  6370     0EA6  082C               	movf	fputs@fp,w
  6371     0EA7  00A6               	movwf	fputc@fp
  6372     0EA8  3187  2730  318E   	fcall	_fputc
  6373     0EAB                     l2742:
  6374     0EAB  3001               	movlw	1
  6375     0EAC  0020               	movlb	0	; select bank0
  6376     0EAD  07B0               	addwf	fputs@i,f
  6377     0EAE  3000               	movlw	0
  6378     0EAF  3DB1               	addwfc	fputs@i+1,f
  6379     0EB0                     l2744:
  6380     0EB0  0830               	movf	fputs@i,w
  6381     0EB1  0732               	addwf	fputs@s,w
  6382     0EB2  00AD               	movwf	??_fputs
  6383     0EB3  082D               	movf	??_fputs,w
  6384     0EB4  0086               	movwf	6
  6385     0EB5  3001               	movlw	1	; select bank2/3
  6386     0EB6  0087               	movwf	7
  6387     0EB7  0801               	movf	1,w
  6388     0EB8  00AF               	movwf	fputs@c
  6389     0EB9  082F               	movf	fputs@c,w
  6390     0EBA  1D03               	btfss	3,2
  6391     0EBB  2EBD               	goto	u2471
  6392     0EBC  2EBE               	goto	u2470
  6393     0EBD                     u2471:
  6394     0EBD  2E9F               	goto	l2740
  6395     0EBE                     u2470:
  6396     0EBE                     l989:
  6397     0EBE  0008               	return
  6398     0EBF                     __end_of_fputs:
  6399                           
  6400                           	psect	text26
  6401     0730                     __ptext26:	
  6402 ;; *************** function _fputc *****************
  6403 ;; Defined at:
  6404 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputc.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  c               2    4[BANK0 ] int 
  6407 ;;  fp              1    6[BANK0 ] PTR struct _IO_FILE
  6408 ;;		 -> sprintf@f(11), 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  2    4[BANK0 ] int 
  6413 ;; Registers used:
  6414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6420 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6422 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6423 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6424 ;;Total ram usage:        8 bytes
  6425 ;; Hardware stack levels used: 1
  6426 ;; Hardware stack levels required when called: 4
  6427 ;; This function calls:
  6428 ;;		_putch
  6429 ;; This function is called by:
  6430 ;;		_pad
  6431 ;;		_vfpfcnvrt
  6432 ;;		_fputs
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436     0730                     _fputc:	
  6437                           ;psect for function _fputc
  6438                           
  6439     0730                     l2722:	
  6440                           ;incstack = 0
  6441                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6442                           
  6443     0730  0020               	movlb	0	; select bank0
  6444     0731  0826               	movf	fputc@fp,w
  6445     0732  1903               	btfsc	3,2
  6446     0733  2F35               	goto	u2431
  6447     0734  2F36               	goto	u2430
  6448     0735                     u2431:
  6449     0735  2F3B               	goto	l2726
  6450     0736                     u2430:
  6451     0736                     l2724:
  6452     0736  0826               	movf	fputc@fp,w
  6453     0737  1D03               	btfss	3,2
  6454     0738  2F3A               	goto	u2441
  6455     0739  2F3B               	goto	u2440
  6456     073A                     u2441:
  6457     073A  2F40               	goto	l2728
  6458     073B                     u2440:
  6459     073B                     l2726:
  6460     073B  0824               	movf	fputc@c,w
  6461     073C  3187  27FC  3187   	fcall	_putch
  6462     073F  2F81               	goto	l981
  6463     0740                     l2728:
  6464     0740  0826               	movf	fputc@fp,w
  6465     0741  3E09               	addlw	9
  6466     0742  0086               	movwf	6
  6467     0743  0187               	clrf	7
  6468     0744  0016               	moviw fsr1++
  6469     0745  0401               	iorwf	1,w
  6470     0746  1903               	btfsc	3,2
  6471     0747  2F49               	goto	u2451
  6472     0748  2F4A               	goto	u2450
  6473     0749                     u2451:
  6474     0749  2F68               	goto	l2732
  6475     074A                     u2450:
  6476     074A                     l2730:
  6477     074A  0826               	movf	fputc@fp,w
  6478     074B  3E09               	addlw	9
  6479     074C  0086               	movwf	6
  6480     074D  0187               	clrf	7
  6481     074E  3F40               	moviw [0]fsr1
  6482     074F  00A7               	movwf	??_fputc
  6483     0750  3F41               	moviw [1]fsr1
  6484     0751  00A8               	movwf	??_fputc+1
  6485     0752  0826               	movf	fputc@fp,w
  6486     0753  3E02               	addlw	2
  6487     0754  0086               	movwf	6
  6488     0755  0187               	clrf	7
  6489     0756  3F40               	moviw [0]fsr1
  6490     0757  00A9               	movwf	??_fputc+2
  6491     0758  3F41               	moviw [1]fsr1
  6492     0759  00AA               	movwf	??_fputc+3
  6493     075A  082A               	movf	??_fputc+3,w
  6494     075B  3A80               	xorlw	128
  6495     075C  00AB               	movwf	??_fputc+4
  6496     075D  0828               	movf	??_fputc+1,w
  6497     075E  3A80               	xorlw	128
  6498     075F  022B               	subwf	??_fputc+4,w
  6499     0760  1D03               	skipz
  6500     0761  2F64               	goto	u2465
  6501     0762  0827               	movf	??_fputc,w
  6502     0763  0229               	subwf	??_fputc+2,w
  6503     0764                     u2465:
  6504     0764  1803               	skipnc
  6505     0765  2F67               	goto	u2461
  6506     0766  2F68               	goto	u2460
  6507     0767                     u2461:
  6508     0767  2F81               	goto	l981
  6509     0768                     u2460:
  6510     0768                     l2732:
  6511     0768  0020               	movlb	0	; select bank0
  6512     0769  0826               	movf	fputc@fp,w
  6513     076A  0086               	movwf	6
  6514     076B  0187               	clrf	7
  6515     076C  0826               	movf	fputc@fp,w
  6516     076D  3E02               	addlw	2
  6517     076E  0084               	movwf	4
  6518     076F  0185               	clrf	5
  6519     0770  0800               	movf	0,w
  6520     0771  0701               	addwf	1,w
  6521     0772  00A7               	movwf	??_fputc
  6522     0773  0827               	movf	??_fputc,w
  6523     0774  0086               	movwf	6
  6524     0775  0187               	clrf	7
  6525     0776  0824               	movf	fputc@c,w
  6526     0777  0081               	movwf	1
  6527     0778                     l2734:
  6528     0778  0826               	movf	fputc@fp,w
  6529     0779  3E02               	addlw	2
  6530     077A  0086               	movwf	6
  6531     077B  0187               	clrf	7
  6532     077C  3001               	movlw	1
  6533     077D  0781               	addwf	1,f
  6534     077E  3141               	addfsr 1,1
  6535     077F  1803               	skipnc
  6536     0780  0A81               	incf	1,f
  6537     0781                     l981:
  6538     0781  0008               	return
  6539     0782                     __end_of_fputc:
  6540                           
  6541                           	psect	text27
  6542     07FC                     __ptext27:	
  6543 ;; *************** function _putch *****************
  6544 ;; Defined at:
  6545 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/putch.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  c               1    wreg     unsigned char 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  c               1    0[COMMON] unsigned char 
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  1    wreg      void 
  6552 ;; Registers used:
  6553 ;;		wreg
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6563 ;;Total ram usage:        0 bytes
  6564 ;; Hardware stack levels used: 1
  6565 ;; Hardware stack levels required when called: 3
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		_fputc
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573     07FC                     _putch:	
  6574                           ;psect for function _putch
  6575                           
  6576     07FC                     l992:	
  6577                           ;incstack = 0
  6578                           ; Regs used in _putch: [wreg]
  6579                           
  6580     07FC  0008               	return
  6581     07FD                     __end_of_putch:
  6582                           
  6583                           	psect	text28
  6584     0D65                     __ptext28:	
  6585 ;; *************** function _abs *****************
  6586 ;; Defined at:
  6587 ;;		line 1 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/abs.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  a               2   11[BANK0 ] int 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;		None
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  2   11[BANK0 ] int 
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6603 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6604 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6605 ;;Total ram usage:        4 bytes
  6606 ;; Hardware stack levels used: 1
  6607 ;; Hardware stack levels required when called: 3
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_dtoa
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615     0D65                     _abs:	
  6616                           ;psect for function _abs
  6617                           
  6618     0D65                     l2858:	
  6619                           ;incstack = 0
  6620                           ; Regs used in _abs: [wreg+status,2+status,0]
  6621                           
  6622     0D65  0020               	movlb	0	; select bank0
  6623     0D66  1BAC               	btfsc	abs@a+1,7
  6624     0D67  2D69               	goto	u2751
  6625     0D68  2D6A               	goto	u2750
  6626     0D69                     u2751:
  6627     0D69  2D6B               	goto	l2862
  6628     0D6A                     u2750:
  6629     0D6A                     l2860:
  6630     0D6A  2D76               	goto	l969
  6631     0D6B                     l2862:
  6632     0D6B  092B               	comf	abs@a,w
  6633     0D6C  00AD               	movwf	??_abs
  6634     0D6D  092C               	comf	abs@a+1,w
  6635     0D6E  00AE               	movwf	??_abs+1
  6636     0D6F  0AAD               	incf	??_abs,f
  6637     0D70  1903               	skipnz
  6638     0D71  0AAE               	incf	??_abs+1,f
  6639     0D72  082D               	movf	??_abs,w
  6640     0D73  00AB               	movwf	?_abs
  6641     0D74  082E               	movf	??_abs+1,w
  6642     0D75  00AC               	movwf	?_abs+1
  6643     0D76                     l969:
  6644     0D76  0008               	return
  6645     0D77                     __end_of_abs:
  6646                           
  6647                           	psect	text29
  6648     06DC                     __ptext29:	
  6649 ;; *************** function ___awmod *****************
  6650 ;; Defined at:
  6651 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/awmod.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  divisor         2    4[BANK0 ] int 
  6654 ;;  dividend        2    6[BANK0 ] int 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  sign            1   10[BANK0 ] unsigned char 
  6657 ;;  counter         1    9[BANK0 ] unsigned char 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  2    4[BANK0 ] int 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6667 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6668 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6669 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6670 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6671 ;;Total ram usage:        7 bytes
  6672 ;; Hardware stack levels used: 1
  6673 ;; Hardware stack levels required when called: 3
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_dtoa
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681     06DC                     ___awmod:	
  6682                           ;psect for function ___awmod
  6683                           
  6684     06DC                     l2804:	
  6685                           ;incstack = 0
  6686                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6687                           
  6688     06DC  0020               	movlb	0	; select bank0
  6689     06DD  01AA               	clrf	___awmod@sign
  6690     06DE                     l2806:
  6691     06DE  1FA7               	btfss	___awmod@dividend+1,7
  6692     06DF  2EE1               	goto	u2621
  6693     06E0  2EE2               	goto	u2620
  6694     06E1                     u2621:
  6695     06E1  2EE9               	goto	l2812
  6696     06E2                     u2620:
  6697     06E2                     l2808:
  6698     06E2  09A6               	comf	___awmod@dividend,f
  6699     06E3  09A7               	comf	___awmod@dividend+1,f
  6700     06E4  0AA6               	incf	___awmod@dividend,f
  6701     06E5  1903               	skipnz
  6702     06E6  0AA7               	incf	___awmod@dividend+1,f
  6703     06E7                     l2810:
  6704     06E7  01AA               	clrf	___awmod@sign
  6705     06E8  0AAA               	incf	___awmod@sign,f
  6706     06E9                     l2812:
  6707     06E9  1FA5               	btfss	___awmod@divisor+1,7
  6708     06EA  2EEC               	goto	u2631
  6709     06EB  2EED               	goto	u2630
  6710     06EC                     u2631:
  6711     06EC  2EF2               	goto	l2816
  6712     06ED                     u2630:
  6713     06ED                     l2814:
  6714     06ED  09A4               	comf	___awmod@divisor,f
  6715     06EE  09A5               	comf	___awmod@divisor+1,f
  6716     06EF  0AA4               	incf	___awmod@divisor,f
  6717     06F0  1903               	skipnz
  6718     06F1  0AA5               	incf	___awmod@divisor+1,f
  6719     06F2                     l2816:
  6720     06F2  0824               	movf	___awmod@divisor,w
  6721     06F3  0425               	iorwf	___awmod@divisor+1,w
  6722     06F4  1903               	btfsc	3,2
  6723     06F5  2EF7               	goto	u2641
  6724     06F6  2EF8               	goto	u2640
  6725     06F7                     u2641:
  6726     06F7  2F21               	goto	l2834
  6727     06F8                     u2640:
  6728     06F8                     l2818:
  6729     06F8  01A9               	clrf	___awmod@counter
  6730     06F9  0AA9               	incf	___awmod@counter,f
  6731     06FA  2F04               	goto	l2824
  6732     06FB                     l2820:
  6733     06FB  3001               	movlw	1
  6734     06FC                     u2655:
  6735     06FC  35A4               	lslf	___awmod@divisor,f
  6736     06FD  0DA5               	rlf	___awmod@divisor+1,f
  6737     06FE  0B89               	decfsz	9,f
  6738     06FF  2EFC               	goto	u2655
  6739     0700                     l2822:
  6740     0700  3001               	movlw	1
  6741     0701  00A8               	movwf	??___awmod
  6742     0702  0828               	movf	??___awmod,w
  6743     0703  07A9               	addwf	___awmod@counter,f
  6744     0704                     l2824:
  6745     0704  1FA5               	btfss	___awmod@divisor+1,7
  6746     0705  2F07               	goto	u2661
  6747     0706  2F08               	goto	u2660
  6748     0707                     u2661:
  6749     0707  2EFB               	goto	l2820
  6750     0708                     u2660:
  6751     0708                     l2826:
  6752     0708  0825               	movf	___awmod@divisor+1,w
  6753     0709  0227               	subwf	___awmod@dividend+1,w
  6754     070A  1D03               	skipz
  6755     070B  2F0E               	goto	u2675
  6756     070C  0824               	movf	___awmod@divisor,w
  6757     070D  0226               	subwf	___awmod@dividend,w
  6758     070E                     u2675:
  6759     070E  1C03               	skipc
  6760     070F  2F11               	goto	u2671
  6761     0710  2F12               	goto	u2670
  6762     0711                     u2671:
  6763     0711  2F16               	goto	l2830
  6764     0712                     u2670:
  6765     0712                     l2828:
  6766     0712  0824               	movf	___awmod@divisor,w
  6767     0713  02A6               	subwf	___awmod@dividend,f
  6768     0714  0825               	movf	___awmod@divisor+1,w
  6769     0715  3BA7               	subwfb	___awmod@dividend+1,f
  6770     0716                     l2830:
  6771     0716  3001               	movlw	1
  6772     0717                     u2685:
  6773     0717  36A5               	lsrf	___awmod@divisor+1,f
  6774     0718  0CA4               	rrf	___awmod@divisor,f
  6775     0719  0B89               	decfsz	9,f
  6776     071A  2F17               	goto	u2685
  6777     071B                     l2832:
  6778     071B  3001               	movlw	1
  6779     071C  02A9               	subwf	___awmod@counter,f
  6780     071D  1D03               	btfss	3,2
  6781     071E  2F20               	goto	u2691
  6782     071F  2F21               	goto	u2690
  6783     0720                     u2691:
  6784     0720  2F08               	goto	l2826
  6785     0721                     u2690:
  6786     0721                     l2834:
  6787     0721  082A               	movf	___awmod@sign,w
  6788     0722  1903               	btfsc	3,2
  6789     0723  2F25               	goto	u2701
  6790     0724  2F26               	goto	u2700
  6791     0725                     u2701:
  6792     0725  2F2B               	goto	l2838
  6793     0726                     u2700:
  6794     0726                     l2836:
  6795     0726  09A6               	comf	___awmod@dividend,f
  6796     0727  09A7               	comf	___awmod@dividend+1,f
  6797     0728  0AA6               	incf	___awmod@dividend,f
  6798     0729  1903               	skipnz
  6799     072A  0AA7               	incf	___awmod@dividend+1,f
  6800     072B                     l2838:
  6801     072B  0827               	movf	___awmod@dividend+1,w
  6802     072C  00A5               	movwf	?___awmod+1
  6803     072D  0826               	movf	___awmod@dividend,w
  6804     072E  00A4               	movwf	?___awmod
  6805     072F                     l571:
  6806     072F  0008               	return
  6807     0730                     __end_of___awmod:
  6808                           
  6809                           	psect	text30
  6810     0621                     __ptext30:	
  6811 ;; *************** function ___awdiv *****************
  6812 ;; Defined at:
  6813 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/awdiv.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  divisor         2    4[BANK0 ] int 
  6816 ;;  dividend        2    6[BANK0 ] int 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;  quotient        2   11[BANK0 ] int 
  6819 ;;  sign            1   10[BANK0 ] unsigned char 
  6820 ;;  counter         1    9[BANK0 ] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  2    4[BANK0 ] int 
  6823 ;; Registers used:
  6824 ;;		wreg, status,2, status,0
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6831 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6833 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6834 ;;Total ram usage:        9 bytes
  6835 ;; Hardware stack levels used: 1
  6836 ;; Hardware stack levels required when called: 3
  6837 ;; This function calls:
  6838 ;;		Nothing
  6839 ;; This function is called by:
  6840 ;;		_dtoa
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844     0621                     ___awdiv:	
  6845                           ;psect for function ___awdiv
  6846                           
  6847     0621                     l2760:	
  6848                           ;incstack = 0
  6849                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6850                           
  6851     0621  0020               	movlb	0	; select bank0
  6852     0622  01AA               	clrf	___awdiv@sign
  6853     0623                     l2762:
  6854     0623  1FA5               	btfss	___awdiv@divisor+1,7
  6855     0624  2E26               	goto	u2521
  6856     0625  2E27               	goto	u2520
  6857     0626                     u2521:
  6858     0626  2E2E               	goto	l2768
  6859     0627                     u2520:
  6860     0627                     l2764:
  6861     0627  09A4               	comf	___awdiv@divisor,f
  6862     0628  09A5               	comf	___awdiv@divisor+1,f
  6863     0629  0AA4               	incf	___awdiv@divisor,f
  6864     062A  1903               	skipnz
  6865     062B  0AA5               	incf	___awdiv@divisor+1,f
  6866     062C                     l2766:
  6867     062C  01AA               	clrf	___awdiv@sign
  6868     062D  0AAA               	incf	___awdiv@sign,f
  6869     062E                     l2768:
  6870     062E  1FA7               	btfss	___awdiv@dividend+1,7
  6871     062F  2E31               	goto	u2531
  6872     0630  2E32               	goto	u2530
  6873     0631                     u2531:
  6874     0631  2E3B               	goto	l2774
  6875     0632                     u2530:
  6876     0632                     l2770:
  6877     0632  09A6               	comf	___awdiv@dividend,f
  6878     0633  09A7               	comf	___awdiv@dividend+1,f
  6879     0634  0AA6               	incf	___awdiv@dividend,f
  6880     0635  1903               	skipnz
  6881     0636  0AA7               	incf	___awdiv@dividend+1,f
  6882     0637                     l2772:
  6883     0637  3001               	movlw	1
  6884     0638  00A8               	movwf	??___awdiv
  6885     0639  0828               	movf	??___awdiv,w
  6886     063A  06AA               	xorwf	___awdiv@sign,f
  6887     063B                     l2774:
  6888     063B  01AB               	clrf	___awdiv@quotient
  6889     063C  01AC               	clrf	___awdiv@quotient+1
  6890     063D                     l2776:
  6891     063D  0824               	movf	___awdiv@divisor,w
  6892     063E  0425               	iorwf	___awdiv@divisor+1,w
  6893     063F  1903               	btfsc	3,2
  6894     0640  2E42               	goto	u2541
  6895     0641  2E43               	goto	u2540
  6896     0642                     u2541:
  6897     0642  2E72               	goto	l2796
  6898     0643                     u2540:
  6899     0643                     l2778:
  6900     0643  01A9               	clrf	___awdiv@counter
  6901     0644  0AA9               	incf	___awdiv@counter,f
  6902     0645  2E4F               	goto	l2784
  6903     0646                     l2780:
  6904     0646  3001               	movlw	1
  6905     0647                     u2555:
  6906     0647  35A4               	lslf	___awdiv@divisor,f
  6907     0648  0DA5               	rlf	___awdiv@divisor+1,f
  6908     0649  0B89               	decfsz	9,f
  6909     064A  2E47               	goto	u2555
  6910     064B                     l2782:
  6911     064B  3001               	movlw	1
  6912     064C  00A8               	movwf	??___awdiv
  6913     064D  0828               	movf	??___awdiv,w
  6914     064E  07A9               	addwf	___awdiv@counter,f
  6915     064F                     l2784:
  6916     064F  1FA5               	btfss	___awdiv@divisor+1,7
  6917     0650  2E52               	goto	u2561
  6918     0651  2E53               	goto	u2560
  6919     0652                     u2561:
  6920     0652  2E46               	goto	l2780
  6921     0653                     u2560:
  6922     0653                     l2786:
  6923     0653  3001               	movlw	1
  6924     0654                     u2575:
  6925     0654  35AB               	lslf	___awdiv@quotient,f
  6926     0655  0DAC               	rlf	___awdiv@quotient+1,f
  6927     0656  0B89               	decfsz	9,f
  6928     0657  2E54               	goto	u2575
  6929     0658  0825               	movf	___awdiv@divisor+1,w
  6930     0659  0227               	subwf	___awdiv@dividend+1,w
  6931     065A  1D03               	skipz
  6932     065B  2E5E               	goto	u2585
  6933     065C  0824               	movf	___awdiv@divisor,w
  6934     065D  0226               	subwf	___awdiv@dividend,w
  6935     065E                     u2585:
  6936     065E  1C03               	skipc
  6937     065F  2E61               	goto	u2581
  6938     0660  2E62               	goto	u2580
  6939     0661                     u2581:
  6940     0661  2E67               	goto	l2792
  6941     0662                     u2580:
  6942     0662                     l2788:
  6943     0662  0824               	movf	___awdiv@divisor,w
  6944     0663  02A6               	subwf	___awdiv@dividend,f
  6945     0664  0825               	movf	___awdiv@divisor+1,w
  6946     0665  3BA7               	subwfb	___awdiv@dividend+1,f
  6947     0666                     l2790:
  6948     0666  142B               	bsf	___awdiv@quotient,0
  6949     0667                     l2792:
  6950     0667  3001               	movlw	1
  6951     0668                     u2595:
  6952     0668  36A5               	lsrf	___awdiv@divisor+1,f
  6953     0669  0CA4               	rrf	___awdiv@divisor,f
  6954     066A  0B89               	decfsz	9,f
  6955     066B  2E68               	goto	u2595
  6956     066C                     l2794:
  6957     066C  3001               	movlw	1
  6958     066D  02A9               	subwf	___awdiv@counter,f
  6959     066E  1D03               	btfss	3,2
  6960     066F  2E71               	goto	u2601
  6961     0670  2E72               	goto	u2600
  6962     0671                     u2601:
  6963     0671  2E53               	goto	l2786
  6964     0672                     u2600:
  6965     0672                     l2796:
  6966     0672  082A               	movf	___awdiv@sign,w
  6967     0673  1903               	btfsc	3,2
  6968     0674  2E76               	goto	u2611
  6969     0675  2E77               	goto	u2610
  6970     0676                     u2611:
  6971     0676  2E7C               	goto	l2800
  6972     0677                     u2610:
  6973     0677                     l2798:
  6974     0677  09AB               	comf	___awdiv@quotient,f
  6975     0678  09AC               	comf	___awdiv@quotient+1,f
  6976     0679  0AAB               	incf	___awdiv@quotient,f
  6977     067A  1903               	skipnz
  6978     067B  0AAC               	incf	___awdiv@quotient+1,f
  6979     067C                     l2800:
  6980     067C  082C               	movf	___awdiv@quotient+1,w
  6981     067D  00A5               	movwf	?___awdiv+1
  6982     067E  082B               	movf	___awdiv@quotient,w
  6983     067F  00A4               	movwf	?___awdiv
  6984     0680                     l558:
  6985     0680  0008               	return
  6986     0681                     __end_of___awdiv:
  6987                           
  6988                           	psect	text31
  6989     0D32                     __ptext31:	
  6990 ;; *************** function _setup_address *****************
  6991 ;; Defined at:
  6992 ;;		line 282 in file "main.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  addr            2    4[BANK0 ] unsigned short 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  hi              1    6[BANK0 ] unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      void 
  6999 ;; Registers used:
  7000 ;;		wreg, status,2
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7009 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7010 ;;Total ram usage:        3 bytes
  7011 ;; Hardware stack levels used: 1
  7012 ;; Hardware stack levels required when called: 3
  7013 ;; This function calls:
  7014 ;;		Nothing
  7015 ;; This function is called by:
  7016 ;;		_do_blank
  7017 ;;		_do_read
  7018 ;;		_do_write
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022     0D32                     _setup_address:	
  7023                           ;psect for function _setup_address
  7024                           
  7025     0D32                     l3104:	
  7026                           ;incstack = 0
  7027                           ; Regs used in _setup_address: [wreg+status,2]
  7028                           
  7029                           
  7030                           ;main.c: 282: void setup_address(uint16_t addr);main.c: 283: {;main.c: 285:     uint8_t 
      +                          hi = addr >> 8;
  7031     0D32  0020               	movlb	0	; select bank0
  7032     0D33  0825               	movf	setup_address@addr+1,w
  7033     0D34  00A6               	movwf	setup_address@hi
  7034     0D35                     l3106:
  7035                           
  7036                           ;main.c: 286:     LATB = addr & 0x00ff;
  7037     0D35  0824               	movf	setup_address@addr,w
  7038     0D36  0022               	movlb	2	; select bank2
  7039     0D37  008D               	movwf	13	;volatile
  7040     0D38                     l3108:
  7041                           
  7042                           ;main.c: 287:     LATA = hi & 0x03;
  7043     0D38  0020               	movlb	0	; select bank0
  7044     0D39  0826               	movf	setup_address@hi,w
  7045     0D3A  3903               	andlw	3
  7046     0D3B  0022               	movlb	2	; select bank2
  7047     0D3C  008C               	movwf	12	;volatile
  7048                           
  7049                           ;main.c: 290:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  7050     0D3D  3010               	movlw	16
  7051     0D3E                     u3357:
  7052     0D3E  0B89               	decfsz	9,f
  7053     0D3F  2D3E               	goto	u3357
  7054     0D40  3200               	nop2
  7055     0D41                     l125:
  7056     0D41  0008               	return
  7057     0D42                     __end_of_setup_address:
  7058                           
  7059                           	psect	text32
  7060     0D42                     __ptext32:	
  7061 ;; *************** function _read_port *****************
  7062 ;; Defined at:
  7063 ;;		line 296 in file "main.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;		None
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;  data            1    4[BANK0 ] unsigned char 
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  1    wreg      unsigned char 
  7070 ;; Registers used:
  7071 ;;		wreg
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7078 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7080 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7081 ;;Total ram usage:        1 bytes
  7082 ;; Hardware stack levels used: 1
  7083 ;; Hardware stack levels required when called: 3
  7084 ;; This function calls:
  7085 ;;		Nothing
  7086 ;; This function is called by:
  7087 ;;		_do_blank
  7088 ;;		_do_read
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092     0D42                     _read_port:	
  7093                           ;psect for function _read_port
  7094                           
  7095     0D42                     l2256:	
  7096                           ;incstack = 0
  7097                           ; Regs used in _read_port: [wreg]
  7098                           
  7099                           
  7100                           ;main.c: 299:     TRISD = 0xFF;
  7101     0D42  30FF               	movlw	255
  7102     0D43  0021               	movlb	1	; select bank1
  7103     0D44  008F               	movwf	15	;volatile
  7104     0D45                     l2258:
  7105                           
  7106                           ;main.c: 302:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  7107     0D45  3200               	nop2	;2 cycle nop
  7108     0D46  3200               	nop2	;2 cycle nop
  7109     0D47  0000               	nop
  7110     0D48                     l2260:
  7111                           
  7112                           ;main.c: 304:     LATCbits.LATC0 = 1;
  7113     0D48  0022               	movlb	2	; select bank2
  7114     0D49  140E               	bsf	14,0	;volatile
  7115     0D4A                     l2262:
  7116                           
  7117                           ;main.c: 305:     LATCbits.LATC1 = 0;
  7118     0D4A  108E               	bcf	14,1	;volatile
  7119     0D4B                     l2264:
  7120                           
  7121                           ;main.c: 306:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  7122     0D4B  3200               	nop2	;2 cycle nop
  7123     0D4C  3200               	nop2	;2 cycle nop
  7124     0D4D  0000               	nop
  7125                           
  7126                           ;main.c: 309:     uint8_t data = PORTD;
  7127     0D4E  0020               	movlb	0	; select bank0
  7128     0D4F  080F               	movf	15,w	;volatile
  7129     0D50  00A4               	movwf	read_port@data
  7130                           
  7131                           ;main.c: 311:     return data;
  7132     0D51  0824               	movf	read_port@data,w
  7133     0D52                     l128:
  7134     0D52  0008               	return
  7135     0D53                     __end_of_read_port:
  7136                           
  7137                           	psect	text33
  7138     0DCC                     __ptext33:	
  7139 ;; *************** function _clear *****************
  7140 ;; Defined at:
  7141 ;;		line 62 in file "main.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;		None
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  1    wreg      void 
  7148 ;; Registers used:
  7149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7159 ;;Total ram usage:        0 bytes
  7160 ;; Hardware stack levels used: 1
  7161 ;; Hardware stack levels required when called: 4
  7162 ;; This function calls:
  7163 ;;		_memset
  7164 ;; This function is called by:
  7165 ;;		_main
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169     0DCC                     _clear:	
  7170                           ;psect for function _clear
  7171                           
  7172     0DCC                     l2378:	
  7173                           ;incstack = 0
  7174                           ; Regs used in _clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7175                           
  7176                           
  7177                           ;main.c: 64:     memset(queue, 0x00, 1024);
  7178     0DCC  30F0               	movlw	240
  7179     0DCD  0020               	movlb	0	; select bank0
  7180     0DCE  00A4               	movwf	memset@dest
  7181     0DCF  3023               	movlw	35
  7182     0DD0  00A5               	movwf	memset@dest+1
  7183     0DD1  3000               	movlw	0
  7184     0DD2  00A6               	movwf	memset@c
  7185     0DD3  00A7               	movwf	memset@c+1
  7186     0DD4  3000               	movlw	0
  7187     0DD5  00A8               	movwf	memset@n
  7188     0DD6  3004               	movlw	4
  7189     0DD7  00A9               	movwf	memset@n+1
  7190     0DD8  318E  2601  318D   	fcall	_memset
  7191     0DDB                     l2380:
  7192                           
  7193                           ;main.c: 65:     head = 0;
  7194     0DDB  01FC               	clrf	_head
  7195     0DDC  01FD               	clrf	_head+1
  7196     0DDD                     l2382:
  7197                           
  7198                           ;main.c: 66:     tail = 1024 -1;
  7199     0DDD  30FF               	movlw	255
  7200     0DDE  0020               	movlb	0	; select bank0
  7201     0DDF  00E5               	movwf	_tail
  7202     0DE0  3003               	movlw	3
  7203     0DE1  00E6               	movwf	_tail+1
  7204     0DE2                     l2384:
  7205                           
  7206                           ;main.c: 67:     cmd_active = 0;
  7207     0DE2  0021               	movlb	1	; select bank1
  7208     0DE3  01DC               	clrf	_cmd_active^(0+128)
  7209     0DE4                     l76:
  7210     0DE4  0008               	return
  7211     0DE5                     __end_of_clear:
  7212                           
  7213                           	psect	text34
  7214     0E01                     __ptext34:	
  7215 ;; *************** function _memset *****************
  7216 ;; Defined at:
  7217 ;;		line 3 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/memset.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  dest            2    4[BANK0 ] PTR void 
  7220 ;;		 -> queue(1024), 
  7221 ;;  c               2    6[BANK0 ] int 
  7222 ;;  n               2    8[BANK0 ] unsigned int 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  p               2   10[BANK0 ] PTR unsigned char 
  7225 ;;		 -> queue(1024), 
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  2    4[BANK0 ] PTR void 
  7228 ;; Registers used:
  7229 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7235 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7238 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7239 ;;Total ram usage:        8 bytes
  7240 ;; Hardware stack levels used: 1
  7241 ;; Hardware stack levels required when called: 3
  7242 ;; This function calls:
  7243 ;;		Nothing
  7244 ;; This function is called by:
  7245 ;;		_clear
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249     0E01                     _memset:	
  7250                           ;psect for function _memset
  7251                           
  7252     0E01                     l2200:	
  7253                           ;incstack = 0
  7254                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7255                           
  7256     0E01  0020               	movlb	0	; select bank0
  7257     0E02  0825               	movf	memset@dest+1,w
  7258     0E03  00AB               	movwf	memset@p+1
  7259     0E04  0824               	movf	memset@dest,w
  7260     0E05  00AA               	movwf	memset@p
  7261     0E06  2E11               	goto	l2206
  7262     0E07                     l2202:
  7263     0E07  082A               	movf	memset@p,w
  7264     0E08  0086               	movwf	6
  7265     0E09  082B               	movf	memset@p+1,w
  7266     0E0A  0087               	movwf	7
  7267     0E0B  0826               	movf	memset@c,w
  7268     0E0C  0081               	movwf	1
  7269     0E0D                     l2204:
  7270     0E0D  3001               	movlw	1
  7271     0E0E  07AA               	addwf	memset@p,f
  7272     0E0F  3000               	movlw	0
  7273     0E10  3DAB               	addwfc	memset@p+1,f
  7274     0E11                     l2206:
  7275     0E11  3001               	movlw	1
  7276     0E12  02A8               	subwf	memset@n,f
  7277     0E13  3000               	movlw	0
  7278     0E14  3BA9               	subwfb	memset@n+1,f
  7279     0E15  0A28               	incf	memset@n,w
  7280     0E16  1D03               	skipz
  7281     0E17  2E1C               	goto	u1821
  7282     0E18  0A29               	incf	memset@n+1,w
  7283     0E19  1D03               	btfss	3,2
  7284     0E1A  2E1C               	goto	u1821
  7285     0E1B  2E1D               	goto	u1820
  7286     0E1C                     u1821:
  7287     0E1C  2E07               	goto	l2202
  7288     0E1D                     u1820:
  7289     0E1D                     l867:
  7290     0E1D  0008               	return
  7291     0E1E                     __end_of_memset:
  7292                           
  7293                           	psect	intentry
  7294     0004                     __pintentry:	
  7295 ;; *************** function _isr *****************
  7296 ;; Defined at:
  7297 ;;		line 252 in file "main.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  n               2    0[BANK0 ] short 
  7302 ;;  c               1    3[BANK0 ] unsigned char 
  7303 ;;  ok              1    2[BANK0 ] _Bool 
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7314 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7315 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7316 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7317 ;;Total ram usage:        5 bytes
  7318 ;; Hardware stack levels used: 1
  7319 ;; Hardware stack levels required when called: 2
  7320 ;; This function calls:
  7321 ;;		_first
  7322 ;;		_push
  7323 ;;		_size
  7324 ;;		_uart_getc
  7325 ;; This function is called by:
  7326 ;;		Interrupt level 1
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330     0004                     _isr:
  7331                           
  7332                           ;incstack = 0
  7333     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7334                           
  7335                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7336     0005  3180               	pagesel	$
  7337     0006                     i1l2664:
  7338                           
  7339                           ;main.c: 254:         char c = 0;
  7340     0006  0020               	movlb	0	; select bank0
  7341     0007  01A3               	clrf	isr@c
  7342     0008                     i1l2666:
  7343                           
  7344                           ;main.c: 257:         INTCONbits.GIE = 0;
  7345     0008  138B               	bcf	11,7	;volatile
  7346     0009                     i1l2668:
  7347                           
  7348                           ;main.c: 258:         PIE1bits.RCIE=0;
  7349     0009  0021               	movlb	1	; select bank1
  7350     000A  1291               	bcf	17,5	;volatile
  7351     000B                     i1l2670:
  7352                           
  7353                           ;main.c: 261:         _Bool ok = uart_getc(&c);
  7354     000B  3023               	movlw	(low (isr@c| 0))& (0+255)
  7355     000C  318E  265A  3180   	fcall	_uart_getc
  7356     000F  0020               	movlb	0	; select bank0
  7357     0010  00A2               	movwf	isr@ok
  7358     0011                     i1l2672:
  7359                           
  7360                           ;main.c: 262:         if (ok) {
  7361     0011  0822               	movf	isr@ok,w
  7362     0012  1903               	btfsc	3,2
  7363     0013  2815               	goto	u234_21
  7364     0014  2816               	goto	u234_20
  7365     0015                     u234_21:
  7366     0015  283B               	goto	i1l120
  7367     0016                     u234_20:
  7368     0016                     i1l2674:
  7369                           
  7370                           ;main.c: 264:             push(c);
  7371     0016  0823               	movf	isr@c,w
  7372     0017  3183  23E7  3180   	fcall	_push
  7373     001A                     i1l2676:
  7374                           
  7375                           ;main.c: 267:             int16_t n = size();
  7376     001A  318F  273F  3180   	fcall	_size
  7377     001D  0873               	movf	?_size+1,w
  7378     001E  0020               	movlb	0	; select bank0
  7379     001F  00A1               	movwf	isr@n+1
  7380     0020  0872               	movf	?_size,w
  7381     0021  00A0               	movwf	isr@n
  7382     0022                     i1l2678:
  7383                           
  7384                           ;main.c: 268:             if ( (first() == '$') && n > 1) {
  7385     0022  318D  251A  3180   	fcall	_first
  7386     0025  3A24               	xorlw	36
  7387     0026  1D03               	skipz
  7388     0027  2829               	goto	u235_21
  7389     0028  282A               	goto	u235_20
  7390     0029                     u235_21:
  7391     0029  283B               	goto	i1l120
  7392     002A                     u235_20:
  7393     002A                     i1l2680:
  7394     002A  0020               	movlb	0	; select bank0
  7395     002B  0821               	movf	isr@n+1,w
  7396     002C  3A80               	xorlw	128
  7397     002D  00FB               	movwf	??_isr
  7398     002E  3080               	movlw	128
  7399     002F  027B               	subwf	??_isr,w
  7400     0030  1D03               	skipz
  7401     0031  2834               	goto	u236_25
  7402     0032  3002               	movlw	2
  7403     0033  0220               	subwf	isr@n,w
  7404     0034                     u236_25:
  7405     0034  1C03               	skipc
  7406     0035  2837               	goto	u236_21
  7407     0036  2838               	goto	u236_20
  7408     0037                     u236_21:
  7409     0037  283B               	goto	i1l120
  7410     0038                     u236_20:
  7411     0038                     i1l2682:
  7412                           
  7413                           ;main.c: 270:                 cmd_active = 1;
  7414     0038  0021               	movlb	1	; select bank1
  7415     0039  01DC               	clrf	_cmd_active^(0+128)
  7416     003A  0ADC               	incf	_cmd_active^(0+128),f
  7417     003B                     i1l120:	
  7418                           ;main.c: 272:         }
  7419                           
  7420                           
  7421                           ;main.c: 275:         PIE1bits.RCIE=1;
  7422     003B  0021               	movlb	1	; select bank1
  7423     003C  1691               	bsf	17,5	;volatile
  7424                           
  7425                           ;main.c: 276:         INTCONbits.GIE = 1;
  7426     003D  178B               	bsf	11,7	;volatile
  7427     003E                     i1l122:
  7428     003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7429     003F  0009               	retfie
  7430     0040                     __end_of_isr:
  7431                           
  7432                           	psect	text36
  7433     0E5A                     __ptext36:	
  7434 ;; *************** function _uart_getc *****************
  7435 ;; Defined at:
  7436 ;;		line 134 in file "uart.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  c               1    wreg     PTR unsigned char 
  7439 ;;		 -> isr@c(1), 
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;  c               1    0[COMMON] PTR unsigned char 
  7442 ;;		 -> isr@c(1), 
  7443 ;;  er              1    0        unsigned char 
  7444 ;;  ok              1    1[COMMON] _Bool 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1    wreg      _Bool 
  7447 ;; Registers used:
  7448 ;;		wreg, fsr1l, fsr1h, status,2
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7455 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7458 ;;Total ram usage:        2 bytes
  7459 ;; Hardware stack levels used: 1
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_isr
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467     0E5A                     _uart_getc:	
  7468                           ;psect for function _uart_getc
  7469                           
  7470                           
  7471                           ;incstack = 0
  7472                           ; Regs used in _uart_getc: [wreg+fsr1l+fsr1h+status,2]
  7473                           ;uart_getc@c stored from wreg
  7474     0E5A  00F0               	movwf	uart_getc@c
  7475     0E5B                     i1l2474:
  7476                           
  7477                           ;uart.c: 134: _Bool uart_getc(char *c);uart.c: 135: {;uart.c: 137:     _Bool ok = 0;
  7478     0E5B  01F1               	clrf	uart_getc@ok
  7479     0E5C                     i1l2476:
  7480                           
  7481                           ;uart.c: 140:     if (RCSTAbits.FERR) {
  7482     0E5C  0023               	movlb	3	; select bank3
  7483     0E5D  1D1D               	btfss	29,2	;volatile
  7484     0E5E  2E60               	goto	u209_21
  7485     0E5F  2E61               	goto	u209_20
  7486     0E60                     u209_21:
  7487     0E60  2E63               	goto	i1l229
  7488     0E61                     u209_20:
  7489     0E61                     i1l2478:
  7490     0E61  0819               	movf	25,w	;volatile
  7491                           
  7492                           ;uart.c: 142:     }
  7493     0E62  2E78               	goto	i1l2486
  7494     0E63                     i1l229:	
  7495                           ;uart.c: 143:     else if (RCSTAbits.OERR) {
  7496                           
  7497     0E63  1C9D               	btfss	29,1	;volatile
  7498     0E64  2E66               	goto	u210_21
  7499     0E65  2E67               	goto	u210_20
  7500     0E66                     u210_21:
  7501     0E66  2E6A               	goto	i1l231
  7502     0E67                     u210_20:
  7503     0E67                     i1l2480:
  7504                           
  7505                           ;uart.c: 144:         RCSTAbits.CREN = 0;
  7506     0E67  121D               	bcf	29,4	;volatile
  7507                           
  7508                           ;uart.c: 145:         RCSTAbits.CREN = 1;
  7509     0E68  161D               	bsf	29,4	;volatile
  7510                           
  7511                           ;uart.c: 146:     }
  7512     0E69  2E78               	goto	i1l2486
  7513     0E6A                     i1l231:	
  7514                           ;uart.c: 147:     else {
  7515                           
  7516                           
  7517                           ;uart.c: 148:         if (PIR1bits.RCIF) {
  7518     0E6A  0020               	movlb	0	; select bank0
  7519     0E6B  1E91               	btfss	17,5	;volatile
  7520     0E6C  2E6E               	goto	u211_21
  7521     0E6D  2E6F               	goto	u211_20
  7522     0E6E                     u211_21:
  7523     0E6E  2E78               	goto	i1l2486
  7524     0E6F                     u211_20:
  7525     0E6F                     i1l2482:
  7526                           
  7527                           ;uart.c: 149:             *c = RCREG & 0x7f;
  7528     0E6F  0870               	movf	uart_getc@c,w
  7529     0E70  0086               	movwf	6
  7530     0E71  0187               	clrf	7
  7531     0E72  0023               	movlb	3	; select bank3
  7532     0E73  0819               	movf	25,w	;volatile
  7533     0E74  397F               	andlw	127
  7534     0E75  0081               	movwf	1
  7535     0E76                     i1l2484:
  7536                           
  7537                           ;uart.c: 150:             ok = 1;
  7538     0E76  01F1               	clrf	uart_getc@ok
  7539     0E77  0AF1               	incf	uart_getc@ok,f
  7540     0E78                     i1l2486:
  7541                           
  7542                           ;uart.c: 153:     return ok;
  7543     0E78  0871               	movf	uart_getc@ok,w
  7544     0E79                     i1l234:
  7545     0E79  0008               	return
  7546     0E7A                     __end_of_uart_getc:
  7547                           
  7548                           	psect	text37
  7549     0F3F                     __ptext37:	
  7550 ;; *************** function _size *****************
  7551 ;; Defined at:
  7552 ;;		line 83 in file "main.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;		None
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;  s               2    5[COMMON] short 
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  2    2[COMMON] short 
  7559 ;; Registers used:
  7560 ;;		wreg, status,2, status,0, pclath, cstack
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7569 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7570 ;;Total ram usage:        5 bytes
  7571 ;; Hardware stack levels used: 1
  7572 ;; Hardware stack levels required when called: 1
  7573 ;; This function calls:
  7574 ;;		_setCTS
  7575 ;;		i1_addone
  7576 ;; This function is called by:
  7577 ;;		_isr
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581     0F3F                     _size:	
  7582                           ;psect for function _size
  7583                           
  7584     0F3F                     i1l2386:	
  7585                           ;incstack = 0
  7586                           ; Regs used in _size: [wreg+status,2+status,0+pclath+cstack]
  7587                           
  7588                           
  7589                           ;main.c: 85:     int16_t s = addone(tail) - head;
  7590     0F3F  0020               	movlb	0	; select bank0
  7591     0F40  0866               	movf	_tail+1,w
  7592     0F41  00F1               	movwf	i1addone@i+1
  7593     0F42  0865               	movf	_tail,w
  7594     0F43  00F0               	movwf	i1addone@i
  7595     0F44  318D  2553  318F   	fcall	i1_addone
  7596     0F47  087C               	movf	_head,w
  7597     0F48  0270               	subwf	?i1_addone,w
  7598     0F49  00F5               	movwf	size@s
  7599     0F4A  087D               	movf	_head+1,w
  7600     0F4B  3B71               	subwfb	?i1_addone+1,w
  7601     0F4C  00F6               	movwf	size@s+1
  7602     0F4D                     i1l2388:
  7603                           
  7604                           ;main.c: 86:     if (s > 1024 -32) {
  7605     0F4D  0876               	movf	size@s+1,w
  7606     0F4E  3A80               	xorlw	128
  7607     0F4F  00F4               	movwf	??_size
  7608     0F50  3083               	movlw	131
  7609     0F51  0274               	subwf	??_size,w
  7610     0F52  1D03               	skipz
  7611     0F53  2F56               	goto	u205_25
  7612     0F54  30E1               	movlw	225
  7613     0F55  0275               	subwf	size@s,w
  7614     0F56                     u205_25:
  7615     0F56  1C03               	skipc
  7616     0F57  2F59               	goto	u205_21
  7617     0F58  2F5A               	goto	u205_20
  7618     0F59                     u205_21:
  7619     0F59  2F5E               	goto	i1l2392
  7620     0F5A                     u205_20:
  7621     0F5A                     i1l2390:
  7622                           
  7623                           ;main.c: 87:         setCTS(1);
  7624     0F5A  3001               	movlw	1
  7625     0F5B  318D  2512  318F   	fcall	_setCTS
  7626     0F5E                     i1l2392:
  7627                           
  7628                           ;main.c: 89:     if (s < 32) {
  7629     0F5E  0876               	movf	size@s+1,w
  7630     0F5F  3A80               	xorlw	128
  7631     0F60  00F4               	movwf	??_size
  7632     0F61  3080               	movlw	128
  7633     0F62  0274               	subwf	??_size,w
  7634     0F63  1D03               	skipz
  7635     0F64  2F67               	goto	u206_25
  7636     0F65  3020               	movlw	32
  7637     0F66  0275               	subwf	size@s,w
  7638     0F67                     u206_25:
  7639     0F67  1803               	skipnc
  7640     0F68  2F6A               	goto	u206_21
  7641     0F69  2F6B               	goto	u206_20
  7642     0F6A                     u206_21:
  7643     0F6A  2F6F               	goto	i1l2396
  7644     0F6B                     u206_20:
  7645     0F6B                     i1l2394:
  7646                           
  7647                           ;main.c: 90:         setCTS(0);
  7648     0F6B  3000               	movlw	0
  7649     0F6C  318D  2512  318F   	fcall	_setCTS
  7650     0F6F                     i1l2396:
  7651                           
  7652                           ;main.c: 92:     return s;
  7653     0F6F  0876               	movf	size@s+1,w
  7654     0F70  00F3               	movwf	?_size+1
  7655     0F71  0875               	movf	size@s,w
  7656     0F72  00F2               	movwf	?_size
  7657     0F73                     i1l85:
  7658     0F73  0008               	return
  7659     0F74                     __end_of_size:
  7660                           
  7661                           	psect	text38
  7662     03E7                     __ptext38:	
  7663 ;; *************** function _push *****************
  7664 ;; Defined at:
  7665 ;;		line 113 in file "main.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  c               1    wreg     unsigned char 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;  c               1   10[COMMON] unsigned char 
  7670 ;;  s               2    6[COMMON] short 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      void 
  7673 ;; Registers used:
  7674 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7681 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7683 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7684 ;;Total ram usage:        9 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; Hardware stack levels required when called: 1
  7687 ;; This function calls:
  7688 ;;		_setCTS
  7689 ;;		i1_addone
  7690 ;; This function is called by:
  7691 ;;		_isr
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695     03E7                     _push:	
  7696                           ;psect for function _push
  7697                           
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in _push: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7701                           ;push@c stored from wreg
  7702     03E7  00FA               	movwf	push@c
  7703     03E8                     i1l2400:
  7704                           
  7705                           ;main.c: 113: void push(char c);main.c: 114: {;main.c: 116:     int16_t s = addone(tail)
      +                           - head;
  7706     03E8  0020               	movlb	0	; select bank0
  7707     03E9  0866               	movf	_tail+1,w
  7708     03EA  00F1               	movwf	i1addone@i+1
  7709     03EB  0865               	movf	_tail,w
  7710     03EC  00F0               	movwf	i1addone@i
  7711     03ED  318D  2553  3183   	fcall	i1_addone
  7712     03F0  087C               	movf	_head,w
  7713     03F1  0270               	subwf	?i1_addone,w
  7714     03F2  00F6               	movwf	push@s
  7715     03F3  087D               	movf	_head+1,w
  7716     03F4  3B71               	subwfb	?i1_addone+1,w
  7717     03F5  00F7               	movwf	push@s+1
  7718     03F6                     i1l2402:
  7719                           
  7720                           ;main.c: 117:     if (s > 1024 -32) {
  7721     03F6  0877               	movf	push@s+1,w
  7722     03F7  3A80               	xorlw	128
  7723     03F8  00F2               	movwf	??_push
  7724     03F9  3083               	movlw	131
  7725     03FA  0272               	subwf	??_push,w
  7726     03FB  1D03               	skipz
  7727     03FC  2BFF               	goto	u207_25
  7728     03FD  30E1               	movlw	225
  7729     03FE  0276               	subwf	push@s,w
  7730     03FF                     u207_25:
  7731     03FF  1C03               	skipc
  7732     0400  2C02               	goto	u207_21
  7733     0401  2C03               	goto	u207_20
  7734     0402                     u207_21:
  7735     0402  2C08               	goto	i1l2406
  7736     0403                     u207_20:
  7737     0403                     i1l2404:
  7738                           
  7739                           ;main.c: 118:         setCTS(1);
  7740     0403  3001               	movlw	1
  7741     0404  318D  2512  3183   	fcall	_setCTS
  7742                           
  7743                           ;main.c: 119:     }
  7744     0407  2C0C               	goto	i1l93
  7745     0408                     i1l2406:
  7746                           
  7747                           ;main.c: 121:         setCTS(0);
  7748     0408  3000               	movlw	0
  7749     0409  318D  2512  3183   	fcall	_setCTS
  7750     040C                     i1l93:	
  7751                           ;main.c: 122:     }
  7752                           
  7753                           
  7754                           ;main.c: 124:     if ( addone(addone(tail)) == head ) {
  7755     040C  0020               	movlb	0	; select bank0
  7756     040D  0866               	movf	_tail+1,w
  7757     040E  00F1               	movwf	i1addone@i+1
  7758     040F  0865               	movf	_tail,w
  7759     0410  00F0               	movwf	i1addone@i
  7760     0411  318D  2553  3183   	fcall	i1_addone
  7761     0414  0871               	movf	?i1_addone+1,w
  7762     0415  00F9               	movwf	_push$1489+1
  7763     0416  0870               	movf	?i1_addone,w
  7764     0417  00F8               	movwf	_push$1489
  7765                           
  7766                           ;main.c: 124:     if ( addone(addone(tail)) == head ) {
  7767     0418  0879               	movf	_push$1489+1,w
  7768     0419  00F1               	movwf	i1addone@i+1
  7769     041A  0878               	movf	_push$1489,w
  7770     041B  00F0               	movwf	i1addone@i
  7771     041C  318D  2553  3183   	fcall	i1_addone
  7772     041F  087D               	movf	_head+1,w
  7773     0420  0671               	xorwf	?i1_addone+1,w
  7774     0421  1D03               	skipz
  7775     0422  2C25               	goto	u208_25
  7776     0423  087C               	movf	_head,w
  7777     0424  0670               	xorwf	?i1_addone,w
  7778     0425                     u208_25:
  7779     0425  1D03               	skipz
  7780     0426  2C28               	goto	u208_21
  7781     0427  2C29               	goto	u208_20
  7782     0428                     u208_21:
  7783     0428  2C44               	goto	i1l2414
  7784     0429                     u208_20:
  7785     0429                     i1l2408:
  7786                           
  7787                           ;main.c: 126:         PORTCbits.RC4 = 1;
  7788     0429  0020               	movlb	0	; select bank0
  7789     042A  160E               	bsf	14,4	;volatile
  7790     042B                     i1l2410:
  7791                           
  7792                           ;main.c: 127:         _delay((unsigned long)((100)*(20000000/4000.0)));
  7793     042B  3003               	movlw	3
  7794     042C  00F3               	movwf	??_push+1
  7795     042D  308A               	movlw	138
  7796     042E  00F2               	movwf	??_push
  7797     042F  3056               	movlw	86
  7798     0430                     u336_27:
  7799     0430  0B89               	decfsz	9,f
  7800     0431  2C30               	goto	u336_27
  7801     0432  0BF2               	decfsz	??_push,f
  7802     0433  2C30               	goto	u336_27
  7803     0434  0BF3               	decfsz	??_push+1,f
  7804     0435  2C30               	goto	u336_27
  7805     0436                     i1l2412:
  7806                           
  7807                           ;main.c: 128:         PORTCbits.RC4 = 0;
  7808     0436  0020               	movlb	0	; select bank0
  7809     0437  120E               	bcf	14,4	;volatile
  7810                           
  7811                           ;main.c: 129:         _delay((unsigned long)((100)*(20000000/4000.0)));
  7812     0438  3003               	movlw	3
  7813     0439  00F3               	movwf	??_push+1
  7814     043A  308A               	movlw	138
  7815     043B  00F2               	movwf	??_push
  7816     043C  3056               	movlw	86
  7817     043D                     u337_27:
  7818     043D  0B89               	decfsz	9,f
  7819     043E  2C3D               	goto	u337_27
  7820     043F  0BF2               	decfsz	??_push,f
  7821     0440  2C3D               	goto	u337_27
  7822     0441  0BF3               	decfsz	??_push+1,f
  7823     0442  2C3D               	goto	u337_27
  7824                           
  7825                           ;main.c: 130:     }
  7826     0443  2C66               	goto	i1l96
  7827     0444                     i1l2414:
  7828                           
  7829                           ;main.c: 132:         tail = addone(tail);
  7830     0444  0020               	movlb	0	; select bank0
  7831     0445  0866               	movf	_tail+1,w
  7832     0446  00F1               	movwf	i1addone@i+1
  7833     0447  0865               	movf	_tail,w
  7834     0448  00F0               	movwf	i1addone@i
  7835     0449  318D  2553  3183   	fcall	i1_addone
  7836     044C  0871               	movf	?i1_addone+1,w
  7837     044D  0020               	movlb	0	; select bank0
  7838     044E  00E6               	movwf	_tail+1
  7839     044F  0870               	movf	?i1_addone,w
  7840     0450  00E5               	movwf	_tail
  7841     0451                     i1l2416:
  7842                           
  7843                           ;main.c: 133:         queue[tail] = c;
  7844     0451  30F0               	movlw	240
  7845     0452  00F2               	movwf	??_push
  7846     0453  3023               	movlw	35
  7847     0454  00F3               	movwf	??_push+1
  7848     0455  0865               	movf	_tail,w
  7849     0456  0772               	addwf	??_push,w
  7850     0457  00F4               	movwf	??_push+2
  7851     0458  0866               	movf	_tail+1,w
  7852     0459  3D73               	addwfc	??_push+1,w
  7853     045A  00F5               	movwf	??_push+3
  7854     045B  0874               	movf	??_push+2,w
  7855     045C  0086               	movwf	6
  7856     045D  0875               	movf	??_push+3,w
  7857     045E  0087               	movwf	7
  7858     045F  087A               	movf	push@c,w
  7859     0460  0081               	movwf	1
  7860     0461                     i1l2418:
  7861                           
  7862                           ;main.c: 134:         bytes_pushed++;
  7863     0461  3001               	movlw	1
  7864     0462  0021               	movlb	1	; select bank1
  7865     0463  07D9               	addwf	_bytes_pushed^(0+128),f
  7866     0464  3000               	movlw	0
  7867     0465  3DDA               	addwfc	(_bytes_pushed+1)^(0+128),f
  7868     0466                     i1l96:
  7869     0466  0008               	return
  7870     0467                     __end_of_push:
  7871                           
  7872                           	psect	text39
  7873     0D53                     __ptext39:	
  7874 ;; *************** function i1_addone *****************
  7875 ;; Defined at:
  7876 ;;		line 73 in file "main.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  i               2    0[COMMON] short 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;		None
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  2    0[COMMON] short 
  7883 ;; Registers used:
  7884 ;;		wreg, status,2, status,0
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7894 ;;Total ram usage:        2 bytes
  7895 ;; Hardware stack levels used: 1
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_size
  7900 ;;		_push
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904     0D53                     i1_addone:	
  7905                           ;psect for function i1_addone
  7906                           
  7907     0D53                     i1l2368:	
  7908                           ;incstack = 0
  7909                           ; Regs used in i1_addone: [wreg+status,2+status,0]
  7910                           
  7911                           
  7912                           ;main.c: 73: int16_t addone(int16_t i);main.c: 74: {;main.c: 75:     if (i == 1024 -1)
  7913     0D53  0A70               	incf	i1addone@i,w
  7914     0D54  3003               	movlw	3
  7915     0D55  1903               	skipnz
  7916     0D56  0671               	xorwf	i1addone@i+1,w
  7917     0D57  1D03               	btfss	3,2
  7918     0D58  2D5A               	goto	u204_21
  7919     0D59  2D5B               	goto	u204_20
  7920     0D5A                     u204_21:
  7921     0D5A  2D5E               	goto	i1l2374
  7922     0D5B                     u204_20:
  7923     0D5B                     i1l2370:
  7924                           
  7925                           ;main.c: 76:         return 0;
  7926     0D5B  01F0               	clrf	?i1_addone
  7927     0D5C  01F1               	clrf	?i1_addone+1
  7928     0D5D  2D64               	goto	i1l80
  7929     0D5E                     i1l2374:
  7930                           
  7931                           ;main.c: 77:     return i+1;
  7932     0D5E  0870               	movf	i1addone@i,w
  7933     0D5F  3E01               	addlw	1
  7934     0D60  00F0               	movwf	?i1_addone
  7935     0D61  3000               	movlw	0
  7936     0D62  3D71               	addwfc	i1addone@i+1,w
  7937     0D63  00F1               	movwf	?i1_addone+1
  7938     0D64                     i1l80:
  7939     0D64  0008               	return
  7940     0D65                     __end_ofi1_addone:
  7941                           
  7942                           	psect	text40
  7943     0D12                     __ptext40:	
  7944 ;; *************** function _setCTS *****************
  7945 ;; Defined at:
  7946 ;;		line 54 in file "main.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  b               1    wreg     _Bool 
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;  b               1    0[COMMON] _Bool 
  7951 ;; Return value:  Size  Location     Type
  7952 ;;                  1    wreg      void 
  7953 ;; Registers used:
  7954 ;;		wreg, status,0
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/0
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7964 ;;Total ram usage:        1 bytes
  7965 ;; Hardware stack levels used: 1
  7966 ;; This function calls:
  7967 ;;		Nothing
  7968 ;; This function is called by:
  7969 ;;		_size
  7970 ;;		_push
  7971 ;; This function uses a non-reentrant model
  7972 ;;
  7973                           
  7974     0D12                     _setCTS:	
  7975                           ;psect for function _setCTS
  7976                           
  7977                           
  7978                           ;incstack = 0
  7979                           ; Regs used in _setCTS: [wreg+status,0]
  7980                           ;setCTS@b stored from wreg
  7981     0D12  00F0               	movwf	setCTS@b
  7982     0D13                     i1l2198:
  7983                           
  7984                           ;main.c: 54: void setCTS(_Bool b);main.c: 55: {;main.c: 56:     PORTAbits.RA4 = b;
  7985     0D13  0C70               	rrf	setCTS@b,w
  7986     0D14  0020               	movlb	0	; select bank0
  7987     0D15  1C03               	skipc
  7988     0D16  120C               	bcf	12,4	;volatile
  7989     0D17  1803               	skipnc
  7990     0D18  160C               	bsf	12,4	;volatile
  7991     0D19                     i1l73:
  7992     0D19  0008               	return
  7993     0D1A                     __end_of_setCTS:
  7994                           
  7995                           	psect	text41
  7996     0D1A                     __ptext41:	
  7997 ;; *************** function _first *****************
  7998 ;; Defined at:
  7999 ;;		line 176 in file "main.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;		None
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;		None
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  1    wreg      unsigned char 
  8006 ;; Registers used:
  8007 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8015 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8017 ;;Total ram usage:        2 bytes
  8018 ;; Hardware stack levels used: 1
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		_isr
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026     0D1A                     _first:	
  8027                           ;psect for function _first
  8028                           
  8029     0D1A                     i1l2420:	
  8030                           ;incstack = 0
  8031                           ; Regs used in _first: [wreg+fsr1l+fsr1h+status,2+status,0]
  8032                           
  8033                           
  8034                           ;main.c: 178:     return queue[head];
  8035     0D1A  30F0               	movlw	240
  8036     0D1B  00F0               	movwf	??_first
  8037     0D1C  3023               	movlw	35
  8038     0D1D  00F1               	movwf	??_first+1
  8039     0D1E  087C               	movf	_head,w
  8040     0D1F  0770               	addwf	??_first,w
  8041     0D20  0086               	movwf	6
  8042     0D21  087D               	movf	_head+1,w
  8043     0D22  3D71               	addwfc	??_first+1,w
  8044     0D23  0087               	movwf	7
  8045     0D24  0801               	movf	1,w
  8046     0D25                     i1l105:
  8047     0D25  0008               	return
  8048     0D26                     __end_of_first:
  8049     007E                     btemp	set	126	;btemp
  8050     007E                     int$flags	set	126
  8051     007E                     wtemp0	set	126
  8052     23F0                     
  8053                           	psect	config
  8054                           
  8055                           ;Config register CONFIG1 @ 0x8007
  8056                           ;	Oscillator Selection
  8057                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  8058                           ;	Watchdog Timer Enable
  8059                           ;	WDTE = OFF, WDT disabled
  8060                           ;	Power-up Timer Enable
  8061                           ;	PWRTE = OFF, PWRT disabled
  8062                           ;	MCLR Pin Function Select
  8063                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8064                           ;	Flash Program Memory Code Protection
  8065                           ;	CP = OFF, Program memory code protection is disabled
  8066                           ;	Data Memory Code Protection
  8067                           ;	CPD = OFF, Data memory code protection is disabled
  8068                           ;	Brown-out Reset Enable
  8069                           ;	BOREN = OFF, Brown-out Reset disabled
  8070                           ;	Clock Out Enable
  8071                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8072                           ;	Internal/External Switchover
  8073                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8074                           ;	Fail-Safe Clock Monitor Enable
  8075                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8076     8007                     	org	32775
  8077     8007  39E2               	dw	14818
  8078                           
  8079                           ;Config register CONFIG2 @ 0x8008
  8080                           ;	Flash Memory Self-Write Protection
  8081                           ;	WRT = OFF, Write protection off
  8082                           ;	Voltage Regulator Capacitor Enable bit
  8083                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  8084                           ;	PLL Enable
  8085                           ;	PLLEN = OFF, 4x PLL disabled
  8086                           ;	Stack Overflow/Underflow Reset Enable
  8087                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8088                           ;	Brown-out Reset Voltage Selection
  8089                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8090                           ;	Low Power Brown-Out Reset Enable Bit
  8091                           ;	LPBOR = OFF, Low power brown-out is disabled
  8092                           ;	In-Circuit Debugger Mode
  8093                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  8094                           ;	Low-Voltage Programming Enable
  8095                           ;	LVP = ON, Low-voltage programming enabled
  8096     8008                     	org	32776
  8097     8008  3EFF               	dw	16127

Data Sizes:
    Strings     128
    Constant    0
    Data        2
    BSS         46
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     67      71
    BANK1            80     51      61
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    do_blank@s	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_6(CODE[3]), 

    do_read@s	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), 

    do_write@s	PTR unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[15]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    memset@dest	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    memset@p	PTR unsigned char  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1118$buffer	PTR unsigned char  size(2) Largest target is 0

    S1118$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[4]), STR_11(CODE[3]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[2]), 

    uart_getc@c	PTR unsigned char  size(1) Largest target is 1
		 -> isr@c(BANK0[1]), 

    uart_puts@p	PTR unsigned char  size(2) Largest target is 32
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[2]), 
		 -> STR_10(CODE[15]), STR_12(CODE[13]), STR_13(CODE[5]), STR_2(CODE[15]), 
		 -> STR_3(CODE[29]), STR_6(CODE[3]), STR_7(CODE[14]), 

    uart_puts@s	PTR unsigned char  size(2) Largest target is 32
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[2]), 
		 -> STR_10(CODE[15]), STR_12(CODE[13]), STR_13(CODE[5]), STR_2(CODE[15]), 
		 -> STR_3(CODE[29]), STR_6(CODE[3]), STR_7(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[4]), STR_11(CODE[3]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[4]), STR_11(CODE[3]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[4]), STR_11(CODE[3]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_push
    _size->i1_addone
    _push->i1_addone

Critical Paths under _main in BANK0

    _main->_do_blank
    _main->_do_read
    _uart_init->___lldiv
    ___lldiv->___lmul
    _do_write->_sprintf
    _pop->_addone
    _empty->_addone
    _do_read->_sprintf
    _do_init->_sprintf
    _do_blank->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _xtoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _clear->_memset

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_do_blank
    _do_write->_sprintf
    _do_read->_sprintf
    _do_init->_sprintf
    _do_blank->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   62067
                                             66 BANK0      1     1      0
                              _clear
                           _do_blank
                            _do_init
                            _do_read
                           _do_write
                                _pop
                         _ports_init
                          _uart_init
                          _uart_puts
 ---------------------------------------------------------------------------------
 (1) _uart_init                                           13     9      4     750
                                             30 BANK0     13     9      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             16 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ports_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _do_write                                            11    11      0   15675
                                             64 BANK0      1     1      0
                                             13 BANK1     10    10      0
                     _charToHexDigit
                                _pop
                      _setup_address
                            _sprintf
                          _uart_puts
                         _write_port
 ---------------------------------------------------------------------------------
 (2) _write_port                                           2     2      0      31
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _pop                                                  3     3      0    1068
                                              6 BANK0      3     3      0
                             _addone
                              _empty
 ---------------------------------------------------------------------------------
 (2) _empty                                                0     0      0     517
                             _addone
 ---------------------------------------------------------------------------------
 (3) _addone                                               2     0      2     517
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _charToHexDigit                                       1     1      0     155
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_read                                             24    24      0   14494
                                             64 BANK0      2     2      0
                                             13 BANK1     22    22      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_putc
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_putc                                            1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_init                                             10    10      0   13826
                                             13 BANK1     10    10      0
                            _sprintf
                      _uart_init_brg
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_init_brg                                       10     8      2      40
                                              4 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _do_blank                                            40    40      0   14503
                                             64 BANK0      2     2      0
                                             13 BANK1     38    38      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_puts
 ---------------------------------------------------------------------------------
 (1) _uart_puts                                            5     3      2    1269
                                              4 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    16      4   12403
                                             59 BANK0      5     1      4
                                              0 BANK1     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3   11329
                                             52 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    13      2   10889
                                             38 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                10     8      2    3354
                                             26 BANK0     10     8      2
                                _pad
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     7      2     702
                                             10 BANK0      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     316
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12    10      2    4939
                                             26 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     4      3    2795
                                             19 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1    1249
                                             12 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     857
                                              4 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     613
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     625
                                              4 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _setup_address                                        3     1      2     366
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _read_port                                            1     1      0      23
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear                                                0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 5     5      0     700
                                             11 COMMON     1     1      0
                                              0 BANK0      4     4      0
                              _first
                               _push
                               _size
                          _uart_getc
 ---------------------------------------------------------------------------------
 (11) _uart_getc                                           3     3      0      80
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _size                                                5     3      2     263
                                              2 COMMON     5     3      2
                             _setCTS
                           i1_addone
 ---------------------------------------------------------------------------------
 (11) _push                                                9     9      0     264
                                              2 COMMON     9     9      0
                             _setCTS
                           i1_addone
 ---------------------------------------------------------------------------------
 (12) i1_addone                                            2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _setCTS                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _first                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear
     _memset
   _do_blank
     _read_port
     _setup_address
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
           _xtoa
             _pad
     _uart_puts
   _do_init
     _sprintf
     _uart_init_brg
     _uart_puts
   _do_read
     _read_port
     _setup_address
     _sprintf
     _uart_putc
     _uart_puts
   _do_write
     _charToHexDigit
     _pop
       _addone
       _empty
         _addone
     _setup_address
     _sprintf
     _uart_puts
     _write_port
   _pop
   _ports_init
   _uart_init
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _uart_puts

 _isr (ROOT)
   _first
   _push
     _setCTS
     i1_addone
   _size
     _setCTS
     i1_addone
   _uart_getc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     43      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     33      3D       7       76.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      B2      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      B2      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Mar  3 15:53:03 2025

               _queue_empty 0064                          l80 0D89                          l76 0DE4  
                        l89 0DCB                ___awdiv@sign 002A         ___wmul@multiplicand 0026  
                       l100 0FB4                         l101 0FDA                         l102 0FFF  
                       l210 0247                         l131 0EE3                         l115 0F0A  
                       l212 0253                         l125 0D41                         l109 0DB4  
                       l213 0268                         l222 078E                         l214 025C  
                       l135 03D9                         l143 0359                         l151 0E3A  
                       l128 0D52                         l240 0D98                         l137 03E6  
                       l241 0D97                         l145 035B                         l226 07CF  
                       l218 02CF                         l251 07EA                         l243 0D9D  
                       l155 053A                         l163 05B7                         l252 07E9  
                       l405 0E85                         l237 0D8E                         l157 0552  
                       l246 07D2                         l238 0D8D                         l407 0E99  
                       l255 07F9                         l247 07D1                         l167 05B3  
                       l441 06DB                         l419 0F3E                         l571 072F  
                       l558 0680                         l902 019E                         l906 019C  
                       l915 0222                         l950 0171                         l942 009F  
                       l935 0620                         l927 04DD                         l944 00A9  
                       l962 0E00                         l874 0E59                         l867 0E1D  
                       l981 0781                         l894 0F87                         l992 07FC  
                       l969 0D76                         l897 0FA7                         l899 0FB2  
                       l989 0EBE             ??_uart_init_brg 0026                         _abs 0D65  
                       _pad 0F74                         _isr 0004                         _pop 0FB3  
              ___awmod@sign 002A                         wreg 0009                 do_write@ads 00B2  
                      ?_abs 002B                        l2200 0E01                        l3000 00D3  
                      l2202 0E07                        l3010 00F7                        l3002 00D5  
                      l2204 0E0D                        l3020 0123                        l3012 0103  
                      l3004 00DB                        l3100 0DB2                        l2206 0E11  
                      l3030 0146                        l3022 012F                        l3014 0110  
                      l3006 00E3                        l3110 0782                        l3104 0D32  
                      l3024 013D                        l3032 014F                        l3008 00ED  
                      l3200 03A7                        l3120 078F                        l3112 0782  
                      l3106 0D35                        l3018 0119                        l3210 03E1  
                      l3202 03C1                        l3130 07C7                        l3122 079C  
                      l3114 0784                        l3042 0DB5                        l2330 0F0B  
                      l2260 0D48                        l3108 0D38                        l3036 0159  
                      l3052 0DE7                        l3140 0E43                        l3204 03C9  
                      l3132 07C8                        l3124 07AB                        l3116 0786  
                      l2316 0D8C                        l3220 02D5                        l3044 0DC8  
                      l3300 054A                        l2340 0F36                        l2332 0F14  
                      l2262 0D4A                        l3054 0DEC                        l3142 0E45  
                      l3150 07D7                        l3206 03CC                        l3126 07B0  
                      l3118 078B                        l2318 0D93                        l3230 02E2  
                      l3214 02D0                        l3070 0FDD                        l3062 0FB3  
                      l2430 0EEE                        l2350 06A0                        l2334 0F18  
                      l3310 0568                        l3302 0553                        l2264 0D4B  
                      l2256 0D42                        l3056 0DF4                        l3144 0E50  
                      l3136 0E3D                        l3152 07DC                        l3208 03DB  
                      l3128 07B2                        l3240 0301                        l3216 02D2  
                      l3048 0DCA                        l3080 0FFD                        l3072 0FEA  
                      l3064 0FB6                        l3160 0E23                        l2440 0EF3  
                      l2432 0EEF                        l2424 0EE4                        l2360 06C6  
                      l2352 06A4                        l2344 0681                        l2336 0F20  
                      l3320 0583                        l3312 056E                        l3304 0562  
                      l2258 0D45                        l3058 0DFE                        l3138 0E41  
                      l3154 07E3                        l3170 0ECA                        l3250 033C  
                      l3242 0312                        l3234 02ED                        l3226 02D9  
                      l3218 02D4                        l3074 0FF6                        l3066 0FC3  
                      l3162 0E2B                        l2450 0EFB                        l2442 0EF7  
                      l2434 0EF0                        l2426 0EE6                        l2362 06CD  
                      l2354 06AB                        l2346 0692                        l2338 0F27  
                      l3330 059D                        l3322 0589                        l3314 0571  
                      l3306 0565                        l2380 0DDB                        l3156 07EF  
                      l3148 07D0                        l3172 0EDB                        l3252 0341  
                      l3244 031A                        l3236 02F7                        l3228 02DE  
                      l3092 0DA9                        l3084 0DA0                        l3076 0FFB  
                      l3068 0FD2                        l3164 0E35                        l3260 04DE  
                      l2460 0F01                        l2452 0EFC                        l2444 0EF8  
                      l2436 0EF1                        l2428 0EEC                        l2356 06BD  
                      l2348 0695                        l2364 06D3                        l3332 05A5  
                      l3324 058D                        l3316 0579                        l3308 0567  
                      l2382 0DDD                        l3190 037A                        l3182 0366  
                      l3174 035C                        l3254 0345                        l3246 0334  
                      l3238 02FC                        l3094 0DAF                        l3086 0DA6  
                      l3078 0FFC                        l3166 0E37                        l3158 0E20  
                      l3262 04E0                        l2470 0F06                        l2462 0F02  
                      l2454 0EFD                        l2446 0EF9                        l2438 0EF2  
                      l2358 06C5                        l2630 023F                        l3334 05AB  
                      l3326 0593                        l3318 057F                        l2384 0DE2  
                      l2800 067C                        l3192 0384                        l3184 036B  
                      l3176 0363                        l3168 0EBF                        l3256 034B  
                      l3248 033B                        l3280 04FB                        l3272 04E7  
                      l3264 04E2                        l2472 0F09                        l2464 0F03  
                      l2456 0EFE                        l2448 0EFA                        l2632 0243  
                      l2624 0223                        l3328 0597                        l3336 05B3  
                      l2378 0DCC                        l2810 06E7                        l2730 074A  
                      l2722 0730                        l3194 0389                        l3186 036F  
                      l3258 0350                        l3290 0527                        l3282 0500  
                      l3274 04EC                        l3266 04E3                        l2466 0F04  
                      l2458 0EFF                        l2650 0270                        l2642 0260  
                      l2634 024B                        l2626 0231                        l3338 05BA  
                      l2820 06FB                        l2812 06E9                        l2804 06DC  
                      l2732 0768                        l2724 0736                        l2740 0E9F  
                      l2900 0201                        l3196 038E                        l3292 052C  
                      l3284 0506                        l3276 04F0                        l2468 0F05  
                      l2660 02CD                        l2652 02AA                        l2644 0264  
                      l2636 024F                        l2628 023A                        l2830 0716  
                      l2822 0700                        l2814 06ED                        l2806 06DE  
                      l2734 0778                        l2726 073B                        l2742 0EAB  
                      l2902 0206                        l2750 0E81                        l3198 0396  
                      l3294 0531                        l3286 0511                        l2662 02CE  
                      l2654 02BC                        l2638 0257                        l2646 0268  
                      l2760 0621                        l2832 071B                        l2824 0704  
                      l2816 06F2                        l2808 06E2                        l2728 0740  
                      l2744 0EB0                        l2904 020C                        l2752 0E8A  
                      l2920 047E                        l2912 0469                        l3296 053E  
                      l3288 051D                        l2648 026D                        l2656 02CA  
                      l2770 0632                        l2762 0623                        l2826 0708  
                      l2818 06F8                        l2834 0721                        l2738 0E9C  
                      l2850 0F8A                        l2842 0F76                        l2906 0210  
                      l2754 0E8F                        l2746 0E7A                        l2930 0497  
                      l2922 0481                        l2914 046B                        l3298 0541  
                      l2658 02CB                        l2780 0646                        l2772 0637  
                      l2764 0627                        l2836 0726                        l2828 0712  
                      l2860 0D6A                        l2852 0F94                        l2844 0F7A  
                      l2908 0217                        l2756 0E95                        l2748 0E7D  
                      l2940 04BA                        l2932 0498                        l2924 0487  
                      l2916 0477                        l2790 0666                        l2782 064B  
                      l2774 063B                        l2766 062C                        l2838 072B  
                      l2862 0D6B                        l2854 0F99                        l2846 0F80  
                      l2870 0185                        l2950 05C3                        l2942 04BF  
                      l2934 049C                        l2926 048C                        l2918 047A  
                      ?_pad 0033                        l2792 0667                        l2784 064F  
                      l2776 063D                        l2768 062E                        l2856 0FAC  
                      l2848 0F85                        l2880 01A2                        l2872 018A  
                      l2960 0600                        l2952 05C5                        l2944 04CC  
                      l2928 0490                        l2936 04A5                        l2794 066C  
                      l2786 0653                        l2778 0643                        l2858 0D65  
                      l2890 01CA                        l2882 01A5                        l2874 018E  
                      l2866 0174                        l2954 05D6                        l2962 0608  
                      l2938 04B3                        l2946 04D1                        l2970 0D80  
                      l2788 0662                        l2796 0672                        l2884 01A9  
                      l2892 01DA                        l2876 0193                        l2868 0176  
                      l2964 061C                        l2956 05DE                        l2980 0086  
                      l2798 0677                        l2894 01E8                        l2886 01C5  
                      l2878 0198                        l2958 05EB                        l2982 008E  
                      l2974 0D83                        l2896 01EF                        l2888 01C6  
                      l2992 00AC                        l2984 0097                        l2968 0D77  
                      l2898 01F4                        l2994 00BC                        l2986 009C  
                      l2978 0075                        l2996 00C1                        l2988 00A0  
                      l2998 00CF                        ?_isr 0070                        ?_pop 0070  
                      STR_1 1079                        STR_2 102C                        STR_3 1000  
                      STR_4 1056                        STR_5 1060                        STR_6 107D  
                      STR_7 103B                        STR_8 1068                        STR_9 1074  
                      u2010 06BD                        u2011 06BC                        u2005 06A5  
                      u2030 06D3                        u2031 06D2                        u2015 06B9  
                      u3000 0123                        u3001 0122                        u2025 06C7  
                      u3010 0DC8                        u3011 0DC7                        u3020 0DFE  
                      u3100 07F9                        u2300 0260                        u3021 0DFD  
                      u3101 07F8                        u2301 025F                        _LATA 010C  
                      u3110 036B                        u3030 0FDA                        u2310 0264  
                      u2230 023A                        _LATB 010D                        u3111 036A  
                      u3015 0DC4                        u3031 0FD9                        u2311 0263  
                      u2231 0239                        u3120 038E                        u3040 0DA6  
                      u2320 026D                        u2240 023F                        _LATD 010F  
                      u3121 038D                        u3041 0DA5                        u2321 026C  
                      u2241 023E                        u3130 03D9                        u3050 0DAF  
                      u3210 053A                        u2330 02B7                        u2250 0243  
                      u3131 03D8                        u3051 0DAE                        u3211 0539  
                      u2251 0242                        u3140 03E1                        u3060 078B  
                      u2260 024B                        u3220 056E                        u3141 03E0  
                      u3061 078A                        u3205 0515                        u2261 024A  
                      u3221 056D                        u2430 0736                        u2510 0E95  
                      u3070 07B0                        u3150 02DE                        u2270 024F  
                      u3230 057F                        u2431 0735                        u2511 0E94  
                      u3071 07AF                        u3151 02DD                        u2335 02B3  
                      u2271 024E                        u3231 057E                        u2600 0672  
                      u2520 0627                        u2440 073B                        u3080 07D7  
                      u3160 0301                        u2280 0257                        u3240 0589  
                      u2601 0671                        u2521 0626                        u2441 073A  
                      u2505 0E8B                        u3081 07D6                        u3161 0300  
                      u2281 0256                        u3241 0588                        u2610 0677  
                      u2530 0632                        u2450 074A                        u3090 07EF  
                      u3170 033B                        u2290 025B                        u3250 0593  
                      u2611 0676                        u2531 0631                        u2451 0749  
                      u3091 07EE                        u3171 033A                        u3307 0E31  
                      u2291 025A                        u3251 0592                        u1820 0E1D  
                      u2540 0643                        u2700 0726                        u2620 06E2  
                      u2460 0768                        u3180 0359                        u3260 059D  
                      u1821 0E1C                        u2541 0642                        u2701 0725  
                      u2621 06E1                        u2461 0767                        u3181 0358  
                      u3317 0FBC                        u3261 059C                        u2630 06ED  
                      u2470 0EBE                        u2710 0F7A                        u1910 0D93  
                      u3190 04EC                        u3270 05AB                        u2631 06EC  
                      u2471 0EBD                        u2711 0F79                        u1911 0D92  
                      u3327 0FCB                        u3191 04EB                        u3271 05AA  
                      u2560 0653                        u2640 06F8                        u2720 0F85  
                      u2800 01E8                        u2480 0E81                        u1920 0D9D  
                      u2561 0652                        u2641 06F7                        u2465 0764  
                      u2721 0F84                        u2801 01E7                        u2481 0E80  
                      u3337 0795                        u1921 0D9C                        u2730 0FA7  
                      u2810 01EF                        u1930 0F18                        u2555 0647  
                      u2731 0FA6                        u2811 01EE                        u3347 07A4  
                      u1931 0F17                        u2580 0662                        u2660 0708  
                      u2740 0FAC                        u2820 01F4                        u2900 04CC  
                      u3357 0D3E                        u2581 0661                        u2661 0707  
                      u2741 0FAB                        u2821 01F3                        u2805 01E4  
                      u2901 04CB                        u2670 0712                        u2750 0D6A  
                      u2830 0201                        u2910 04D1                        u2575 0654  
                      u2671 0711                        u2655 06FC                        u2751 0D69  
                      u2735 0FA3                        u2831 0200                        u2495 0E86  
                      u2911 04D0                        u3287 05BB                        u2840 0206  
                      u2760 017B                        u2920 05D6                        u1960 0F36  
                      u2585 065E                        u2841 0205                        u2761 0179  
                      u2921 05D5                        u2905 04C8                        u3297 0E28  
                      u1961 0F35                        u1945 0F21                        u2690 0721  
                      u2850 020C                        u2770 017C                        u2930 061C  
                      u1970 0692                        u2595 0668                        u2691 0720  
                      u2675 070E                        u2851 020B                        u2835 01FD  
                      u2931 061B                        u1971 0691                        u1955 0F28  
                      u2780 018A                        u2860 0487                        u2940 0D80  
                      u2685 0717                        u2781 0189                        u2861 0486  
                      u2941 0D7F                        u2790 0193                        u2870 04B3  
                      u2950 0086                        u1990 06A4                        u2791 0192  
                      u2871 04B2                        u2951 0085                        u1991 06A3  
                      u2880 04BA                        u2960 00C1                        u2881 04B9  
                      u2961 00C0                        u1985 0696                        u2890 04BF  
                      u2970 00D3                        u2891 04BE                        u2875 04AF  
                      u2971 00D2                        u2980 00ED                        u2981 00EC  
                      u2990 00F7                        u2991 00F6                        i1l80 0D64  
                      i1l73 0D19                        i1l93 040C                        i1l85 0F73  
                      i1l96 0466           uart_init_brg@rate 002B                        abs@a 002B  
                      _dbuf 0120                        _head 007C                        _main 0553  
                      _dtoa 0172                        _tail 0065                        _prec 00D5  
                      pad@i 0037                        _size 0F3F                        pad@p 0034  
                      fsr0h 0005                        fsr1h 0007                        indf0 0000  
                      fsr0l 0004                        indf1 0001                        fsr1l 0006  
                      _push 03E7                        btemp 007E                        _xtoa 0467  
                      isr@c 0023                        isr@n 0020                        pop@c 0028  
                      start 0040             ?_charToHexDigit 0070                do_write@addr 00B5  
              do_write@data 00B1                       ??_abs 002D                       ??_pad 0036  
                     ??_isr 007B                       ??_pop 0026                       ?_main 0070  
                     ?_dtoa 003A             __end_of___awdiv 0681                       STR_10 101D  
                     STR_11 107D                       STR_12 1049                       STR_13 106F  
           __end_of___awmod 0730                       ?_size 0072                       ?_push 0070  
           __end_of___lldiv 06DC             ___awdiv@divisor 0024                       ?_xtoa 003A  
                     i1l120 003B                       i1l105 0D25                       i1l122 003E  
                     i1l231 0E6A                       i1l234 0E79                       i1l229 0E63  
           ___awdiv@counter 0029                       _RCREG 0199                vfpfcnvrt@fmt 0046  
                     _SPBRG 019B                       _PORTD 000F                       _TRISB 008D  
                     _TRISD 008F                       _TRISE 0090                       _TXREG 019A  
       ___lmul@multiplicand 0028             __end_of_do_init 0EE4             __end_of_do_read 035C  
           ??_setup_address 0026                       _clear 0DCC                       _flags 0063  
                     _first 0D1A                       _empty 0DB5         read_prec_or_width@c 002F  
       read_prec_or_width@n 0030                       _fputc 0730                       _fputs 0E9A  
                     pad@fp 0039                       _width 00D3                       _queue 23F0  
                     _putch 07FC                       dtoa@d 003A                       dtoa@i 0044  
                     dtoa@p 0040                       dtoa@s 0043                       dtoa@w 0041  
                     isr@ok 0022            __end_ofi1_addone 0D65                       size@s 0075  
                     push@c 007A                       push@s 0076                       status 0003  
                     wtemp0 007E             __end_of_sprintf 0E5A                       xtoa@c 0041  
                     xtoa@d 003A                       xtoa@i 0042                       xtoa@p 003E  
                     xtoa@w 003F             __initialization 0042                __end_of_main 05C1  
              __end_of_dtoa 0223                __end_of_size 0F74                __end_of_push 0467  
              __end_of_xtoa 04DE                      ??_main 0062                      ??_dtoa 003C  
            write_port@data 0025                      ??_size 0074                      ??_push 0072  
                    ??_xtoa 003C  __end_of_read_prec_or_width 0621                      ?_clear 0070  
                    ?_first 0070                      ?_empty 0070                      ?_fputc 0024  
                    ?_fputs 002C            ___awdiv@dividend 0026                      _ANSELA 018C  
                    ?_putch 0070                      _ANSELB 018D                      _ANSELC 018E  
                    _ANSELD 018F                      _ANSELE 0190                      i1l2400 03E8  
                    i1l2410 042B                      i1l2402 03F6                      i1l2420 0D1A  
                    i1l2412 0436                      i1l2404 0403                      i1l2414 0444  
                    i1l2406 0408                      i1l2416 0451                      i1l2408 0429  
                    i1l2370 0D5B                      i1l2418 0461                      i1l2198 0D13  
                    i1l2374 0D5E                      i1l2390 0F5A                      i1l2368 0D53  
                    i1l2392 0F5E                      i1l2480 0E67                      u210_20 0E67  
                    u210_21 0E66                      i1l2394 0F6B                      i1l2386 0F3F  
                    i1l2482 0E6F                      i1l2474 0E5B                      i1l2396 0F6F  
                    i1l2388 0F4D                      i1l2484 0E76                      i1l2476 0E5C  
                    i1l2486 0E78                      i1l2478 0E61                      i1l2670 000B  
                    u211_20 0E6F                      i1l2680 002A                      i1l2672 0011  
                    i1l2664 0006                      u211_21 0E6E                      i1l2682 0038  
                    i1l2674 0016                      i1l2666 0008                      i1l2676 001A  
                    i1l2668 0009                      i1l2678 0022                      u204_20 0D5B  
                    u204_21 0D5A                      u205_20 0F5A                      u205_21 0F59  
                    u205_25 0F56                      u206_20 0F6B                      u206_21 0F6A  
                    u206_25 0F67                      u207_20 0403                      u207_21 0402  
                    u207_25 03FF                      u208_20 0429                      u208_21 0428  
                    u208_25 0425                      u209_20 0E61                      u209_21 0E60  
                    u234_20 0016                      u234_21 0015                      u235_20 002A  
                    u235_21 0029                      u236_20 0038                      u236_21 0037  
                    u236_25 0034                      u336_27 0430                      u337_27 043D  
             vfpfcnvrt@done 004C                      _SPBRGH 019C            __end_of_do_blank 03E7  
              vfprintf@cfmt 0059            __end_of_do_write 0553                      ___lmul 0F0B  
                    _addone 0D77                      ___wmul 0E7A                   ??___awdiv 0028  
                 ??___awmod 0028                   ??___lldiv 0038        read_prec_or_width@ap 002A  
                    _setCTS 0D12                      _memset 0E01            ___awdiv@quotient 002B  
           ___awmod@divisor 0024             ___awmod@counter 0029                      pad@buf 0033  
                 ??_do_init 0060                   ??_do_read 0060                      dtoa@fp 003D  
                    fputc@c 0024                      fputs@c 002F                      fputs@i 0030  
                    fputs@s 0032                      putch@c 0070            __end_of_vfprintf 0E01  
                 ??_sprintf 005F                      xtoa@fp 003D     __end_of__initialization 006F  
            __pcstackCOMMON 0070                __pidataBANK0 07FA               __end_of_clear 0DE5  
             __end_of_first 0D26               __end_of_empty 0DCC               __end_of_fputc 0782  
             __end_of_fputs 0EBF               __end_of_putch 07FD                   ?i1_addone 0070  
                   ??_clear 002C                     ??_first 0070                     ??_empty 0026  
                   ??_fputc 0027                     ??_fputs 002D                     ??_putch 0024  
                __pbssBANK0 0063                  __pbssBANK1 00D3                  __pbssBANK2 0120  
          ??_charToHexDigit 0024                  _cmd_active 00DC                  __pmaintext 0553  
                   ?___lmul 0024                     ?_addone 0024                     ?___wmul 0024  
                __pintentry 0004                     ?_setCTS 0070                     ?_memset 0024  
            ___lmul@product 002C                  ??i1_addone 0072       __end_of_uart_init_brg 07D0  
           setup_address@hi 0026                   ?_do_blank 0070                   ?_do_write 0070  
                   ___awdiv 0621                     ___awmod 06DC                     ___lldiv 0681  
                 ?_vfprintf 0054                     _do_init 0EBF                     _do_read 02D0  
                   __ptext1 0223                     __ptext2 0F0B                     __ptext3 0681  
                   __ptext4 0EE4                     __ptext5 04DE                     __ptext6 0E1E  
                   __ptext7 0FB3                     __ptext8 0DB5                     __ptext9 0D77  
                   addone@i 0024       read_prec_or_width@fmt 0032            ___awmod@dividend 0026  
         __end_of_read_port 0D53                  ??_do_blank 0060                     main@cmd 0062  
     __end_of_setup_address 0D42                     _sprintf 0E3B                     clrloop0 0D27  
                ??_do_write 0060        end_of_initialization 006F                     fputc@fp 0026  
                   setCTS@b 0070                     memset@c 0026                     memset@n 0028  
                   memset@p 002A                     fputs@fp 002C          _read_prec_or_width 05C1  
         __end_of_uart_getc 0E7A           __end_of_uart_init 02D0             ___lldiv@divisor 0030  
                do_blank@ok 00CD           __end_of_uart_putc 0D9E           setup_address@addr 0024  
         __end_of_uart_puts 07FA             ___lldiv@counter 003D           __end_of_vfpfcnvrt 0172  
                 _RCSTAbits 019D         ?_read_prec_or_width 002A            vfpfcnvrt@convarg 004D  
                ??_vfprintf 0057                 uart_getc@ok 0071                  _uart_ready 00DB  
                do_read@ads 00AD                  do_read@col 00C0                   _PORTAbits 000C  
                 _PORTCbits 000E                   _TRISAbits 008C                   _TRISCbits 008E  
      ??_read_prec_or_width 002C                  _ports_init 0EE4                   i1addone@i 0070  
                do_write@hi 00AF                  do_write@lo 00B0                   _TXSTAbits 019E  
            __end_of___lmul 0F3F                 vfpfcnvrt@ap 0047              __end_of_addone 0D8A  
               vfpfcnvrt@cp 0052                 vfpfcnvrt@fp 0051              __end_of___wmul 0E9A  
               _BAUDCONbits 019F                  _write_port 0E1E              __end_of_setCTS 0D1A  
            __end_of_memset 0E1E         start_initialization 0042                 __end_of_abs 0D77  
               __end_of_pad 0FB3                 __end_of_isr 0040                 __end_of_pop 1000  
               vfprintf@fmt 0054                    ??___lmul 002C                    ??_addone 0026  
                  ??___wmul 0028                 __pdataBANK0 0065                    ??_setCTS 0070  
                  ??_memset 002A                  memset@dest 0024                 __pbssBIGRAM 23F0  
               __pbssCOMMON 007C                   ___latbits 0003               __pcstackBANK0 0020  
             __pcstackBANK1 00A0                 ?_ports_init 0070                   _dtoa$1197 003E  
              _bytes_popped 00D7                _bytes_pushed 00D9                    ?___awdiv 0024  
                  ?___awmod 0024                    ?___lldiv 0030                 ?_write_port 0070  
                  ?_do_init 0070                    ?_do_read 0070                    ?_sprintf 005B  
                 _read_port 0D42              ___wmul@product 0028                    _LATCbits 010E  
                 clear_ram0 0D26                    _PIE1bits 0091                   _push$1489 0078  
           uart_init@factor 004A                   do_blank@s 00CF                    _PIR1bits 0011  
                uart_getc@c 0070                   _uart_getc 0E5A                   _uart_init 0223  
                 _uart_putc 0D8A                   _uart_puts 07D0                  uart_init@n 0046  
                uart_putc@c 0024                   _vfpfcnvrt 0073                  uart_puts@p 0027  
                uart_puts@s 0024                  _ADCON0bits 009D                    i1_addone 0D53  
         ___wmul@multiplier 0024                   do_write@c 00B4                   do_write@s 00AD  
         ___lmul@multiplier 0024                  ?_read_port 0070                  vfprintf@ap 0056  
                vfprintf@fp 0058                  ?_uart_getc 0070                  ?_uart_init 003E  
                ?_uart_putc 0070                  ?_uart_puts 0024                  ?_vfpfcnvrt 0046  
                sprintf@fmt 005B          uart_init@baud_rate 003E                    _do_blank 035C  
             _uart_init_brg 0782                    __ptext10 0D9E                    __ptext11 02D0  
                  __ptext20 0467                    __ptext12 0D8A                    __ptext21 05C1  
                  __ptext13 0EBF                    __ptext30 0621                    __ptext22 0E7A  
                  __ptext14 0782                    __ptext31 0D32                    __ptext23 0172  
                  __ptext15 035C                    __ptext40 0D12                    __ptext32 0D42  
                  __ptext24 0F74                    __ptext16 07D0                    __ptext41 0D1A  
                  __ptext33 0DCC                    __ptext25 0E9A                    __ptext17 0E3B  
                  __ptext34 0E01                    __ptext26 0730                    __ptext18 0DE5  
                  __ptext27 07FC                    __ptext19 0073                    __ptext36 0E5A  
                  __ptext28 0D65                    __ptext37 0F3F                    __ptext29 06DC  
                  __ptext38 03E7                    __ptext39 0D53                    _do_write 04DE  
           charToHexDigit@c 0024                do_blank@addr 00D1                do_blank@data 00CE  
                  do_init@s 00AD                    do_read@s 00BD                    int$flags 007E  
                  _vfprintf 0DE5                  _INTCONbits 000B              ?_uart_init_brg 0024  
            __pstringtext10 1074              __pstringtext11 1079              __pstringtext12 107D  
            __pstringtext13 0000                ??_ports_init 0024                 ??_read_port 0024  
             _setup_address 0D32                    intlevel1 0000                   sprintf@ap 00A0  
          ___lldiv@dividend 0034                 do_blank@ads 00AD                 ??_uart_getc 0070  
               ??_uart_init 0042                 ??_uart_putc 0024                 ??_uart_puts 0026  
            _charToHexDigit 0D9E          __end_of_ports_init 0F0B                 ??_vfpfcnvrt 0048  
              ??_write_port 0024               __pstringtext1 1000               __pstringtext2 101D  
             __pstringtext3 102C               __pstringtext4 103B               __pstringtext5 1049  
             __pstringtext6 1056               __pstringtext7 1060               __pstringtext8 1068  
             __pstringtext9 106F                    sprintf@f 00A2                    sprintf@s 00A1  
          ___lldiv@quotient 0039                 do_read@addr 00C1                 do_init@rate 00B5  
               do_read@data 00BF              ?_setup_address 0024          __end_of_write_port 0E3B  
             read_port@data 0024      __end_of_charToHexDigit 0DB5  
